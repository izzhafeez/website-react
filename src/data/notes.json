{
  "notes": {
    "Parity Correction": {
      "course": "CS2100",
      "parents": [
        "Error Correction"
      ],
      "topic": "Parity Correction",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Only 7 bits are necessary for all ASCII characters",
            "Last bit is to check whether odd or even (both computers need to decide on either odd or even, so that can check for errors afterwards)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": "Important"
    },
    "Error Correction": {
      "course": "CS2100",
      "parents": [

      ],
      "topic": "Error Correction",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Parity Correction"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Binary Excess": {
      "course": "CS2100",
      "parents": [
        "Binary System"
      ],
      "topic": "Binary Excess",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Excess-n means that 000 is -n"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": "Important"
    },
    "Floating Point Representation": {
      "course": "CS2100",
      "parents": [
        "Binary Real Numbers"
      ],
      "topic": "Floating Point Representation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Flexible number of decimal places",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Sign - 0 for positive, 1 for negative",
            "Exponent - gives the power (exponent + 127)",
            "Mantissa - basically the decimal part of the exponential, can cover the rest of what's permitted",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 8,
          "points": [
            "110.1₂ = 1.101₂ × 2² ⟹ Mantissa is 101"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": "Important"
    },
    "Fixed Point Representation": {
      "course": "CS2100",
      "parents": [
        "Binary Real Numbers"
      ],
      "topic": "Fixed Point Representation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The number of bits allocated for the whole number are fixed, decimal part is fixed"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Real Numbers": {
      "course": "CS2100",
      "parents": [
        "Binary System"
      ],
      "topic": "Binary Real Numbers",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Fixed Point Representation",
            "Floating Point Representation"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary 2s Arithmetic": {
      "course": "CS2100",
      "parents": [
        "Binary Arithmetic",
        "Binary 2s Complement"
      ],
      "topic": "Binary 2s Arithmetic",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Simply add the two numbers together and ignore overflow"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary 1s Arithmetic": {
      "course": "CS2100",
      "parents": [
        "Binary Arithmetic",
        "Binary 1s Complement"
      ],
      "topic": "Binary 1s Arithmetic",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Add the 2 numbers as usual",
            "If there is overflow, then add 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Overflow": {
      "course": "CS2100",
      "parents": [
        "Binary Arithmetic"
      ],
      "topic": "Binary Overflow",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Easy to detect as positive+positive will become negative, and negative+negative will become positive",
            "Happens when the number is large and does not scale properly",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "0110+0110=1100 (Overflow)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Arithmetic": {
      "course": "CS2100",
      "parents": [
        "Binary System"
      ],
      "topic": "Binary Arithmetic",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Binary Overflow"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Binary 1s Arithmetic",
            "Binary 2s Arithmetic"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "MSB": {
      "course": "CS2100",
      "parents": [
        "Number Systems"
      ],
      "topic": "MSB",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Most Significant Bit"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary 2s Complement": {
      "course": "CS2100",
      "parents": [
        "Binary Negative Numbers"
      ],
      "topic": "Binary 2s Complement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Invert all bits then add 1 to negate value",
            "Can also invert by maintaining the trailing 0s, then inverting the rest",
            "<MA -x=2ⁿ-x MA>",
            "/MSB is still sign and means -128",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "Zero - 00000000",
            "Min - -2ⁿ⁻¹ (10000000)",
            "Max - 2ⁿ⁻¹-1 (01111111)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 11,
          "points": [

          ],
          "sublinks": [
            "Binary 2s Arithmetic"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary 1s Complement": {
      "course": "CS2100",
      "parents": [
        "Binary Negative Numbers"
      ],
      "topic": "Binary 1s Complement",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Invert all bits to negate value",
            "<MA -x=2ⁿ-x-1 MA>",
            "/MSB is still sign and means -127",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "Zero - 00000000 or 11111111",
            "Min - -(2ⁿ⁻¹-1) (10000000)",
            "Max - 2ⁿ⁻¹-1 (01111111)",
            "Not used in the real world",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 11,
          "points": [
            "<MA (00001110)₂ = (00001110)₁s MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 14,
          "points": [

          ],
          "sublinks": [
            "Binary 1s Arithmetic"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Sign Magnitude": {
      "course": "CS2100",
      "parents": [
        "Binary Negative Numbers"
      ],
      "topic": "Binary Sign Magnitude",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Use 1 bit for sign and 7 bits for magnitude",
            "Just invert the sign bit to change sign",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<MA 00110100 = +110100₂ = +52₁₀ MA>",
            "<MA 00000000 = 10000000 = 0₁₀ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Negative Numbers": {
      "course": "CS2100",
      "parents": [
        "Binary System"
      ],
      "topic": "Binary Negative Numbers",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Binary Sign Magnitude",
            "Binary 1s Complement",
            "Binary 2s Complement"
          ]
        }
      },
      "date": "13/08/2022",
      "important": "Important"
    },
    "Binary Hexadecimal Conversion": {
      "course": "CS2100",
      "parents": [

      ],
      "topic": "Binary Hexadecimal Conversion",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Partition in groups of 4",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<MA (101 1101 1001) 2 = (5D9) 16 MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Octal Conversion": {
      "course": "CS2100",
      "parents": [
        "Binary Conversion"
      ],
      "topic": "Binary Octal Conversion",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Partition in groups of 3",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<MA (10 111 011 001) 2 = (2731) 8 MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Decimal Conversion": {
      "course": "CS2100",
      "parents": [
        "Binary Conversion"
      ],
      "topic": "Binary Decimal Conversion",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Successively multiply by 2 until fractuibak product is 0",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<MA",
            "0.3125*2 = 0.625 → 0",
            "0.625*2 = 1.25 → 1",
            "0.25*2 = 0.5 → 0",
            "0.5*2 = 1 → 1",
            "⟹ 0.3125 10 = 0.0101 2",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Whole Number Conversion": {
      "course": "CS2100",
      "parents": [
        "Binary Conversion"
      ],
      "topic": "Binary Whole Number Conversion",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Successively divide by 2 until quotient is 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary Conversion": {
      "course": "CS2100",
      "parents": [
        "Binary System"
      ],
      "topic": "Binary Conversion",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Binary Whole Number Conversion",
            "Binary Decimal Conversion",
            "Binary Octal Conversion"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Hexadecimal System": {
      "course": "CS2100",
      "parents": [
        "C Number Systems"
      ],
      "topic": "C Hexadecimal System",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<C 0x32 C> is for hexadecimal number (32)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Octal System": {
      "course": "CS2100",
      "parents": [
        "C Number Systems"
      ],
      "topic": "C Octal System",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<C 032 C> is for octal number (32)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Number Systems": {
      "course": "CS2100",
      "parents": [
        "Number Systems"
      ],
      "topic": "C Number Systems",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "C Octal System",
            "C Hexadecimal System"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Binary System": {
      "course": "CS2100",
      "parents": [
        "Number Systems"
      ],
      "topic": "Binary System",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Binary Conversion",
            "Binary Negative Numbers",
            "Binary Arithmetic",
            "Binary Excess",
            "Binary Real Numbers"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Number Systems": {
      "course": "CS2100",
      "parents": [
        "CS2100"
      ],
      "topic": "Number Systems",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "C Number Systems",
            "Binary System",
            "MSB"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Continue": {
      "course": "CS2100",
      "parents": [
        "C Repetition Statements"
      ],
      "topic": "C Continue",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Skips to the next iteration of the innermost loop"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Break": {
      "course": "CS2100",
      "parents": [
        "C Repetition Statements"
      ],
      "topic": "C Break",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Breaks the innermost loop"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Repetition Statements": {
      "course": "CS2100",
      "parents": [
        "C Programming"
      ],
      "topic": "C Repetition Statements",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "C Break",
            "C Continue"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Short Circuit Evaluation": {
      "course": "CS2100",
      "parents": [
        "C Selection Statements"
      ],
      "topic": "C Short Circuit Evaluation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Skips the second part of the expression if unnecessary",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<C e1 || e2 C>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Logical Operators": {
      "course": "CS2100",
      "parents": [
        "C Selection Statements"
      ],
      "topic": "C Logical Operators",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Combining two or more boolean expressions",
            "&& || !"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Truth Values": {
      "course": "CS2100",
      "parents": [
        "C Selection Statements"
      ],
      "topic": "C Truth Values",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Boolean values",
            "0 is false, anything else is true"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Condition Operators": {
      "course": "CS2100",
      "parents": [
        "C Selection Statements"
      ],
      "topic": "C Condition Operators",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Expression evaluated to true or false"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Selection Statements": {
      "course": "CS2100",
      "parents": [
        "C Programming"
      ],
      "topic": "C Selection Statements",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "C Condition Operators",
            "C Truth Values",
            "C Logical Operators",
            "C Short Circuit Evaluation"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Output Placeholder": {
      "course": "CS2100",
      "parents": [
        "C Output"
      ],
      "topic": "C Output Placeholder",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "<C %c C> - char",
            "<C %d C> - int",
            "<C %f C> - float/double",
            "<C %e C> - float/double (scientific notation)",
            "<C %p C> - pointer",
            "<C %s C> - string"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Input Placeholder": {
      "course": "CS2100",
      "parents": [
        "C Input"
      ],
      "topic": "C Input Placeholder",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "<C %c C> - char",
            "<C %d C> - int",
            "<C %f C> - float",
            "<C %lf C> - double",
            "<C %s C> - string"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Output": {
      "course": "CS2100",
      "parents": [
        "C Input Output"
      ],
      "topic": "C Output",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "C Output Placeholder"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<C printf() C>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Input": {
      "course": "CS2100",
      "parents": [
        "C Input Output"
      ],
      "topic": "C Input",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "C Input Placeholder"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<C scanf() C>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Escape Sequence": {
      "course": "CS2100",
      "parents": [
        "C Input Output"
      ],
      "topic": "C Escape Sequence",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "<C \\n C> - new line",
            "<C \\t C> - horizontal tab",
            "<C \\\" C> - double quote",
            "<C %% C> - % character"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Input Output": {
      "course": "CS2100",
      "parents": [
        "C Program Structure"
      ],
      "topic": "C Input Output",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "C Escape Sequence",
            "C Input",
            "C Output"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Macro Expansions": {
      "course": "CS2100",
      "parents": [
        "Preprocessor Directive"
      ],
      "topic": "Macro Expansions",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Define a macro for a constant value",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<C #define Π 3.142 C>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Header Files": {
      "course": "CS2100",
      "parents": [
        "Preprocessor Directive"
      ],
      "topic": "C Header Files",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Enables the user to use certain functions like scanf() printf()",
            "Basically imports",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<C #include <stdio.h> C>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Preprocessor Directive": {
      "course": "CS2100",
      "parents": [
        "C Program Structure"
      ],
      "topic": "Preprocessor Directive",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "What the computer will do before running the actual code",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "C Header Files",
            "Macro Expansions"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Program Structure": {
      "course": "CS2100",
      "parents": [
        "C Programming"
      ],
      "topic": "C Program Structure",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Preprocessor Directive",
            "C Input Output"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Assignment Operators": {
      "course": "CS2100",
      "parents": [
        "C Operator Associativity"
      ],
      "topic": "C Assignment Operators",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Associativity - R2L",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "= +="
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Ternary Operators": {
      "course": "CS2100",
      "parents": [
        "C Operator Associativity"
      ],
      "topic": "C Ternary Operators",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Associativity - R2L",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "cond ? e1 : e2"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Binary Operators": {
      "course": "CS2100",
      "parents": [
        "C Operator Associativity"
      ],
      "topic": "C Binary Operators",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Associativity - L2R",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "* / % + - < > == ≠ && ||"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Unary Operators": {
      "course": "CS2100",
      "parents": [
        "C Operator Associativity"
      ],
      "topic": "C Unary Operators",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Associativity - R2L",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "* & + - ! ~ ++expr --expr (typecast) sizeof "
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Primary Expression Operators": {
      "course": "CS2100",
      "parents": [
        "C Operator Associativity"
      ],
      "topic": "C Primary Expression Operators",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Associativity - L2R",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "() [] . → expr++ expr--"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Operator Associativity": {
      "course": "CS2100",
      "parents": [
        "C Programming"
      ],
      "topic": "C Operator Associativity",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "y=x++ ⟹ x ≠ y",
            "y=++x ⟹ x = y",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "C Primary Expression Operators",
            "C Unary Operators",
            "C Binary Operators",
            "C Ternary Operators",
            "C Assignment Operators"
          ]
        }
      },
      "date": "13/08/2022",
      "important": "Important"
    },
    "Von Neumann Architecture": {
      "course": "CS2100",
      "parents": [
        "C Programming"
      ],
      "topic": "Von Neumann Architecture",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Describes a computer consisting of CPU, Memory and IO"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Structure Modification": {
      "course": "CS2100",
      "parents": [
        "Structures (CO)"
      ],
      "topic": "Structure Modification",
      "contents": {
        "Code <C": {
          "section": "Code ",
          "index": 0,
          "points": [
            "strcpy((*player ptr).name, \"Peter\");",
            "(*player ptr).age = 56;",
            "",
            "strcpy(player ptr->name, \"Peter\");",
            "player ptr->age = 56;",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Structure Accessing": {
      "course": "CS2100",
      "parents": [
        "Structures (CO)"
      ],
      "topic": "Structure Accessing",
      "contents": {
        "Code <C": {
          "section": "Code ",
          "index": 0,
          "points": [
            "box t.height;",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Structure Declaration": {
      "course": "CS2100",
      "parents": [
        "Structures (CO)"
      ],
      "topic": "Structure Declaration",
      "contents": {
        "Code <C": {
          "section": "Code ",
          "index": 0,
          "points": [
            "typedef struct {",
            " int length, width, height;",
            "} box t;",
            "",
            "box t box = {3,4,5};",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Structures (CO)": {
      "course": "CS2100",
      "parents": [
        "Arrays Strings Structures"
      ],
      "topic": "Structures (CO)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Grouping of members of different types",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Structure Declaration",
            "Structure Accessing",
            "Structure Modification"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "String Functions": {
      "course": "CS2100",
      "parents": [
        "Strings (CO)"
      ],
      "topic": "String Functions",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "strlen(s) - number of characters in s",
            "strcmp(s1, s2) - compares strings for ordering",
            "strncmp(s1, s2, n) - compares the first n characters",
            "strcpy(s1, s2) - copies s2 values to s1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "String IO": {
      "course": "CS2100",
      "parents": [
        "Strings (CO)"
      ],
      "topic": "String IO",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "fgets() reads a string, including a newline, so may need to remove that \\n",
            "printf() prints a string",
            "puts() prints a string, and adds a newline"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Strings (CO)": {
      "course": "CS2100",
      "parents": [
        "Arrays Strings Structures"
      ],
      "topic": "Strings (CO)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A string is an array of characters",
            "Terminates with \\0, otherwise it is just an array of strings",
            "Without the \\0, any accesses of the string will result in illegal access of memory (excess characters will be jibberish)"
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "String IO",
            "String Functions"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Array Modification": {
      "course": "CS2100",
      "parents": [
        "Arrays (CO)"
      ],
      "topic": "Array Modification",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Arrays can be modified once they are sent into a function, even if unintentional"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Array Parameters": {
      "course": "CS2100",
      "parents": [
        "Arrays (CO)"
      ],
      "topic": "Array Parameters",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can be written as [] in function header",
            "Provide size as another parameter",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "function f(int [], int size);"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Array Assignment": {
      "course": "CS2100",
      "parents": [
        "Arrays (CO)"
      ],
      "topic": "Array Assignment",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "We cannot reassign arrays, as this will point it somewhere else",
            "We must copy the values individually",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "L1 = L2 (illegal)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Array Pointer": {
      "course": "CS2100",
      "parents": [
        "Arrays (CO)"
      ],
      "topic": "Array Pointer",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Array pointer will be the same as the &a[0] first element pointer"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Invalid Array Declaration": {
      "course": "CS2100",
      "parents": [
        "Array Declaration"
      ],
      "topic": "Invalid Array Declaration",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "c[2] = {4,5,6};",
            "int c[5]; c[5] = {4,5,6};"
          ],
          "sublinks": [

          ]
        }
      },
      "date": null,
      "important": null
    },
    "Valid Array Declaration": {
      "course": "CS2100",
      "parents": [
        "Array Declaration"
      ],
      "topic": "Valid Array Declaration",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "c[] = {4,5,6};",
            "c[5] = {4,5,6}; ⟹ missing values are padded with 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Array Declaration": {
      "course": "CS2100",
      "parents": [
        "Arrays (CO)"
      ],
      "topic": "Array Declaration",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Includes element type, name and size",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Valid Array Declaration",
            "Invalid Array Declaration"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Arrays (CO)": {
      "course": "CS2100",
      "parents": [
        "Arrays Strings Structures"
      ],
      "topic": "Arrays (CO)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Array Declaration",
            "Array Pointer",
            "Array Assignment",
            "Array Parameters",
            "Array Modification"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Arrays Strings Structures": {
      "course": "CS2100",
      "parents": [
        "CS2100"
      ],
      "topic": "Arrays Strings Structures",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Arrays (CO)",
            "Strings (CO)",
            "Structures (CO)"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Activation Record": {
      "course": "CS2100",
      "parents": [
        "Scope Rule"
      ],
      "topic": "Activation Record",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "When a function is called, an activation record is created in the call stack, and memory is allocated for local parameters and variables"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Formal Parameter": {
      "course": "CS2100",
      "parents": [
        "Local Parameter"
      ],
      "topic": "Formal Parameter",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Formal parameters are local to the function they are declared in"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Local Parameter": {
      "course": "CS2100",
      "parents": [
        "Automatic Variable"
      ],
      "topic": "Local Parameter",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Local parameters are only accessible in the function they are defined in",
            "They can't even change the value outside the function (have to use pointers)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Formal Parameter"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Automatic Variable": {
      "course": "CS2100",
      "parents": [
        "Scope Rule"
      ],
      "topic": "Automatic Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Variables that only exist in memory when the function is running",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            "Local Function"
          ],
          "sublinks": [
            "Local Parameter"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Static Variable": {
      "course": "CS2100",
      "parents": [
        "Scope Rule"
      ],
      "topic": "Static Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Static Variables exist in memory even after the function is completed"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Scope Rule": {
      "course": "CS2100",
      "parents": [
        "Pointers And Functions"
      ],
      "topic": "Scope Rule",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Determines which variables are available where",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Static Variable",
            "Automatic Variable",
            "Activation Record"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Incrementing Pointers": {
      "course": "CS2100",
      "parents": [
        "Pointer"
      ],
      "topic": "Incrementing Pointers",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "When performing a pointer++, the memory shifts by /Memory Allocation",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "double pt = ffbff090",
            "pt++ ⟹ pt = ffbff090+8 = ffbff098"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Memory Allocation": {
      "course": "CS2100",
      "parents": [
        "Memory Address"
      ],
      "topic": "Memory Allocation",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "int - 4 bytes",
            "float - 4 bytes",
            "char - 1 byte",
            "double - 8 bytes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Memory Address": {
      "course": "CS2100",
      "parents": [
        "Pointer"
      ],
      "topic": "Memory Address",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Where the variable is stored in memory",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Memory Allocation"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Pointer": {
      "course": "CS2100",
      "parents": [
        "Pointers And Functions"
      ],
      "topic": "Pointer",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "System keeps track of a variable's address",
            "Assigned using &var",
            "Declared using *var",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "scanf will input values into &vars once they're declared",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code <C": {
          "section": "Code ",
          "index": 8,
          "points": [
            "int a = 123;",
            "int *p;",
            "",
            "p = &a;",
            "",
            "printf(\"%d\", *p);",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 17,
          "points": [

          ],
          "sublinks": [
            "Memory Address",
            "Incrementing Pointers"
          ]
        }
      },
      "date": "17/08/2022",
      "important": "Important"
    },
    "Pointers And Functions": {
      "course": "CS2100",
      "parents": [
        "CS2100"
      ],
      "topic": "Pointers And Functions",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Pointer",
            "Scope Rule"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "C Programming": {
      "course": "CS2100",
      "parents": [
        "CS2100"
      ],
      "topic": "C Programming",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Von Neumann Architecture",
            "C Operator Associativity",
            "C Program Structure",
            "C Selection Statements",
            "C Repetition Statements"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "CS2100": {
      "course": "CS2100",
      "parents": [

      ],
      "topic": "CS2100",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "C Programming",
            "Number Systems",
            "Pointers And Functions",
            "Arrays Strings Structures"
          ]
        }
      },
      "date": "13/08/2022",
      "important": null
    },
    "Minimum (MA)": {
      "course": "MA2108",
      "parents": [
        "Infimum"
      ],
      "topic": "Minimum (MA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "min S is the /Infimum that is in the set"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Maximum (MA)": {
      "course": "MA2108",
      "parents": [
        "Supremum"
      ],
      "topic": "Maximum (MA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "max S is the /Supremum that is in the set"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Infimum": {
      "course": "MA2108",
      "parents": [
        "Lower Bound"
      ],
      "topic": "Infimum",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Largest /Lower Bound",
            "Unique for each set",
            "u is infimum of S (inf S) if it is an /Lower Bound and is tight (∀v lower bounds ⟹ u ≥ v)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Prove": {
          "section": "Prove",
          "index": 5,
          "points": [
            "::Prove uniqueness",
            "Trichotomy",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Minimum (MA)"
          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Supremum": {
      "course": "MA2108",
      "parents": [
        "Upper Bound"
      ],
      "topic": "Supremum",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Least /Upper Bound",
            "Unique for each set",
            "u is supremum of S (sup S) if it is an /Upper Bound and is tight (∀v upper bounds ⟹ u ≤ v)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Prove": {
          "section": "Prove",
          "index": 5,
          "points": [
            "::Prove uniqueness",
            "Trichotomy",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Maximum (MA)"
          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Bounded": {
      "course": "MA2108",
      "parents": [
        "Neighbourhood"
      ],
      "topic": "Bounded",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Must have an /Upper Bound and /Lower Bound, otherwise unbounded",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Upper Bound",
            "Lower Bound"
          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Lower Bound": {
      "course": "MA2108",
      "parents": [
        "Bounded"
      ],
      "topic": "Lower Bound",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "w is lower bound of S if w≤s ∀s∈S",
            "Doesn't need to be tight",
            "May not exist and may not be part of the set",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Infimum"
          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Upper Bound": {
      "course": "MA2108",
      "parents": [
        "Bounded"
      ],
      "topic": "Upper Bound",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "w is upper bound of S if w≥s ∀s∈S",
            "Doesn't need to be tight",
            "May not exist and may not be part of the set",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Supremum"
          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Closed Set": {
      "course": "MA2108",
      "parents": [
        "Neighbourhood"
      ],
      "topic": "Closed Set",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Open Set": {
      "course": "MA2108",
      "parents": [
        "Neighbourhood"
      ],
      "topic": "Open Set",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "a∈(0,1) ⟹ V a(a) ⊆ (0,1) or V {1-a}(a) ⊆ (0,1)",
            "Does not work for /Closed Set cos V 0(0) !⊆ [0,1]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Neighbourhood": {
      "course": "MA2108",
      "parents": [
        "Completeness Of Real Numbers"
      ],
      "topic": "Neighbourhood",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "V {ε}(a) is the ε neighbourhood centred at a (a-ε,a+ε)",
            "|x-a| < ε",
            "If a∈V {ε}(c) ∀ε>0, then a=c",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Open Set",
            "Closed Set",
            "Bounded"
          ]
        }
      },
      "date": "19/08/2022",
      "important": "Important"
    },
    "Completeness Of Real Numbers": {
      "course": "MA2108",
      "parents": [
        "MA2108"
      ],
      "topic": "Completeness Of Real Numbers",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Neighbourhood"
          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Triangle Inequality": {
      "course": "MA2108",
      "parents": [
        "Field"
      ],
      "topic": "Triangle Inequality",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "|a+b| ≤ |a|+|b|",
            "||a|-|b|| ≤ |a-b|"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Strong Mathematical Induction": {
      "course": "MA2108",
      "parents": [
        "Mathematical Induction"
      ],
      "topic": "Strong Mathematical Induction",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "P(1) to P(k-1) true ⟹ P(k) true"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Mathematical Induction": {
      "course": "MA2108",
      "parents": [
        "Mathematical Analysis Foundation"
      ],
      "topic": "Mathematical Induction",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "P(k-1) true ⟹ P(k) true",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Strong Mathematical Induction"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Well Ordering Principle"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Uniqueness Theorem (MA)": {
      "course": "MA2108",
      "parents": [
        "Sets (MA)"
      ],
      "topic": "Uniqueness Theorem (MA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If S is a finite set, then the number of elements is a unique number"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Functions (MA)": {
      "course": "MA2108",
      "parents": [
        "Mathematical Analysis Foundation"
      ],
      "topic": "Functions (MA)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Function Correspondence"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Cardinality (MA)": {
      "course": "MA2108",
      "parents": [
        "Sets (MA)"
      ],
      "topic": "Cardinality (MA)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Cardinality"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Sets (MA)": {
      "course": "MA2108",
      "parents": [
        "Mathematical Analysis Foundation"
      ],
      "topic": "Sets (MA)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sets",
            "Uniqueness Theorem (MA)",
            "Cardinality (MA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Mathematical Analysis Foundation": {
      "course": "MA2108",
      "parents": [
        "MA2108"
      ],
      "topic": "Mathematical Analysis Foundation",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sets (MA)",
            "Functions (MA)",
            "Mathematical Induction"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "MA2108": {
      "course": "MA2108",
      "parents": [

      ],
      "topic": "MA2108",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "/CS1231S",
            "/MA1521"
          ],
          "sublinks": [
            "Mathematical Analysis Foundation",
            "Field",
            "Completeness Of Real Numbers"
          ]
        }
      },
      "date": "12/08/2022",
      "important": null
    },
    "Renaming Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Unary Operator (RA)"
      ],
      "topic": "Renaming Operator (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ρ l(R) renames the columns in the relation",
            "Basically AS",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "ρ fname<-name,age<-dob renames name to fname, and dob to age"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Projection Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Unary Operator (RA)"
      ],
      "topic": "Projection Operator (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "π l(R) projects all the attributes of a relation in list l",
            "Basically SELECT UNIQUE",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "π name,address(R) gives all the unique name, address pairs "
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Null Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Relational Algebra Operator"
      ],
      "topic": "Null Operator (RA)",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Comparing null → unknown",
            "Arithmetic null → null",
            "A ≡ null → checks whether is equal to null"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": "Important"
    },
    "Selection Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Unary Operator (RA)"
      ],
      "topic": "Selection Operator (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "σ c(R) selects all tuples from a relation R that satisfy condition c",
            "Basically WHERE",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "σ {age<5}(5) gives all the relations with age < 5"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Union Compatibility": {
      "course": "CS2102",
      "parents": [
        "Set Operator (RA)"
      ],
      "topic": "Union Compatibility",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "For all set operators, R and S must be union compatible",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Same number of attributes",
            "Compatible domains",
            "No need to have same attribute names",
            "Might not make semantic sense",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 9,
          "points": [
            "[name, age] not compatible with [age, name]",
            "[name, age] compatible with [fname, year]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Natural Right Outer Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Right Outer Join (RA)"
      ],
      "topic": "Natural Right Outer Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Joins wherever possible"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Natural Left Outer Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Left Outer Join (RA)"
      ],
      "topic": "Natural Left Outer Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Joins wherever possible"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Natural Outer Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Outer Join (RA)"
      ],
      "topic": "Natural Outer Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Joins wherever possible"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Right Outer Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Outer Join (RA)"
      ],
      "topic": "Right Outer Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R ⟖ θ S = σ θ(R × S) is joining by θ",
            "Keep all from the right, and force the left to the right",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Natural Right Outer Join (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Left Outer Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Outer Join (RA)"
      ],
      "topic": "Left Outer Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R ⟕ θ S = σ θ(R × S) is joining by θ",
            "Keep all from the left, and force the right to the left",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Natural Left Outer Join (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Outer Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Join Operator (RA)"
      ],
      "topic": "Outer Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R ⟗ θ S = σ θ(R × S) is joining by θ",
            "Dangling tuples, incomplete data is allowed",
            "Keep all data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Left Outer Join (RA)",
            "Right Outer Join (RA)",
            "Natural Outer Join (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Natural Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Inner Join (RA)"
      ],
      "topic": "Natural Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Join is performed over all attributes that R and S have in common",
            "If both R and S has the \"manager\" attribute, then merge on there",
            "If nothing in common, then empty",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 5,
          "points": [
            "R ⋈ S → join wherever possible"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": "Important"
    },
    "Inner Join (RA)": {
      "course": "CS2102",
      "parents": [
        "Join Operator (RA)"
      ],
      "topic": "Inner Join (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R ⋈ θ S = σ θ(R × S) is joining by θ",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "R ⋈ {manager=mname} S → join on manager",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Natural Join (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Join Operator (RA)": {
      "course": "CS2102",
      "parents": [

      ],
      "topic": "Join Operator (RA)",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Inner Join (RA)",
            "Outer Join (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Cross Product (RA)": {
      "course": "CS2102",
      "parents": [
        "Binary Operator (RA)"
      ],
      "topic": "Cross Product (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Gives all possible combinations from both tables",
            "R × S ⟹ |R|*|S| rows"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Binary Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Relational Algebra Operator"
      ],
      "topic": "Binary Operator (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Applies to two relations at a time",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Set Operator (RA)",
            "Cross Product (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Set Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Binary Operator (RA)"
      ],
      "topic": "Set Operator (RA)",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Union Operator (RA)",
            "Intersection Operator (RA)",
            "Set Difference Operator (RA)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Union Compatibility"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Unary Operator (RA)": {
      "course": "CS2102",
      "parents": [
        "Relational Algebra Operator"
      ],
      "topic": "Unary Operator (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Applies to one relation at a time",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Selection Operator (RA)",
            "Projection Operator (RA)",
            "Renaming Operator (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Operator Precedence (RA)": {
      "course": "CS2102",
      "parents": [
        "Relational Algebra Operator"
      ],
      "topic": "Operator Precedence (RA)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "() op not ⋀ ⋁"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Relational Algebra Operator": {
      "course": "CS2102",
      "parents": [
        "Relational Algebra"
      ],
      "topic": "Relational Algebra Operator",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Unary Operator (RA)",
            "Binary Operator (RA)",
            "Null Operator (RA)",
            "Operator Precedence (RA)"
          ]
        }
      },
      "date": "16/08/2022",
      "important": "Important"
    },
    "Relational Algebra Operand": {
      "course": "CS2102",
      "parents": [
        "Relational Algebra"
      ],
      "topic": "Relational Algebra Operand",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Relation",
            "Transform one or more input relations into one output relation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Relational Algebra": {
      "course": "CS2102",
      "parents": [
        "Database Query"
      ],
      "topic": "Relational Algebra",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Procedural query language",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Closure - reltaions are closed",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Relational Algebra Operand",
            "Relational Algebra Operator"
          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Database Primary Key": {
      "course": "CS2102",
      "parents": [
        "Key Constraint"
      ],
      "topic": "Database Primary Key",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Selected /Candidate Key for a relation",
            "Cannot be null"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Candidate Key": {
      "course": "CS2102",
      "parents": [
        "Key Constraint"
      ],
      "topic": "Database Candidate Key",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Set of all /Key for a relation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Key": {
      "course": "CS2102",
      "parents": [
        "Key Constraint"
      ],
      "topic": "Database Key",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Superkey that is also minimal",
            "No subset of the key is a superkey",
            "{id, title} is not a key"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Superkey": {
      "course": "CS2102",
      "parents": [
        "Key Constraint"
      ],
      "topic": "Database Superkey",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Subset of attributes that uniquely identifies a tuple (index)",
            "{id, title} is a superkey"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Foreign Key Constraint": {
      "course": "CS2102",
      "parents": [
        "Integrity Constraint"
      ],
      "topic": "Foreign Key Constraint",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Must refer to a primary key or is a null value"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Key Constraint": {
      "course": "CS2102",
      "parents": [
        "Integrity Constraint"
      ],
      "topic": "Key Constraint",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Database Superkey",
            "Database Key",
            "Database Candidate Key",
            "Database Primary Key"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Domain Constraint": {
      "course": "CS2102",
      "parents": [
        "Integrity Constraint"
      ],
      "topic": "Domain Constraint",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Ensure that the correct data types"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Integrity Constraint": {
      "course": "CS2102",
      "parents": [
        "Data Constraint"
      ],
      "topic": "Integrity Constraint",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Condition that restricts what constitutes valid data",
            "May affect performance",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Domain Constraint",
            "Key Constraint",
            "Foreign Key Constraint"
          ]
        }
      },
      "date": "11/08/2022",
      "important": "Important"
    },
    "Data Constraint": {
      "course": "CS2102",
      "parents": [
        "Database Design"
      ],
      "topic": "Data Constraint",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Integrity Constraint"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Relational Model Schema": {
      "course": "CS2102",
      "parents": [
        "Relational Model"
      ],
      "topic": "Relational Model Schema",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Set of /Relation Schema and /Data Constraint"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Relational Model Relation": {
      "course": "CS2102",
      "parents": [
        "Relational Model"
      ],
      "topic": "Relational Model Relation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Set of records R(A₁... Aₙ) is a /Relation Schema with name R and n attributes",
            "Row-wise MUST be unique"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": "Important"
    },
    "Relational Model Domain": {
      "course": "CS2102",
      "parents": [
        "Relational Model"
      ],
      "topic": "Relational Model Domain",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Set of atomic values (int, num, str)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "dom(course) = {cs2102, cs3223, cs4221}"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Relation Schema": {
      "course": "CS2102",
      "parents": [
        "Relational Model"
      ],
      "topic": "Relation Schema",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Specifies attributes and constraints",
            "Tables with rows and columns",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "Modules(course, mc, exam)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Relational Model": {
      "course": "CS2102",
      "parents": [
        "Data Model"
      ],
      "topic": "Relational Model",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Relation Schema",
            "Relational Model Domain",
            "Relational Model Relation",
            "Relational Model Schema"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Physical Data Independence": {
      "course": "CS2102",
      "parents": [
        "Logical Schema"
      ],
      "topic": "Physical Data Independence",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Physical schema can be changed without affecting logical schema",
            "Can create new indexes, new caching strategies"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Logical Data Independence": {
      "course": "CS2102",
      "parents": [
        "Logical Schema"
      ],
      "topic": "Logical Data Independence",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Ability to change logical schema without affecting external schemas",
            "Can change data types, edit attributes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Data Model": {
      "course": "CS2102",
      "parents": [
        "Logical Schema"
      ],
      "topic": "Data Model",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Relational Model",
            "ER Diagram"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "External Schema": {
      "course": "CS2102",
      "parents": [
        "Database Architecture"
      ],
      "topic": "External Schema",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "User-specific view on the data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Logical Schema": {
      "course": "CS2102",
      "parents": [
        "Database Architecture"
      ],
      "topic": "Logical Schema",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Physical Data Independence",
            "Logical Data Independence",
            "Data Model"
          ]
        }
      },
      "date": "11/08/2022",
      "important": "Important"
    },
    "Physical Schema": {
      "course": "CS2102",
      "parents": [
        "Database Architecture"
      ],
      "topic": "Physical Schema",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Organization of data on disk and in memory"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Architecture": {
      "course": "CS2102",
      "parents": [
        "Database Design"
      ],
      "topic": "Database Architecture",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Physical Schema",
            "Logical Schema",
            "External Schema"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Error State": {
      "course": "CS2102",
      "parents": [
        "Transaction States"
      ],
      "topic": "Error State",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Informs the /Initial State to abort the transaction"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Internal State": {
      "course": "CS2102",
      "parents": [
        "Transaction States"
      ],
      "topic": "Internal State",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Server-side processing that can lead to the /Error State",
            "Commits the transaction to the /Result State"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Result State": {
      "course": "CS2102",
      "parents": [
        "Transaction States"
      ],
      "topic": "Result State",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Final state visible to other transactions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Initial State": {
      "course": "CS2102",
      "parents": [
        "Transaction States"
      ],
      "topic": "Initial State",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Begins the /Internal State to begin processing"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Transaction States": {
      "course": "CS2102",
      "parents": [
        "Database Transactions"
      ],
      "topic": "Transaction States",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Initial State",
            "Result State",
            "Internal State",
            "Error State"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Transaction Durability": {
      "course": "CS2102",
      "parents": [
        "ACID Properties"
      ],
      "topic": "Transaction Durability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "After the commit of T, its effects are permanent even during failure"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Transaction Isolation": {
      "course": "CS2102",
      "parents": [
        "ACID Properties"
      ],
      "topic": "Transaction Isolation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The execution of T is isolated from the effects of concurrent transactions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Transaction Consistency": {
      "course": "CS2102",
      "parents": [
        "ACID Properties"
      ],
      "topic": "Transaction Consistency",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The execution of T guarantees to yield a correct state of the database"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Transaction Atomicity": {
      "course": "CS2102",
      "parents": [
        "ACID Properties"
      ],
      "topic": "Transaction Atomicity",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Either all effects of T are reflected in database or none"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "ACID Properties": {
      "course": "CS2102",
      "parents": [
        "Database Transactions"
      ],
      "topic": "ACID Properties",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Transaction Atomicity",
            "Transaction Consistency",
            "Transaction Isolation",
            "Transaction Durability"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Serializability": {
      "course": "CS2102",
      "parents": [
        "Concurrent Execution Challenges"
      ],
      "topic": "Serializability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Execution of a set of transactions is equivalent to some serial execution of the same set of transactions",
            "AKA concurrent same as not concurrent output"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Unrepeatable Read": {
      "course": "CS2102",
      "parents": [
        "Concurrent Execution Challenges"
      ],
      "topic": "Unrepeatable Read",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Values differ during multiple retrievals"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Dirty Read": {
      "course": "CS2102",
      "parents": [
        "Concurrent Execution Challenges"
      ],
      "topic": "Dirty Read",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Transactions are not properly processed"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Lost Update": {
      "course": "CS2102",
      "parents": [
        "Concurrent Execution Challenges"
      ],
      "topic": "Lost Update",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Transactions can be overwritten by other transactions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Concurrent Execution Challenges": {
      "course": "CS2102",
      "parents": [
        "Database Challenges"
      ],
      "topic": "Concurrent Execution Challenges",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Lost Update",
            "Dirty Read",
            "Unrepeatable Read",
            "Serializability"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Data Security": {
      "course": "CS2102",
      "parents": [
        "Database Challenges"
      ],
      "topic": "Data Security",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Data access rights"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Data Recovery": {
      "course": "CS2102",
      "parents": [
        "Database Challenges"
      ],
      "topic": "Data Recovery",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Failure handling"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Data Integrity": {
      "course": "CS2102",
      "parents": [
        "Database Challenges"
      ],
      "topic": "Data Integrity",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Parallel access and changes to data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Transactions": {
      "course": "CS2102",
      "parents": [
        "Database Challenges"
      ],
      "topic": "Database Transactions",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Changes to data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "ACID Properties",
            "Transaction States"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Efficiency": {
      "course": "CS2102",
      "parents": [
        "Database Challenges"
      ],
      "topic": "Database Efficiency",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Fast access to information in huge volumes of data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Challenges": {
      "course": "CS2102",
      "parents": [
        "CS2102"
      ],
      "topic": "Database Challenges",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Database Efficiency",
            "Database Transactions",
            "Data Integrity",
            "Data Recovery",
            "Data Security",
            "Concurrent Execution Challenges"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Refinement": {
      "course": "CS2102",
      "parents": [
        "CS2102"
      ],
      "topic": "Database Refinement",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Triggers",
            "Functional Dependencies",
            "Normal Forms",
            "3NF",
            "BCNF"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Query": {
      "course": "CS2102",
      "parents": [
        "CS2102"
      ],
      "topic": "Database Query",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Relational Algebra",
            "SQL Query",
            "Stored Procedures"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Database Design": {
      "course": "CS2102",
      "parents": [
        "CS2102"
      ],
      "topic": "Database Design",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Database Architecture",
            "Data Constraint",
            "SQL DDL"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "CS2102": {
      "course": "CS2102",
      "parents": [

      ],
      "topic": "CS2102",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Database Challenges",
            "Database Design",
            "Database Query",
            "Database Refinement"
          ]
        }
      },
      "date": "11/08/2022",
      "important": null
    },
    "Homogeneity Check": {
      "course": "MA2101",
      "parents": [
        "Subspace"
      ],
      "topic": "Homogeneity Check",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Check whether is subset",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Express all values in the matrix as filters to the vector space",
            "If homo (AKA no constants), then all good"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Inclusion Sum": {
      "course": "MA2101",
      "parents": [
        "Subspace"
      ],
      "topic": "Inclusion Sum",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If U₁ ⊆ U₂ and W₁ ⊆ W₂, then U₁ + W₁ ⊆ U₂ + W₂"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Span Union Equality": {
      "course": "MA2101",
      "parents": [
        "Linear Span"
      ],
      "topic": "Span Union Equality",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA span(S ⋃ T) = span(S)+span(T) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Linear Span (F)": {
      "course": "MA2101",
      "parents": [
        "Vector Space"
      ],
      "topic": "Linear Span (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Fv = span(v) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2022",
      "important": null
    },
    "Cancellation Law": {
      "course": "MA2101",
      "parents": [

      ],
      "topic": "Cancellation Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA b+x = b+y ⟹ x=y MA",
            "<MA 0x = 0 MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Multiplicative Group": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Multiplicative Group",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Pair (F, ×) only satisfies the multiplicative axioms",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "ℝ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Trace Free Space": {
      "course": "MA2101",
      "parents": [
        "Matrix Space"
      ],
      "topic": "Trace Free Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "TFₙ(F) where Tr(A)=0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Skew Symmetric Matrix": {
      "course": "MA2101",
      "parents": [
        "Matrices"
      ],
      "topic": "Skew Symmetric Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "(A-Aᵀ)/2",
            "Aᵀ=-A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Lower Triangle Space": {
      "course": "MA2101",
      "parents": [
        "Matrix Space"
      ],
      "topic": "Lower Triangle Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "LTₙ(F)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Upper Triangle Space": {
      "course": "MA2101",
      "parents": [
        "Matrix Space"
      ],
      "topic": "Upper Triangle Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "UTₙ(F)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Row N Space": {
      "course": "MA2101",
      "parents": [

      ],
      "topic": "Row N Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "F^n is the row vector n-space with elements all in F"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Column M Space": {
      "course": "MA2101",
      "parents": [
        "Matrix Space"
      ],
      "topic": "Column M Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "F c^m is the column vector m-space with elements all in F"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Matrix Space": {
      "course": "MA2101",
      "parents": [
        "Vector Space"
      ],
      "topic": "Matrix Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "M n(F) is the square n-matrix with elements all in F",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Column M Space",
            "Row M Space",
            "Upper Triangle Space",
            "Lower Triangle Space",
            "Trace Free Space"
          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Continuous Function (F)": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Continuous Function (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "C⁰[x] is all continuous functions that can be differentiated 0 times",
            "C^r[x] is all continuous functions that can be differentiated r times"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Polynomial Ring (N Variables)": {
      "course": "MA2101",
      "parents": [
        "Polynomial Ring"
      ],
      "topic": "Polynomial Ring (N Variables)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA F[x, y] = (F[x])[y] MA>",
            "<MA F[x₁, x₂, ..., xₙ] = (F[x₁, x₂, ..., xₙ₋₁])[xₙ] MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Polynomial Ring": {
      "course": "MA2101",
      "parents": [
        "Commutative Ring"
      ],
      "topic": "Polynomial Ring",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "F[x] is the set of polynomials with F elements as coefficients",
            "<MA F[x] = {∑bᵢxⁱ, bᵢ∈F} MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Polynomial Ring (N Variables)"
          ]
        }
      },
      "date": "10/08/2022",
      "important": "Important"
    },
    "Field Zero Removed": {
      "course": "MA2101",
      "parents": [
        "Field Notation"
      ],
      "topic": "Field Zero Removed",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Fˣ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Additive Group": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Additive Group",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Pair (F, +) only satisfies the additive axioms",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "ℤ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Commutative Ring": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Commutative Ring",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Triplet (F, +, ×) with Axiom 6 (/Multiplicative Inverse (F ) unsatisfied",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Polynomial Ring"
          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Commutative Law (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Commutative Law (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "x+y=y+x",
            "xy=yx"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Distributive Law (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Distributive Law (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "x(y+z) = xy + xz",
            "(x+y)z = xz + yz"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Multiplicative Inverse (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Multiplicative Inverse (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Everyone must have an inverse except for 0",
            "<MA ∀x∈F, ∃y∈F: xy=0 MA>",
            "<MA xx⁻¹ = 1 = x⁻¹x ∀x∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Multiplicative Associativity (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Multiplicative Associativity (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (xy)z = x(yz) ∀x,y,z∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Multiplicative Identity (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Multiplicative Identity (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "1 F is the additive identity",
            "<MA x1 = x = 1x ∀x∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Additive Inverse (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Additive Inverse (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∀x∈F, ∃y∈F: x+y=0 MA>",
            "<MA x+(-x) = 0 = (-x)+x ∀x∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Additive Associativity (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Additive Associativity (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (x+y)+z = x+(y+z) ∀x,y,z∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Additive Identity (F)": {
      "course": "MA2101",
      "parents": [
        "Field Axioms"
      ],
      "topic": "Additive Identity (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "0 F is the additive identity",
            "<MA x+0 = x = 0+x ∀x∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Operation Map Axiom (F)": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Operation Map Axiom (F)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Axiom 0",
            "<MA ∀x∈F, ∀y∈F ⟹ x+y∈F MA>",
            "<MA ∀x∈F, ∀y∈F ⟹ xy∈F MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Field Axioms": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Field Axioms",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Additive Identity (F)",
            "Additive Associativity (F)",
            "Additive Inverse (F)",
            "Multiplicative Identity (F)",
            "Multiplicative Associativity (F)",
            "Multiplicative Inverse (F)",
            "Distributive Law (F)",
            "Commutative Law (F)"
          ]
        }
      },
      "date": "10/08/2022",
      "important": "Important"
    },
    "Field Notation": {
      "course": "MA2101",
      "parents": [

      ],
      "topic": "Field Notation",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Field Zero Removed"
          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Field": {
      "course": "MA2101",
      "parents": [
        "MA2108",
        "MA2101"
      ],
      "topic": "Field",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Field Axioms",
            "Operation Map Axiom (F)",
            "Triangle Inequality"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Commutative Ring",
            "Additive Group",
            "Multiplicative Group",
            "Continuous Function (F)",
            "Vector Space"
          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "Unique Direct Sum": {
      "course": "MA2101",
      "parents": [

      ],
      "topic": "Unique Direct Sum",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If W₁ + W₂ = W₁ ⊕ W₂, then w = w₁+w₂ is unique"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Direct Sum": {
      "course": "MA2101",
      "parents": [
        "Vector Space Addition"
      ],
      "topic": "Direct Sum",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If W₁ ⋂ W₂ = {0} and W = W₁ + W₂, then W = W₁ ⊕ W₂",
            "W₁, W₂ are linearly independent",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Unique Direct Sum"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": "Important"
    },
    "Vector Space Addition": {
      "course": "MA2101",
      "parents": [
        "Vector Space"
      ],
      "topic": "Vector Space Addition",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "∑Wᵢ is the smallest vector subspace of V containing all Wᵢ",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Direct Sum"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Linear Combination Closure": {
      "course": "MA2101",
      "parents": [
        "Vector Space Axioms"
      ],
      "topic": "Linear Combination Closure",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "av₁ + bv₂ ∈ V"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Multiplication Closure (VS)": {
      "course": "MA2101",
      "parents": [
        "Vector Space Axioms"
      ],
      "topic": "Multiplication Closure (VS)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "av ∈ V",
            "Fv ∈ V"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Addition Closure (VS)": {
      "course": "MA2101",
      "parents": [
        "Vector Space Axioms"
      ],
      "topic": "Addition Closure (VS)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "v₁+v₂ ∈ V"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Vector Space Axioms": {
      "course": "MA2101",
      "parents": [
        "Vector Space"
      ],
      "topic": "Vector Space Axioms",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Addition Closure (VS)",
            "Multiplication Closure (VS)",
            "Linear Combination Closure"
          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Distributive Scalar Addition (V)": {
      "course": "MA2101",
      "parents": [
        "Vector Axioms"
      ],
      "topic": "Distributive Scalar Addition (V)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "(a+b)v = av + bv"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Distributive Vector Addition (V)": {
      "course": "MA2101",
      "parents": [
        "Vector Axioms"
      ],
      "topic": "Distributive Vector Addition (V)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "a(u+v) = au + av"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2022",
      "important": null
    },
    "Vector Axioms": {
      "course": "MA2101",
      "parents": [
        "Vector Space"
      ],
      "topic": "Vector Axioms",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Additive Identity (V)",
            "Additive Associativity (V)",
            "Additive Inverse (V)",
            "Additive Commutativity (V)",
            "Multiplicative Identity (V)"
          ],
          "sublinks": [
            "Distributive Vector Addition (V)",
            "Distributive Scalar Addition (V)"
          ]
        }
      },
      "date": "17/08/2022",
      "important": "Important"
    },
    "Vector Space": {
      "course": "MA2101",
      "parents": [
        "Field"
      ],
      "topic": "Vector Space",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Vector Axioms",
            "Vector Space Axioms",
            "Vector Space Addition",
            "Linear Span (F)"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Matrix Space"
          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "MA2101": {
      "course": "MA2101",
      "parents": [

      ],
      "topic": "MA2101",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "/MA2001"
          ],
          "sublinks": [
            "Field"
          ]
        }
      },
      "date": "10/08/2022",
      "important": null
    },
    "NP Completeness": {
      "course": "CS3230",
      "parents": [
        "CS3230"
      ],
      "topic": "NP Completeness",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "-"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Approximation Algorithm": {
      "course": "CS3230",
      "parents": [
        "Algorithm"
      ],
      "topic": "Approximation Algorithm",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "-"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Amortized Analysis": {
      "course": "CS3230",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Amortized Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "-"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Probabilistic Analysis": {
      "course": "CS3230",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Probabilistic Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "-"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Mathematical Algorithm Analysis": {
      "course": "CS3230",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Mathematical Algorithm Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "-"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Simulation Analysis": {
      "course": "CS3230",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Simulation Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Run the algorithm multiple times for different inputs",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Easy to do",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 6,
          "points": [
            "- Depends on input",
            "- Depends on machine"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Word RAM Model": {
      "course": "CS3230",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Word RAM Model",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Shows the set of instructions to complete an action",
            "Memory retrievals + Operator + Return",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Running time in real life is dependent on the machine used"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": "Important"
    },
    "Little Ω Notation": {
      "course": "CS3230",
      "parents": [
        "Asymptotic Analysis"
      ],
      "topic": "Little Ω Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ƒ(n) > c𝒈(n) MA>",
            "DOES NOT PERMIT EQUALITY",
            "ω(𝒈(n)) ⟹ !O(𝒈(n))"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Little O Notation": {
      "course": "CS3230",
      "parents": [
        "Asymptotic Analysis"
      ],
      "topic": "Little O Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ƒ(n) < c𝒈(n) MA>",
            "DOES NOT PERMIT EQUALITY",
            "o(𝒈(n)) ⟹ !Ω(𝒈(n))"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": null
    },
    "Limits Cheatsheet": {
      "course": "CS3230",
      "parents": [
        "Asymptotic Analysis"
      ],
      "topic": "Limits Cheatsheet",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "lim = ƒ(n)/𝒈(n)",
            "lim = 0 ⟹ o",
            "lim < ∞ ⟹ O",
            "0 < lim < ∞ ⟹ Θ",
            "lim > 0 ⟹ Ω",
            "lim = ∞ ⟹ ω"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/08/2022",
      "important": "Important"
    },
    "Incremental Algorithm": {
      "course": "CS3230",
      "parents": [
        "Algorithm"
      ],
      "topic": "Incremental Algorithm",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/08/2022",
      "important": null
    },
    "Asymptotic Analysis": {
      "course": "CS3230",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Asymptotic Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Suppress constant factors and lower-order terms",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Limits Cheatsheet",
            "Little O Notation",
            "Little Ω Notation"
          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Men Optimality": {
      "course": "CS3230",
      "parents": [
        "Gale Shapley Algorithm"
      ],
      "topic": "Men Optimality",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Gale Shapley Algorithm returns the matching in which each m is paired with best(m) and each woman is paired with worst(w)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Gale Shapley Algorithm": {
      "course": "CS3230",
      "parents": [
        "Stable Matching"
      ],
      "topic": "Gale Shapley Algorithm",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Start with random man",
            "Go through his list of desired women",
            "Once he finds an unproposed woman or a woman that prefers him, then propose",
            "Move to the next man",
            "Repeat until all men are paired",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "/Run Time Complexity :- O(n²)"
          ],
          "sublinks": [
            "Men Optimality"
          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "Stable Matching": {
      "course": "CS3230",
      "parents": [

      ],
      "topic": "Stable Matching",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "n men and n women with ranking for each other",
            "Trying to find a configuration where everyone is satisfied with their matching",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Gale Shapley Algorithm"
          ]
        }
      },
      "date": "09/08/2022",
      "important": null
    },
    "CS3230": {
      "course": "CS3230",
      "parents": [

      ],
      "topic": "CS3230",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "/CS2040S"
          ],
          "sublinks": [
            "Algorithm Analysis",
            "Dynamic Programming",
            "Linear Programming",
            "Algorithm",
            "NP Completeness"
          ]
        }
      },
      "date": "22/03/2022",
      "important": null
    },
    "C++ Abstract Class": {
      "course": "Coding",
      "parents": [

      ],
      "topic": "C++ Abstract Class",
      "contents": {
        "Code <CPP": {
          "section": "Code ",
          "index": 0,
          "points": [
            "class Box:",
            " public:",
            "   virtual double getVolume() = 0",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/03/2022",
      "important": null
    },
    "C++ Inheritance": {
      "course": "Coding",
      "parents": [

      ],
      "topic": "C++ Inheritance",
      "contents": {
        "Code <CPP": {
          "section": "Code ",
          "index": 0,
          "points": [
            "class Car: public Vehicle",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/03/2022",
      "important": null
    },
    "C++ Class": {
      "course": "Coding",
      "parents": [

      ],
      "topic": "C++ Class",
      "contents": {
        "Code <CPP": {
          "section": "Code ",
          "index": 0,
          "points": [
            "template <typename T> // or template <class T>",
            "class Car {        // The class",
            " private:",
            "   string a;",
            " public:          // Access specifier",
            "   string brand;  // Attribute",
            "   string model;  // Attribute",
            "   int year;      // Attribute",
            "   Car(string x, string y, int z) { // Constructor with parameters",
            "     brand = x;",
            "     model = y;",
            "     year = z;",
            "   }",
            "};",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/03/2022",
      "important": null
    },
    "C++ Memory Address": {
      "course": "Coding",
      "parents": [

      ],
      "topic": "C++ Memory Address",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Put & in front of the var (&var) to output the memory address of the object",
            "Use string* ptr = &obj to dynamically store the memory address (ptr is a pointer)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/03/2022",
      "important": null
    },
    "GitHub Process": {
      "course": "Coding",
      "parents": [

      ],
      "topic": "GitHub Process",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Create repo on GH",
            "Follow their instructions lol"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/03/2022",
      "important": null
    },
    "Django Models Py": {
      "course": "Web",
      "parents": [
        "Django Process"
      ],
      "topic": "Django Models Py",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Models are their own separate tables",
            "https://docs.djangoproject.com/en/4.0/ref/models/fields/#null",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <PY": {
          "section": "Examples ",
          "index": 4,
          "points": [
            "https://www.youtube.com/watch?v=aHC3uTkT9r8",
            "from django.utils import timezone",
            "from django.contrib.auth.models import User",
            "",
            "class Post(models.Model):",
            " title = models.CharField(max length=100)",
            " content = models.TextField()",
            " date posted = models.DateTimeField(default=timezone.now)",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Django Render": {
      "course": "Web",
      "parents": [
        "Django Template"
      ],
      "topic": "Django Render",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Renders a template",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <PY": {
          "section": "Examples ",
          "index": 3,
          "points": [
            "from django.shortcuts import render",
            "",
            "def say hello(request):",
            " return render(request, \"hello.html\", {\"name\": \"Mosh\"})",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Template": {
      "course": "Web",
      "parents": [
        "Django Process"
      ],
      "topic": "Django Template",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "HTML file where you can pass in arguments",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <PY": {
          "section": "Examples ",
          "index": 3,
          "points": [
            "{% if name %}",
            "Hello {{name}}</h1>",
            "{% else %}",
            "Hello World</h1>",
            "{% endif %}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 11,
          "points": [

          ],
          "sublinks": [
            "Django Render"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Url Include": {
      "course": "Web",
      "parents": [
        "Django Urls Py"
      ],
      "topic": "Django Url Include",
      "contents": {
        "Examples <PY": {
          "section": "Examples ",
          "index": 0,
          "points": [
            "from django.urls import path, include",
            "",
            "urlpatterns = [",
            " path(\"playground/\", include(\"playground.urls\"))",
            "]",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 8,
          "points": [
            "This is basically saying that all urls of that pattern should be passed to the playground.urls file, chopping off the playground/ bit"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Urls Py": {
      "course": "Web",
      "parents": [
        "Django Process"
      ],
      "topic": "Django Urls Py",
      "contents": {
        "Examples <PY": {
          "section": "Examples ",
          "index": 0,
          "points": [
            "from django.urls import path",
            "from . import views",
            "",
            "urlpatterns = [",
            " path(\"playground/<int:name>/\", views.say hello)",
            "]",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 9,
          "points": [
            "Can store the urls you want, and map them to the corresponding function",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 12,
          "points": [

          ],
          "sublinks": [
            "Django Url Include"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Views Py": {
      "course": "Web",
      "parents": [
        "Django Process"
      ],
      "topic": "Django Views Py",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Request handler (request → response)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <PY": {
          "section": "Examples ",
          "index": 3,
          "points": [
            "from django.shortcuts import render",
            "from django.http import HttpResponse",
            "",
            "def say hello(request):",
            " return HttpResponse(\"Hello\")",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Set Up": {
      "course": "Web",
      "parents": [
        "Django Process"
      ],
      "topic": "Django Set Up",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "mkdir dir",
            "pipenv install django :- to create environment inside the folder",
            "pipenv shell :- launch subshell in virtual env",
            "django-admin :- check what functionalities you have",
            "django-admin startproject <projectname> . :- starts a new project",
            "python manage.py runserver <portnumber> :- runs server at that port number, default at 8000",
            "pipenv --venv :- get current venv location (copy), then paste to VSCode View > Command Palette > Python: Select Interpreter, and add /bin/python behind",
            "open terminal in VSCode and press the + to reboot whatever",
            "python manage.py startapp <appname> :- creates new app, and you must put it into INSTALLED APPS in settings.py",
            "pipenv install <appname> :- installs app as part of the application",
            "source /Users/izzhafeez/.local/share/virtualenvs/singapore-NdF3NIif/bin/activate",
            "deactivate",
            "python -m pip install <package>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 15,
          "points": [
            "manage.py :- works as the django admin, listing the functionalities of django"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Process": {
      "course": "Web",
      "parents": [
        "Django Framework"
      ],
      "topic": "Django Process",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Django Set Up",
            "Django Views Py",
            "Django Urls Py",
            "Django Models Py",
            "Django Template"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Django Framework": {
      "course": "Web",
      "parents": [

      ],
      "topic": "Django Framework",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Django Process"
          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Less Time",
            "+ Fewer lines of code",
            "+ Object-relational mapper (ORM)",
            "+ Authentication",
            "+ Caching"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Model View Controller": {
      "course": "Web",
      "parents": [

      ],
      "topic": "Model View Controller",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Each request from the ui goes from controller to model",
            "Then model goes to view",
            "View then presents in the ui"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Aspect Oriented Programming": {
      "course": "Web",
      "parents": [
        "Spring Process"
      ],
      "topic": "Aspect Oriented Programming",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Implement cross cutting concerns (log what time you start and end)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Dependency Injection By Setter": {
      "course": "Web",
      "parents": [
        "Dependency Injection"
      ],
      "topic": "Dependency Injection By Setter",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The <property> subelement of <bean> is used for setter injection"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Dependency Injection By Constructor": {
      "course": "Web",
      "parents": [
        "Dependency Injection"
      ],
      "topic": "Dependency Injection By Constructor",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The <constructor-arg> subelement of <bean> is used for constructor injection"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Dependency Injection": {
      "course": "Web",
      "parents": [
        "Spring Process"
      ],
      "topic": "Dependency Injection",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can remove dependency from code",
            "Programming code becomes loosely coupled",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Dependency Injection By Constructor",
            "Dependency Injection By Setter"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Web Socket": {
      "course": "Web",
      "parents": [
        "Spring Web"
      ],
      "topic": "Spring Web Socket",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides support for two-way communication"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Web MVC": {
      "course": "Web",
      "parents": [
        "Spring Web",
        "Spring Process"
      ],
      "topic": "Spring Web MVC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Contains Spring's Model-View-Controller (MVC) implementation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Web Portlet": {
      "course": "Web",
      "parents": [
        "Spring Web"
      ],
      "topic": "Spring Web Portlet",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides the MVC implementation used in a portlet environment"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring OXM": {
      "course": "Web",
      "parents": [
        "Spring Data Integration"
      ],
      "topic": "Spring OXM",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides an abstraction"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring ORM": {
      "course": "Web",
      "parents": [
        "Spring Data Integration"
      ],
      "topic": "Spring ORM",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides integration layers"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring JMS": {
      "course": "Web",
      "parents": [
        "Spring Data Integration"
      ],
      "topic": "Spring JMS",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Contains features for producing and consuming messages"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring JDBC": {
      "course": "Web",
      "parents": [
        "Spring Data Integration"
      ],
      "topic": "Spring JDBC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides a JDBC abstraction layer"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Transaction": {
      "course": "Web",
      "parents": [
        "Spring Data Integration"
      ],
      "topic": "Spring Transaction",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Supports programmatic and declarative transaction management"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Context": {
      "course": "Web",
      "parents": [

      ],
      "topic": "Spring Context",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Implementation of /Spring Beans",
            "Supports internationalisation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Beans": {
      "course": "Web",
      "parents": [
        "Spring Core Container"
      ],
      "topic": "Spring Beans",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Java Objects that are constructed by the Spring Framework",
            "Needs to be configured"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Test": {
      "course": "Web",
      "parents": [
        "Spring Modules"
      ],
      "topic": "Spring Test",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Supports the testing of Spring components with Junit or TestNG"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Instrumentation": {
      "course": "Web",
      "parents": [
        "Spring Modules"
      ],
      "topic": "Spring Instrumentation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides class instrumentation support and class loader implementations"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring AOP": {
      "course": "Web",
      "parents": [
        "Spring Modules"
      ],
      "topic": "Spring AOP",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides an aspect-oriented programming implementation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Web": {
      "course": "Web",
      "parents": [
        "Spring Modules"
      ],
      "topic": "Spring Web",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Provides basic web-oriented integration features",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Spring Web Portlet",
            "Spring Web MVC",
            "Spring Web Socket"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Data Integration": {
      "course": "Web",
      "parents": [
        "Spring Modules"
      ],
      "topic": "Spring Data Integration",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Interacts the data layer, or connect to other frameworks like Hibernate",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Spring Transaction",
            "Spring JDBC",
            "Spring JMS",
            "Spring ORM",
            "Spring OXM"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Core Container": {
      "course": "Web",
      "parents": [
        "Spring Modules"
      ],
      "topic": "Spring Core Container",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Basic functionality of the application",
            "Focusses on dependency, injection and inversion of control",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Spring Beans"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Modules": {
      "course": "Web",
      "parents": [
        "Spring Architecture"
      ],
      "topic": "Spring Modules",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Spring Core Container",
            "Spring Data Integration",
            "Spring Web",
            "Spring AOP",
            "Spring Instrumentation",
            "Spring Test"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Data Layer": {
      "course": "Web",
      "parents": [
        "Spring Framework Ecosystem"
      ],
      "topic": "Spring Data Layer",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Service Layer": {
      "course": "Web",
      "parents": [
        "Spring Framework Ecosystem"
      ],
      "topic": "Spring Service Layer",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Common Layer": {
      "course": "Web",
      "parents": [
        "Spring Framework Ecosystem"
      ],
      "topic": "Spring Common Layer",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Web Layer": {
      "course": "Web",
      "parents": [
        "Spring Framework Ecosystem"
      ],
      "topic": "Spring Web Layer",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Spring IO platform"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Framework Ecosystem": {
      "course": "Web",
      "parents": [
        "Spring Architecture"
      ],
      "topic": "Spring Framework Ecosystem",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Spring Web Layer",
            "Spring Common Layer",
            "Spring Service Layer",
            "Spring Data Layer"
          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Architecture": {
      "course": "Web",
      "parents": [
        "Spring Framework"
      ],
      "topic": "Spring Architecture",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Spring Framework Ecosystem",
            "Spring Modules"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Simplicity": {
      "course": "Web",
      "parents": [
        "Spring Benefits"
      ],
      "topic": "Spring Simplicity",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Non-invasive implementation of Objects and Interfaces"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Inversion Of Control": {
      "course": "Web",
      "parents": [
        "Spring Process",
        "Spring Framework"
      ],
      "topic": "Inversion Of Control",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Instead of subclass being dependent on their parent class, the parent class injects from the subclasses",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "::Configure IoC container",
            "Input metadata in the form of xml to a POJO class",
            "Class can be used freely in the application",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Spring Bean Factory",
            "Spring Application Context"
          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Process": {
      "course": "Web",
      "parents": [
        "Spring Framework"
      ],
      "topic": "Spring Process",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Inversion Of Control",
            "Dependency Injection",
            "Aspect Oriented Programming",
            "Spring Web MVC"
          ]
        }
      },
      "date": "13/03/2022",
      "important": null
    },
    "Spring Benefits": {
      "course": "Web",
      "parents": [
        "Spring Framework"
      ],
      "topic": "Spring Benefits",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Spring Simplicity"
          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Spring Framework": {
      "course": "Web",
      "parents": [

      ],
      "topic": "Spring Framework",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "https://www.youtube.com/watch?v=VvGjZgqojMc",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Inversion Of Control",
            "Spring Architecture",
            "Spring Process"
          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Spring Benefits"
          ]
        }
      },
      "date": "12/03/2022",
      "important": null
    },
    "Type II Error": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Type II Error",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Accept hypothesis when it is false"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/04/2022",
      "important": null
    },
    "Type I Error": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Type I Error",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Reject null hypothesis when it is true"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/04/2022",
      "important": null
    },
    "Variance Hypothesis Testing": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Variance Hypothesis Testing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Means unknown",
            "Distribution is normal",
            "Use F distribution to find ratio of variances",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "σ₁²>σ₂² :- F>F[n₁-1,n₂-1,a]",
            "σ₁²<σ₂² :- F<F[n₁-1,n₂-1,1-a]",
            "σ₁²≠σ₂² :- F<F[n₁-1,n₂-1,1-a/2] or F>F[n₁-1,n₂-1,a/2]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": "Important"
    },
    "Difference Hypothesis Testing": {
      "course": "ST2334",
      "parents": [
        "Confidence Interval"
      ],
      "topic": "Difference Hypothesis Testing",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Known Variance Mean Difference Hypothesis Testing",
            "Unknown Variance Mean Difference Hypothesis Testing",
            "Unknown Equal Variance Mean Difference Hypothesis Testing"
          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Biased Estimator": {
      "course": "ST2334",
      "parents": [
        "Normal Estimation"
      ],
      "topic": "Biased Estimator",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Does not precisely equal to the parameter is supposed to estimate, but may be equal as n→∞"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Unbiased Estimator": {
      "course": "ST2334",
      "parents": [
        "Normal Estimation"
      ],
      "topic": "Unbiased Estimator",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "E(θ^)=θ ⟹ θ^ is an unbiased estimator for parameter θ",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "E(S²)=σ²",
            "E(X̄)=μ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Confidence Coefficient": {
      "course": "ST2334",
      "parents": [
        "Interval Estimation"
      ],
      "topic": "Confidence Coefficient",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "AKA Degree Of Confidence"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Interval Estimation": {
      "course": "ST2334",
      "parents": [
        "Normal Estimation"
      ],
      "topic": "Interval Estimation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "We make estimates for the lower bound and upper bound of the interval, in terms of the X random variables",
            "θ^L=ƒ(X₁,X₂...Xₙ), θ^U=𝒈(X₁,X₂...Xₙ)",
            "P(θ^L<θ<θ^U)=1-a → confidence coeff",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Confidence Coefficient"
          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Point Estimation": {
      "course": "ST2334",
      "parents": [
        "Normal Estimation"
      ],
      "topic": "Point Estimation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "θ^ is a function of the random variable",
            "θ^(X₁,X₂...Xₙ) is a point estimator ",
            "X̄=μ^ is a point estimator for μ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Normal Estimation": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Normal Estimation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "You know the type of distribution you are working with, but don't know the exact population parameter",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Point Estimation",
            "Unbiased Estimator",
            "Biased Estimator",
            "Interval Estimation",
            "Confidence Interval"
          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Central Limit Theorem": {
      "course": "ST2334",
      "parents": [
        "Sampling Distribution"
      ],
      "topic": "Central Limit Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Sampling distribution of sample means is approximately normal if n is sufficiently large N(μ,s²/n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/03/2022",
      "important": null
    },
    "Law Of Large Number": {
      "course": "ST2334",
      "parents": [
        "Sampling Distribution"
      ],
      "topic": "Law Of Large Number",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "P(|X̄-μ|>ε)→0 as n→∞"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/03/2022",
      "important": null
    },
    "Sampling Distribution": {
      "course": "ST2334",
      "parents": [
        "Sampling (P)"
      ],
      "topic": "Sampling Distribution",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "E(X̄) = E(X)",
            "V(X̄) = V(X)/n",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Law Of Large Number",
            "Central Limit Theorem"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Chi Square Distribution",
            "T Distribution",
            "F Distribution"
          ]
        }
      },
      "date": "26/03/2022",
      "important": null
    },
    "F Distribution": {
      "course": "ST2334",
      "parents": [
        "Sampling Distribution"
      ],
      "topic": "F Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "U~χ²(n₁) and V~χ²(n₂) are independent ⟹ F=Un₂/Vn₁",
            "Ƒ(n₁-1,n₂-1)=S₁²σ₂²/S₂²σ₁²",
            "F~Ƒ(n,m) ⟺ 1/F~Ƒ(m,n)",
            "Ƒ(5,4,0.05)=6.26 ⟹ P(F>6.26)=0.05",
            "Ƒ(n,m,1-a)=1/F(m,n,a)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "/Expectation :- n₂/(n₂-2)",
            "/Variance :- 2n₂²(n₁+n₂-2)/n₁(n₂-2)²(n₂-4)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 11,
          "points": [
            "F.DIST(5,n₁,n₂,true) ⟹ P(F≤5)=?",
            "F.INV(0.05,n₁,n₂) ⟹ P(F≤?)=0.05"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": "Important"
    },
    "T Distribution": {
      "course": "ST2334",
      "parents": [
        "Sampling Distribution"
      ],
      "topic": "T Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Weaker /Normal Distribution",
            "Z~N(0,1), U~χ²(n) ⟹ T=Z/√(U/n)~t(n)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Expectation :- 0",
            "/Variance :- n/(n-2)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 8,
          "points": [
            "T.DIST(2,n,TRUE) ⟹ P(T<2)=?",
            "T.INV(0.95,n) ⟹ P(T<?)=0.95"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": "Important"
    },
    "Chi Square Distribution": {
      "course": "ST2334",
      "parents": [
        "Sampling Distribution"
      ],
      "topic": "Chi Square Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "χ²(n-1) ~ (n-1)S²/σ² = ∑(Xᵢ-X̄)²/σ²",
            "χ²(n) ~ N(n,2n)",
            "X~N(0,1) ⟹ X²~χ²(1)",
            "If there are k independent χ² random variables, then summing them up will also sum up the degrees of freedom",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "CHISQ.INV(0.05;n) ⟹ P(X≤?)=0.05",
            "CHISQ.DIST(4;n;true) ⟹ P(X≤4)=?"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": "Important"
    },
    "Chi Square Test": {
      "course": "ST2334",
      "parents": [
        "Hypothesis Testing"
      ],
      "topic": "Chi Square Test",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Check whether two variables have an association",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Find the expected rates for the experiment, based on marginal rates",
            "Then compare them to the actual observation and find how much they differ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/03/2022",
      "important": null
    },
    "T Test": {
      "course": "ST2334",
      "parents": [
        "Hypothesis Testing"
      ],
      "topic": "T Test",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/03/2022",
      "important": null
    },
    "Continuity Correction": {
      "course": "ST2334",
      "parents": [
        "Normal Approximation"
      ],
      "topic": "Continuity Correction",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "P(X=k) = P([k-½,k+½])",
            "Basically ½ under the lower bound, ½ over the higher bound"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/03/2022",
      "important": null
    },
    "Normal Approximation": {
      "course": "ST2334",
      "parents": [
        "Binomial Distribution",
        "Continuous Distribution"
      ],
      "topic": "Normal Approximation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "μ=np, var=np(1-p)",
            "Z = (X-np)/√npq",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Continuity Correction"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Exponential Distribution": {
      "course": "ST2334",
      "parents": [
        "Continuous Distribution"
      ],
      "topic": "Exponential Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒ(x)=aexp(-ax)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "/Expectation :- 1/a",
            "/Variance :- 1/a²",
            "P(X>s+t|X>s)=P(X>t)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Continuous Uniform Distribution": {
      "course": "ST2334",
      "parents": [
        "Continuous Distribution"
      ],
      "topic": "Continuous Uniform Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒ(x)=1/(b-a)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "/Expectation :- (a+b)/2",
            "/Variance :- (b-a)²/12"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Poisson Approximation": {
      "course": "ST2334",
      "parents": [
        "Binomial Distribution"
      ],
      "topic": "Poisson Approximation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "np=λ",
            "n has to be big, or p is small, or both"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Poisson Distribution": {
      "course": "ST2334",
      "parents": [
        "Discrete Distribution"
      ],
      "topic": "Poisson Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Number of occurrences occuring during a particular time interval",
            "X~P(λ)",
            "ƒ(x)=exp(-λ)λˣ/x!",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "/Expectation :- λ",
            "/Variance :- λ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Negative Binomial Distribution": {
      "course": "ST2334",
      "parents": [
        "Binomial Distribution"
      ],
      "topic": "Negative Binomial Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Counts the number of trials x to achieve k successes",
            "X~NB(k,p)",
            "ƒ(x)=((x-1)C(k-1))pˣ(1-p)ˣ⁻ᵏ",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "/Expectation :- k/p",
            "/Variance :- k(1-p)/p²"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Bernoulli Experiment": {
      "course": "ST2334",
      "parents": [
        "Bernoulli Distribution"
      ],
      "topic": "Bernoulli Experiment",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Random experiment where there's only two possible outcomes success/failure"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Bernoulli Distribution": {
      "course": "ST2334",
      "parents": [
        "Binomial Distribution"
      ],
      "topic": "Bernoulli Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "X~B(n,p)",
            "ƒ(x)=pˣ(1-p)¹⁻ˣ, 0<p<1, x=0,1",
            ""
          ],
          "sublinks": [
            "Bernoulli Experiment"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "/Expectation :- p",
            "/Variance :- p(1-p)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Binomial Distribution": {
      "course": "ST2334",
      "parents": [
        "Discrete Distribution"
      ],
      "topic": "Binomial Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒ(x)=(nCx)pˣ(1-p)ⁿ⁻ˣ",
            "Consists of n repeated /Bernoulli Experiment s",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Expectation :- np",
            "/Variance :- np(1-p)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Bernoulli Distribution",
            "Negative Binomial Distribution",
            "Poisson Approximation",
            "Normal Approximation"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Discrete Uniform Distribution": {
      "course": "ST2334",
      "parents": [
        "Discrete Distribution"
      ],
      "topic": "Discrete Uniform Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Each possible value in the sample space is equal probability",
            "P(X=x)=1/k",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Expectation :- ∑xᵢ/k",
            "/Variance :- ∑(xᵢ-μ)²/k"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Continuous Distribution": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Continuous Distribution",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Continuous Uniform Distribution",
            "Exponential Distribution",
            "Normal Distribution",
            "Normal Approximation"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Discrete Distribution": {
      "course": "ST2334",
      "parents": [
        "Special Probability Distribution"
      ],
      "topic": "Discrete Distribution",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Discrete Uniform Distribution",
            "Binomial Distribution",
            "Poisson Distribution"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Special Probability Distribution": {
      "course": "ST2334",
      "parents": [
        "Probability Distribution"
      ],
      "topic": "Special Probability Distribution",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Discrete Distribution"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Correlation Coefficient": {
      "course": "GEA1000",
      "parents": [
        "Covariance",
        "Linear Association"
      ],
      "topic": "Correlation Coefficient",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Only measures linear association",
            "<MA r = m(sₓ/sᵧ) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "r=0 does not mean there is no relationship, so must look at /Scatter Plot",
            "Unaffected by /Linear Transformation of the x and y axes",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 8,
          "points": [
            "::Calculate Correlation Coefficient",
            "Calculate SU(x) for all x and all y",
            "Sum up all values and divide by n-1",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Standard Unit"
          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Covariance": {
      "course": "ST2334",
      "parents": [
        "Expectation (2D)",
        "Variance"
      ],
      "topic": "Covariance",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "X and Y independent ⟹ Cov(X,Y)=0 but not converse",
            "<MA Cov(X,Y)=E((X-E(X))(Y-E(Y))) MA>",
            "<MA Cov(X,Y)=σₓ,ᵧ² MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "<MA Cov(X,Y)=E(XY)-E(X)E(Y) MA>",
            "<MA Cov(aX+b,cY+d)=acCov(X,Y) MA>",
            "<MA Var(aX+bY) = a²Var(X)+b²Var(Y)+2abCov(X,Y) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "Correlation Coefficient"
          ]
        }
      },
      "date": "06/03/2022",
      "important": "Important"
    },
    "Expectation (2D)": {
      "course": "ST2334",
      "parents": [
        "Random Variable (2D)",
        "Expectation"
      ],
      "topic": "Expectation (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∑∑𝒈(x,y)ƒ(x,y) MA>",
            "<MA ʃʃ𝒈(x,y)ƒ(x,y)dxdy MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Covariance"
          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Independent Random Variables": {
      "course": "ST2334",
      "parents": [
        "Random Variable (2D)"
      ],
      "topic": "Independent Random Variables",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "X and Y are independent ⟺ ƒₓᵧ(x,y) = ƒₓ(x)ƒᵧ(y)",
            "/Range Space must all be rectangular"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Conditional Probability Function": {
      "course": "ST2334",
      "parents": [
        "Probability Function (2D)"
      ],
      "topic": "Conditional Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ƒᵧ|ₓ(y|x) = ƒₓᵧ(x,y)/ƒₓ(x) MA>",
            "The set of all possible points gives the /Probability Distribution",
            "Similar to /Conditional Rate",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "<MA ƒₓᵧ(x,y) = ƒᵧ|ₓ(y|x)ƒₓ(x) MA>",
            "<MA P(Y≤y|X=x) = ʃ[-∞,y]ƒᵧ|ₓ(t|x)dt MA>",
            "<MA E(Y|X=x) = ʃ[-∞,∞]yƒᵧ|ₓ(y|x)dy MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 10,
          "points": [
            "::Find Conditional Probability Function",
            "Find /Joint Probability Function",
            "Find /Marginal Probability Function"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Continuous Marginal Probability Function": {
      "course": "ST2334",
      "parents": [
        "Marginal Probability Function"
      ],
      "topic": "Continuous Marginal Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ƒₓ(x)=ʃƒₓᵧ(x,y)dy MA>",
            "<MA ƒᵧ(y)=ʃƒₓᵧ(x,y)dx MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Discrete Marginal Probability Function": {
      "course": "ST2334",
      "parents": [
        "Marginal Probability Function"
      ],
      "topic": "Discrete Marginal Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ƒₓ(x)=∑ƒₓᵧ(x,y) MA> over all y",
            "<MA ƒᵧ(y)=∑ƒₓᵧ(x,y) MA> over all x",
            "",
            "::Find Marginal Probability Function",
            "Fix values of y",
            "Find the probability of getting each value of x",
            "Compute row sum or column sum"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Marginal Probability Function": {
      "course": "ST2334",
      "parents": [
        "Probability Function (2D)"
      ],
      "topic": "Marginal Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒₓ(x) = P(X=x) ⟹ how does x change for a constant y?",
            "Represented with a column/row of values",
            "Similar to /Marginal Rate",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Discrete Marginal Probability Function",
            "Continuous Marginal Probability Function"
          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Continuous Joint Probability Function": {
      "course": "ST2334",
      "parents": [
        "Joint Probability Function"
      ],
      "topic": "Continuous Joint Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Represented the same as a /Probability Density Function",
            "<MA ʃʃƒₓᵧ(x,y)dxdy = 1 MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 4,
          "points": [
            "::Find probability of an event",
            "Integrate over the shaded region"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Discrete Joint Probability Function": {
      "course": "ST2334",
      "parents": [
        "Joint Probability Function"
      ],
      "topic": "Discrete Joint Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A 2D matrix representing the probabilities when X=x and Y=y",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "::Find Joint Probability Function",
            "Find P(X=x,Y=y)",
            "Use combinatorics to find the probability of each joint event happening",
            "Don't add unnecessary variable Z",
            "End up with combinatoric over combinatoric",
            "::Find probability of an event",
            "Find all possible sample space",
            "Find probability of each 2D event happening"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Joint Probability Function": {
      "course": "ST2334",
      "parents": [
        "Probability Function (2D)"
      ],
      "topic": "Joint Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "(X,Y) is a /Discrete Random Variable (2D  ⟹ ƒ(x,y)=P(X=x,Y=y)",
            "The set of all possible points gives the /Probability Distribution",
            "Similar to /Joint Rate",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Discrete Joint Probability Function",
            "Continuous Joint Probability Function"
          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Javascript Strict Mode": {
      "course": "Javascript",
      "parents": [

      ],
      "topic": "Javascript Strict Mode",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JS 'use strict'; JS>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 3,
          "points": [
            "Will throw errors for ugly code"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/03/2022",
      "important": null
    },
    "Longest Increasing Subsequence": {
      "course": "CS2040S",
      "parents": [
        "Dynamic Programming"
      ],
      "topic": "Longest Increasing Subsequence",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Find longest increasing subsequence in {5,6,7,2,3,7,4}",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Translate the problem into DAG, with arrows pointing forward if the later element is greater (3→4 but not 5→4)",
            "Calculate longest paths from the back"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/04/2022",
      "important": null
    },
    "Divide And Conquer Algorithm": {
      "course": "CS2040S",
      "parents": [
        "Optimal Substructure"
      ],
      "topic": "Divide And Conquer Algorithm",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Merge Sort"
          ]
        }
      },
      "date": "06/04/2022",
      "important": null
    },
    "Greedy Algorithm": {
      "course": "CS2040S",
      "parents": [
        "Optimal Substructure",
        "Algorithm"
      ],
      "topic": "Greedy Algorithm",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Dijkstra",
            "Minimum Spanning Tree"
          ]
        }
      },
      "date": "06/04/2022",
      "important": null
    },
    "Optimal Substructure": {
      "course": "CS2040S",
      "parents": [
        "Dynamic Programming"
      ],
      "topic": "Optimal Substructure",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Use smaller versions of the problem to solve the big problem (/Divide And Conquer Algorithm)",
            "Can use the same smaller problem to solve multiple different bigger problems (/Dynamic Programming)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Greedy Algorithm",
            "Divide And Conquer Algorithm"
          ]
        }
      },
      "date": "06/04/2022",
      "important": null
    },
    "Dynamic Programming": {
      "course": "CS2040S",
      "parents": [
        "CS3230",
        "CS2040S"
      ],
      "topic": "Dynamic Programming",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Optimal Substructure"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Longest Increasing Subsequence"
          ]
        }
      },
      "date": "06/04/2022",
      "important": null
    },
    "MST Cut": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "MST Cut",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Partition the MST into two MSTs",
            "Min-weight edge is on cut (one vertex in each partition)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Minimum Spanning Tree": {
      "course": "CS1231S",
      "parents": [
        "Greedy Algorithm",
        "Data Graph",
        "Tree"
      ],
      "topic": "Minimum Spanning Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Least number of edges to cover all vertices",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Kruskal's Algorithm",
            "Prim's Algorithm"
          ]
        }
      },
      "date": "21/11/2021",
      "important": null
    },
    "Union Find Algorithm": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "Union Find Algorithm",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Ackermann Function"
          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Dijkstra": {
      "course": "CS2040S",
      "parents": [
        "Greedy Algorithm",
        "Shortest Path"
      ],
      "topic": "Dijkstra",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Relax the edges in the right order (take edge from closest vertex from start)",
            "Nodes to be evaluated are stored in priority queue, based on their current estimate",
            "Each node & edge is evaluated once",
            "Keep track of the last edge that updated a node (do this in relax, changing the parent of the edge)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "/Invariant :- Extending a path does not make it shorter",
            "Edge Weights :- Must always be positive > 0",
            "/Run Time Complexity :- O(ElogV)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 11,
          "points": [
            "::Initialise graph",
            "Maintain distance estimate for every node",
            "Begin with empty shortest-path-tree",
            "::For each vertex visited",
            "Update the estimate of all outgoing, only if they are better estimates"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/03/2022",
      "important": null
    },
    "Kahn's Algorithm": {
      "course": "CS2040S",
      "parents": [
        "Topological Order"
      ],
      "topic": "Kahn's Algorithm",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find a topoligcal orderging of vertices",
            "Process the data such that we store the count of incoming edges of the vertex as a HashMap, so that we can check which one is not being pointed at"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/03/2022",
      "important": null
    },
    "Topological Order": {
      "course": "CS2040S",
      "parents": [
        "Directed Acyclic Graph"
      ],
      "topic": "Topological Order",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Complete ordering of the vertices of a /Directed Acyclic Graph such that there are no reverse relations",
            "Can be used to wait for evaluation until all incoming edges have been resolved",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Kahn's Algorithm"
          ]
        }
      },
      "date": "28/03/2022",
      "important": null
    },
    "Bellman Ford": {
      "course": "CS2040S",
      "parents": [
        "Shortest Path"
      ],
      "topic": "Bellman Ford",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can be used for any weights",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "(Relax every edge in the graph) n-1 times",
            "Terminate if the iteration of relaxation does nothing",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "/Run Time Complexity :- O(EV)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/03/2022",
      "important": null
    },
    "Edge Relaxing": {
      "course": "CS2040S",
      "parents": [
        "Shortest Path"
      ],
      "topic": "Edge Relaxing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Reaching a vertex in a shorter time using another vertex"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/03/2022",
      "important": null
    },
    "Shortest Path": {
      "course": "CS2040S",
      "parents": [
        "Graph Search"
      ],
      "topic": "Shortest Path",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Edge Relaxing"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Bellman Ford",
            "Dijkstra"
          ]
        }
      },
      "date": "23/03/2022",
      "important": null
    },
    "Strongly Connected Component": {
      "course": "CS2040S",
      "parents": [
        "Connected Component"
      ],
      "topic": "Strongly Connected Component",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "For every pair of nodes in the component, you can get from A to B and B to A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Connected Component": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Connected Component",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "For any pair of nodes in the component A can get to B or the other way",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Strongly Connected Component"
          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "DAG Shortest Path": {
      "course": "CS2040S",
      "parents": [
        "Directed Acyclic Graph"
      ],
      "topic": "DAG Shortest Path",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Directed Acyclic Graph": {
      "course": "CS2040S",
      "parents": [
        "Directed Graph"
      ],
      "topic": "Directed Acyclic Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "There isn't a loop in one direction",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Scheduling problem",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Topological Order",
            "DAG Shortest Path"
          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Directed Cyclic Graph": {
      "course": "CS2040S",
      "parents": [
        "Directed Graph"
      ],
      "topic": "Directed Cyclic Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "There is a loop in one direction"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Directed Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Directed Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Every 2 nodes can have an edge for each direction",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Directed Cyclic Graph",
            "Directed Acyclic Graph"
          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Depth First Search": {
      "course": "CS2040S",
      "parents": [
        "Graph Search"
      ],
      "topic": "Depth First Search",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Go through an entire path at a time",
            "Uses a stack",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Run Time Complexity :- O(V+E)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Breadth First Search": {
      "course": "CS2040S",
      "parents": [
        "Graph Search"
      ],
      "topic": "Breadth First Search",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Go through the nodes based on closest to the start",
            "Uses a queue",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Run Time Complexity :- O(V+E)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Graph Search": {
      "course": "CS2040S",
      "parents": [
        "Search Algorithm"
      ],
      "topic": "Graph Search",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Must make sure that no nodes are repeated",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Breadth First Search",
            "Depth First Search",
            "Shortest Path"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Adjacency Matrix (A)": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Adjacency Matrix (A)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Cells determine the number of connections between any two nodes",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- Slow query (any neighbour)",
            "- Slow query (all neighbours)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 7,
          "points": [
            "+ Fast query (specific neighbour)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Adjacency List": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Adjacency List",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Store relationships in a graph",
            "Each node has a linked list of all its neighbours",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 4,
          "points": [
            "+ Fast query (any neighbour)",
            "+ Fast query (all neighbours)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 8,
          "points": [
            "- Slow query (specific neighbour)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Planar Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Planar Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Graph that can be drawn without any intersecting lines"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Cycle": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "Cycle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "You are able to go back to the same node without backtracking"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Bipartite Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Bipartite Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Nodes are divided into two sets, and no connections within the sets",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Diameter :- n-1",
            "Degree :- 2",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 7,
          "points": [
            "::Prove unbipartitable",
            "Find an odd-length cycle",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 11,
          "points": [

          ],
          "sublinks": [
            "Graph Cycle"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Complete Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Complete Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Every pair of nodes has a connection",
            "AKA Clique",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Diameter :- 1",
            "Degree :- n-1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Star Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Star Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Everything is connected to the center, and nothing else",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Diameter :- 2",
            "Degree :- n-1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Cycle Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Cycle Graph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "It is a complete loop, with nothing extra",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Diameter :- n/2",
            "Degree :- 2"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Graph Diameter": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Graph Diameter",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Furthest distance between two nodes, following shortest path",
            "Unreachable nodes are not considered"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Node Degree": {
      "course": "CS2040S",
      "parents": [
        "Graph Node"
      ],
      "topic": "Node Degree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Number of connections with other nodes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Reachable Node": {
      "course": "CS2040S",
      "parents": [
        "Graph Node"
      ],
      "topic": "Reachable Node",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Whether you can get there from your current node"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Forest": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Forest",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A collection of /Data Tree s"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Multigraph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Multigraph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Graph where there is more than one connection between any 2 nodes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Hypergraph": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Hypergraph",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Graph where connections can be between more than 2 nodes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Unrooted Tree": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Unrooted Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Graph with no cycles"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Graph Node": {
      "course": "CS2040S",
      "parents": [
        "Data Graph"
      ],
      "topic": "Graph Node",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Reachable Node",
            "Node Degree"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Data Graph": {
      "course": "CS2040S",
      "parents": [
        "Data Structure"
      ],
      "topic": "Data Graph",
      "contents": {
        "Definitions": {
          "section": "Definitions",
          "index": 0,
          "points": [
            "Connections between two nodes is at most 1",
            "Can have nothing",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Graph Diameter",
            "Graph Node",
            "Adjacency List",
            "Adjacency Matrix (A)",
            "Connected Component"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 11,
          "points": [

          ],
          "sublinks": [
            "Data Tree",
            "Unrooted Tree",
            "Hypergraph",
            "Multigraph",
            "Forest",
            "Star Graph",
            "Cycle Graph",
            "Complete Graph",
            "Bipartite Graph",
            "Planar Graph",
            "Directed Graph",
            "Minimum Spanning Tree"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Amortized Cost": {
      "course": "CS2040S",
      "parents": [
        "Table Size"
      ],
      "topic": "Amortized Cost",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Operation has amortized cost T(n) ⟺ every k ∈ ℤ, the cost of k operations is ≤ kT(n)",
            "Average of the prefix of an array",
            "It's about finding the total cost of all operations up to that point, and then dividing"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Efficient Table Sizing": {
      "course": "CS2040S",
      "parents": [
        "Table Size"
      ],
      "topic": "Efficient Table Sizing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Maintain table size when m/4 < n < m/2"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Half Table Size": {
      "course": "CS2040S",
      "parents": [
        "Shrink Table"
      ],
      "topic": "Half Table Size",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Build RTC :- O(n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Shrink Table": {
      "course": "CS2040S",
      "parents": [
        "Table Size"
      ],
      "topic": "Shrink Table",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Shrink table",
            "Choose new table size m",
            "Choose new hash function 𝒉(x)",
            "For each item in old hash table, copy item to new bucket based on hash function",
            "Need to scan old hash table, initialise new hash table, copy things over",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Half Table Size"
          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Square Table Size": {
      "course": "CS2040S",
      "parents": [
        "Grow Table"
      ],
      "topic": "Square Table Size",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Build RTC :- O(n²)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Double Table Size": {
      "course": "CS2040S",
      "parents": [
        "Grow Table"
      ],
      "topic": "Double Table Size",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Build RTC :- O(n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Increment Table Size": {
      "course": "CS2040S",
      "parents": [
        "Grow Table"
      ],
      "topic": "Increment Table Size",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Build RTC :- O(n²)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Grow Table": {
      "course": "CS2040S",
      "parents": [
        "Table Size"
      ],
      "topic": "Grow Table",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Grow table",
            "Choose new table size m",
            "Choose new hash function 𝒉(x)",
            "For each item in old hash table, copy item to new bucket based on hash function",
            "Need to scan old hash table, initialise new hash table, copy things over",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Increment Table Size",
            "Double Table Size",
            "Square Table Size"
          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Table Size": {
      "course": "CS2040S",
      "parents": [
        "Data Table"
      ],
      "topic": "Table Size",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Grow Table",
            "Shrink Table",
            "Efficient Table Sizing",
            "Amortized Cost"
          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Tabulation Hashing": {
      "course": "CS2040S",
      "parents": [
        "Hashing"
      ],
      "topic": "Tabulation Hashing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Creates lookup tables"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/03/2022",
      "important": null
    },
    "Double Hashing": {
      "course": "CS2040S",
      "parents": [
        "Hashing"
      ],
      "topic": "Double Hashing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA 𝒉(k,i)=ƒ(k)+i𝒈(k) mod m MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "If 𝒈(x) is chosen correctly, then you can hit all your buckets"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Dictionary": {
      "course": "CS2040S",
      "parents": [
        "Data Table"
      ],
      "topic": "Dictionary",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Usually implemented using /AVL Tree",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Ordering :- entries are sorted",
            "/Search RTC :- O(logₙ)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 7,
          "points": [
            "::Implement sorting algorithm",
            "Insert every item into dictionary O(n)",
            "Search for minimum item O(logₙ)",
            "Repeat: find successor"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Simple Uniform Hashing": {
      "course": "CS2040S",
      "parents": [
        "Hashing"
      ],
      "topic": "Simple Uniform Hashing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Every key is equally likely to be mapped to every bucket",
            "Key assignment is independent",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Search RTC :- O(1+items/buckets)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Linear Probing": {
      "course": "CS2040S",
      "parents": [
        "Open Addressing"
      ],
      "topic": "Linear Probing",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find an open slot",
            "Go to the slot you want to",
            "Keep adding until you get the empty slot",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "Is not a /Simple Uniform Hashing",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 8,
          "points": [
            "- Clusters of items can form"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Probe Sequence": {
      "course": "CS2040S",
      "parents": [
        "Open Addressing"
      ],
      "topic": "Probe Sequence",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A permutation of the buckets 1...m, so you always know what's the next one to get",
            "For /Linear Probing, the permutation just goes one loop around"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Open Addressing": {
      "course": "CS2040S",
      "parents": [
        "Hash Collision Handling"
      ],
      "topic": "Open Addressing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Just go to a different bucket if this one is occupied",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Linear Probing"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [
            ""
          ],
          "sublinks": [
            "Probe Sequence"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 9,
          "points": [
            "::Insert key",
            "Start a probe sequence and keep finding new slots until you find an empty one",
            "::Delete key",
            "Set value to DELETED instead of null so that the ordering is still ok",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 15,
          "points": [
            "Expected insertion cost :- 1-(1-a), where a is current load"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Chaining": {
      "course": "CS2040S",
      "parents": [
        "Hash Collision Handling",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "Chaining",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Each bucket contains a /Linked List of items",
            "So everytime a collision happens, then just attach it in front of the existing linked list",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Insert RTC :- O(1+𝒉())",
            "/Search RTC :- O(n+𝒉())",
            "/Space Complexity :- O(buckets+items)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Hash Code": {
      "course": "CS2040S",
      "parents": [
        "Hashing"
      ],
      "topic": "Hash Code",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Always returns the same value",
            "Equal objects return the same hashCode",
            "HashCodes that differ by constant multiples have a bounded number of collisions",
            "Takes a hash and hashes it some more"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Hash Collision Handling": {
      "course": "CS2040S",
      "parents": [
        "Hashing"
      ],
      "topic": "Hash Collision Handling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Collision of hash values will eventually happen, so we need to handle these clashes",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Chaining",
            "Open Addressing"
          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Hashing": {
      "course": "CS2040S",
      "parents": [
        "Direct Access Table"
      ],
      "topic": "Hashing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Map n keys to a smaller subset of buckets",
            "Mapping is random, but replicable",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Run Time Complexity :- O(1)",
            "Buckets :- m = Ω(n)",
            ""
          ],
          "sublinks": [
            "Hash Code"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 9,
          "points": [
            "::Hashing",
            "The hashing function 𝒉() will convert the object into a key",
            ""
          ],
          "sublinks": [
            "Hash Collision Handling"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 14,
          "points": [

          ],
          "sublinks": [
            "Simple Uniform Hashing",
            "Double Hashing",
            "Tabulation Hashing"
          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Direct Access Table": {
      "course": "CS2040S",
      "parents": [
        "Symbol Table"
      ],
      "topic": "Direct Access Table",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "One slot for every item you want to store (like an array)",
            "Insert based on key (index in array)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 4,
          "points": [
            "- Keys must be ℤ ⟹ must convert into ℤ",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 7,
          "points": [
            "::Implementation"
          ],
          "sublinks": [
            "Hashing"
          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Java Tree Map": {
      "course": "CS2040S",
      "parents": [
        "Java Map"
      ],
      "topic": "Java Tree Map",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Java implementation of a /Dictionary",
            "Supports sorted methods"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Java Hash Map": {
      "course": "CS2040S",
      "parents": [
        "Java Map"
      ],
      "topic": "Java Hash Map",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Java implementation of a /Symbol Table",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "null can be a value, so bad cannot distinguish between null value and missing key"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Java Map": {
      "course": "CS2040S",
      "parents": [
        "Symbol Table"
      ],
      "topic": "Java Map",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Keys are immutable",
            "Keys are unique",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 4,
          "points": [
            "<JV clear() JV>",
            "<JV containsKey(Object) JV>",
            "<JV containsValue(Object) JV>",
            "<JV get(Object) JV>",
            "<JV put(Key,Value) JV>",
            "<JV remove(Key) JV>",
            "<JV size() JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Java Hash Map",
            "Java Tree Map"
          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Hash Set": {
      "course": "CS2040S",
      "parents": [
        "Symbol Table"
      ],
      "topic": "Hash Set",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The symbol table stores booleans as values"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Symbol Table": {
      "course": "CS2040S",
      "parents": [
        "Data Table"
      ],
      "topic": "Symbol Table",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [
            "insert(Key, Value)",
            "search(Key)",
            "delete(Key)",
            "contains(Key)",
            "size()",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "Ordering :- nothing is ordered and cannot support successor queries",
            "/Search RTC :- O(1)",
            "Iterable :- False",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 12,
          "points": [
            ""
          ],
          "sublinks": [
            "Direct Access Table",
            "Java Map",
            "Hash Set"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 17,
          "points": [
            "Phonebook",
            "Internet DNS"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Data Table": {
      "course": "CS2040S",
      "parents": [
        "Data Structure"
      ],
      "topic": "Data Table",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Stores data using a primary key",
            "Can be implemented in several different ways (AVL Tree etc.)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Symbol Table",
            "Dictionary"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Table Size"
          ]
        }
      },
      "date": "02/03/2022",
      "important": null
    },
    "Split Node": {
      "course": "CS2040S",
      "parents": [
        "Orthogonal Range Tree"
      ],
      "topic": "Split Node",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Highest node where search includes both left and right subtrees"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/02/2022",
      "important": null
    },
    "Orthogonal Range Tree": {
      "course": "CS2040S",
      "parents": [
        "Augmented Tree",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "Orthogonal Range Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Store all points in leaves of tree",
            "Internal nodes should not have the keys",
            "Internal node stores the max of any leaf in its LEFT subtree",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "Find all values within a range",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 8,
          "points": [
            "Find number of points found within box",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 11,
          "points": [
            "Invariant :- The search interval for a left-traversal at node v includes the maximum item in the subtree rooted at v",
            "/Search RTC :- O(k+logₙ)",
            "/Build RTC :- O(nlogn)",
            "/Space Complexity :- O(n)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 17,
          "points": [
            "::Build tree",
            "Choose the middle value and make it the root",
            "Recurse with the remaining values until you end up with a tree",
            "::Query(10, 50)",
            "Find /Split Node where node is between 10 and 50",
            "Do left traversal, and hug the right",
            "Do right traversal, and hug the left",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 26,
          "points": [

          ],
          "sublinks": [
            "Split Node"
          ]
        }
      },
      "date": "28/02/2022",
      "important": "Important"
    },
    "Interval Tree": {
      "course": "CS2040S",
      "parents": [
        "Augmented Tree",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "Interval Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Keys are stored as [min, max]",
            "Nodes are comparable by the mins of keys",
            "For each node, store highest max in subtree (h)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "Find an interval that covers a certain value",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 8,
          "points": [
            "::Insert interval node",
            "Find your way to the insertion point and update the h along the way",
            "Balance and update maximum values of rotated nodes",
            "::Search for interval that covers a value",
            "left.h >= key ⟹ go left",
            "left.h < key ⟹ go right",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 16,
          "points": [
            "Tree goes right ⟹ no overlapping interval in left subtree",
            "Tree goes left and fails ⟹ there is no point searching in the right side"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/02/2022",
      "important": "Important"
    },
    "Order Statistics Tree": {
      "course": "CS2040S",
      "parents": [
        "Augmented Tree"
      ],
      "topic": "Order Statistics Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Nodes store the weight of the tree rooted at the node",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Find the rank of the node",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "::Insert node",
            "Look down the tree and increment the weight of any node you pass by",
            "When rotating, only need to change the weight of the nodes involved in rotation",
            "::Find kth smallest",
            "Check weight of left (w)",
            "w+1 == k ⟹ return value",
            "w+1 > k ⟹ Find(k) for left tree",
            "w+1 < k ⟹ Find(k-w-1) for right tree",
            "::Find rank",
            "Start with rank left.w+1",
            "Parent > node ⟹ do nothing",
            "Parent < node ⟹ parent.w+1 to the rank",
            "Go to parent and repeat until reach the root"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/02/2022",
      "important": "Important"
    },
    "Java Packages": {
      "course": "Java",
      "parents": [
        "Java"
      ],
      "topic": "Java Packages",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Java IO",
            "Java List",
            "Java Comparable"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Java Base": {
      "course": "Java",
      "parents": [
        "Java"
      ],
      "topic": "Java Base",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Java Instance Of",
            "Java Single Line Conditional",
            "Java Multiline Lambda Function"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Java": {
      "course": "Java",
      "parents": [
        "Coding"
      ],
      "topic": "Java",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Java Base",
            "OOP",
            "Java Packages"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Coding": {
      "course": "Coding",
      "parents": [

      ],
      "topic": "Coding",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Java",
            "Javascript"
          ]
        }
      },
      "date": "03/03/2022",
      "important": null
    },
    "Biology": {
      "course": "Science",
      "parents": [
        "Science"
      ],
      "topic": "Biology",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Life"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Chemistry": {
      "course": "Science",
      "parents": [
        "Science"
      ],
      "topic": "Chemistry",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Physics": {
      "course": "Science",
      "parents": [
        "Science"
      ],
      "topic": "Physics",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "Astrophysics",
            "Thermodynamics",
            "Hydrodynamics",
            "Quantum Physics",
            "Newtonian Physics"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Science": {
      "course": "Science",
      "parents": [

      ],
      "topic": "Science",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Physics",
            "Chemistry",
            "Biology"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Language": {
      "course": "Language",
      "parents": [

      ],
      "topic": "Language",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "Latin",
            "Spanish",
            "French",
            "Japanese",
            "Korean"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Asian Mythology": {
      "course": "Astronomy",
      "parents": [

      ],
      "topic": "Asian Mythology",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Chinese Mythology",
            "Japanese Mythology"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "European Mythology": {
      "course": "Astronomy",
      "parents": [

      ],
      "topic": "European Mythology",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Greek Mythology",
            "Roman Mythology"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Mythology": {
      "course": "Astronomy",
      "parents": [
        "Astronomy"
      ],
      "topic": "Mythology",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "European Mythology",
            "Asian Mythology"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Astronomy": {
      "course": "Astronomy",
      "parents": [

      ],
      "topic": "Astronomy",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Astrophysics",
            "Mythology",
            "Practical Astronomy"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "History": {
      "course": "History",
      "parents": [

      ],
      "topic": "History",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "European History",
            "African History",
            "Asian History",
            "American History"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "City": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "City",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "GESS1019",
            "GEC1030"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Phanerozoic Eon": {
      "course": "Geography",
      "parents": [
        "Paleogeography"
      ],
      "topic": "Phanerozoic Eon",
      "contents": {
      },
      "date": "26/02/2022",
      "important": null
    },
    "Gaskiers Glaciation": {
      "course": "Geography",
      "parents": [
        "Ediacaran Period"
      ],
      "topic": "Gaskiers Glaciation",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Time :- 579MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Ediacaran Period": {
      "course": "Geography",
      "parents": [
        "Neoproterozoic Era"
      ],
      "topic": "Ediacaran Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Started when /Marinoan Glaciation ended",
            "Newly classified"
          ],
          "sublinks": [
            "Gaskiers Glaciation"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Reusch's Moraine": {
      "course": "Geography",
      "parents": [
        "Sturtian Glaciation"
      ],
      "topic": "Reusch's Moraine",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Location :- Northern Norway"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Adelaide Superbasin": {
      "course": "Geography",
      "parents": [
        "Sturtian Glaciation"
      ],
      "topic": "Adelaide Superbasin",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Formed during breakup of Rodinia"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Marinoan Glaciation": {
      "course": "Geography",
      "parents": [
        "Cryogenian Period"
      ],
      "topic": "Marinoan Glaciation",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Meaning :- Marino - suburb of Adelaide",
            "Time :- 650MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Sturtian Glaciation": {
      "course": "Geography",
      "parents": [
        "Cryogenian Period"
      ],
      "topic": "Sturtian Glaciation",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Time :- 717MYA-643MYA",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Adelaide Superbasin",
            "Reusch's Moraine"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Snowball Earth": {
      "course": "Geography",
      "parents": [
        "Neoproterozoic Era"
      ],
      "topic": "Snowball Earth",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "/Sturtian Glaciation",
            "/Marinoan Glaciation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Cryogenian Period": {
      "course": "Geography",
      "parents": [
        "Neoproterozoic Era"
      ],
      "topic": "Cryogenian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Sturtian Glaciation",
            "Marinoan Glaciation"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Time :- 720MYA-635MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Tonian Period": {
      "course": "Geography",
      "parents": [
        "Neoproterozoic Era"
      ],
      "topic": "Tonian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "First sponge-like animals",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Meaning :- Tonos = stretch",
            "Time :- 1BYA-720MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Neoproterozoic Era": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "Neoproterozoic Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Precambrian Supereon",
            "Rodinia broke into individual landmasses",
            ""
          ],
          "sublinks": [
            "Snowball Earth"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [
            ""
          ],
          "sublinks": [
            "Tonian Period",
            "Cryogenian Period",
            "Ediacaran Period"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 10,
          "points": [
            "Time :- 1BYA-541MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Keweenaw Peninsula": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "Keweenaw Peninsula",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Location :- Upper Michigan"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Keweenawan Rift": {
      "course": "Geography",
      "parents": [
        "Stenian Period"
      ],
      "topic": "Keweenawan Rift",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Long geological rift in the center of North America",
            "AKA Midcontinent Rift System",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Location :- /Keweenaw Peninsula",
            "Time :- 1.1BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Stenian Period": {
      "course": "Geography",
      "parents": [
        "Mesoproterozoic Era"
      ],
      "topic": "Stenian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Start of /Sexual Reproduction",
            "Formation of /Rodinia Supercontinent"
          ],
          "sublinks": [
            "Keweenawan Rift"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Ectasian Period": {
      "course": "Geography",
      "parents": [
        "Mesoproterozoic Era"
      ],
      "topic": "Ectasian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Expansion of land",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Time :- 1.4BYA-1.2BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Calymmian Period": {
      "course": "Geography",
      "parents": [
        "Mesoproterozoic Era"
      ],
      "topic": "Calymmian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Expansion of land",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Meaning :- Kalymma = cover",
            "Time :- 1.6BYA-1.4BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Stromatolite": {
      "course": "Geography",
      "parents": [
        "Sedimentary Rock"
      ],
      "topic": "Stromatolite",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Layered /Sedimentary Rock formations created by photosynthetic microorganisms",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Meaning :- Stratum = layer"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Sedimentary Rock": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "Sedimentary Rock",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Stromatolite"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Rodinia Supercontinent": {
      "course": "Geography",
      "parents": [
        "Mesoproterozoic Era"
      ],
      "topic": "Rodinia Supercontinent",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Meaning :- Rodina = motherland",
            "Time :- 1.1BYA-750MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Mesoproterozoic Era": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "Mesoproterozoic Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Continents were the same as /Paleoproterozoic Era",
            "Breakup of /Columbia Supercontinent",
            "Development of /Sexual Reproduction",
            "Common /Stromatolite",
            ""
          ],
          "sublinks": [
            "Rodinia Supercontinent"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [
            ""
          ],
          "sublinks": [
            "Calymmian Period",
            "Ectasian Period",
            "Stenian Period"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 12,
          "points": [
            "Time :- 1.6BYA-1BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Statherian Period": {
      "course": "Geography",
      "parents": [
        "Paleoproterozoic Era"
      ],
      "topic": "Statherian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Start of /Boring Billion",
            "New fold belts on continents",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Statheros = stable,firm",
            "Time :- 1.8BYA-1.6BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Columbia Supercontinent": {
      "course": "Geography",
      "parents": [
        "Orosirian Period"
      ],
      "topic": "Columbia Supercontinent",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Time :- 2.5BYA-1.5BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Sudbury Basin": {
      "course": "Geography",
      "parents": [
        "Orosirian Period"
      ],
      "topic": "Sudbury Basin",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Third largest impact crater",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Location :- North of Lake Huron",
            "Diameter :- 130km",
            "Time :- 1.85BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Vredefort Crater": {
      "course": "Geography",
      "parents": [
        "Orosirian Period"
      ],
      "topic": "Vredefort Crater",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Largest impact crater",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Location :- Near Johannesburg",
            "Diameter :- 300km",
            "Time :- 2.02BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Orosirian Period": {
      "course": "Geography",
      "parents": [
        "Paleoproterozoic Era"
      ],
      "topic": "Orosirian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Mountain building",
            "Impact craters",
            ""
          ],
          "sublinks": [
            "Trans Hudson Orogeny",
            "Penokean Orogeny",
            "Wopmay Orogeny",
            "Vredefort Crater",
            "Sudbury Basin",
            "Columbia Supercontinent"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 10,
          "points": [
            "Meaning :- Oroseira = mountain range",
            "Time :- 2.05BYA-1.8BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Bushveld Igneous Complex": {
      "course": "Geography",
      "parents": [
        "Rhyacian Period"
      ],
      "topic": "Bushveld Igneous Complex",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Ore deposits",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Location :- South Africa",
            "Time :- 2BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Rhyacian Period": {
      "course": "Geography",
      "parents": [
        "Paleoproterozoic Era"
      ],
      "topic": "Rhyacian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Tectonic activity",
            ""
          ],
          "sublinks": [
            "Ungava Magmatic Orogeny",
            "Eburnean Orogeny",
            "Bushveld Igneous Complex"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "Meaning :- Rhyax = stream of lava",
            "Time :- 2.3BYA-2.05BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Huronian Glaciation": {
      "course": "Geography",
      "parents": [
        "Paleoproterozoic Era"
      ],
      "topic": "Huronian Glaciation",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Caused by decrease in methane, leading to lower greenhouse effect",
            "Mass extinction",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Lake Huron",
            "Time :- 2.4BYA-2.1BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Siderian Period": {
      "course": "Geography",
      "parents": [
        "Paleoproterozoic Era"
      ],
      "topic": "Siderian Period",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Start of /Great Oxidation Event",
            "Start of /Huronian Glaciation",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Sideros = iron",
            "Time :- 2.5BYA-2.3BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Archaea": {
      "course": "Science",
      "parents": [
        "Life"
      ],
      "topic": "Archaea",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Bacteria": {
      "course": "Science",
      "parents": [
        "Life"
      ],
      "topic": "Bacteria",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Life": {
      "course": "Science",
      "parents": [
        "Biology"
      ],
      "topic": "Life",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Eukaryote"
          ],
          "sublinks": [
            "Bacteria",
            "Archaea"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Eurkaryote": {
      "course": "Science",
      "parents": [

      ],
      "topic": "Eurkaryote",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Organism whose cells have a nucleus within nuclear envelope",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Meaning :- Eu = good, Karyon = nut"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Cyanobacteria": {
      "course": "Science",
      "parents": [

      ],
      "topic": "Cyanobacteria",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "First known photosynthesisers"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Torngat Orogeny": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "Torngat Orogeny",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Location :- Northern tip of Newfoundland & Labrador",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [
            "Torngat Mountains"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Ungava Magmatic Orogeny": {
      "course": "Geography",
      "parents": [
        "Rhyacian Period"
      ],
      "topic": "Ungava Magmatic Orogeny",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Time :- 2.22BYA",
            "Location :- Quebec",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 4,
          "points": [
            "Quebec dikes",
            "Nipissing sills of Ontario"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Wopmay Orogeny": {
      "course": "Geography",
      "parents": [
        "Orosirian Period"
      ],
      "topic": "Wopmay Orogeny",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Meaning :- Canadian WW1 flying ace",
            "Location :- Great Bear Lake",
            "Time :- 1.88BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Penokean Orogeny": {
      "course": "Geography",
      "parents": [
        "Orosirian Period"
      ],
      "topic": "Penokean Orogeny",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Location :- Lake Superior",
            "Time :- 1.86BYA-1.83BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Trans Hudson Orogeny": {
      "course": "Geography",
      "parents": [
        "Orosirian Period"
      ],
      "topic": "Trans Hudson Orogeny",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Location :- Dakota, Saskatechewan",
            "Time :- 2BYA-1.8BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Eburnean Orogeny": {
      "course": "Geography",
      "parents": [
        "Rhyacian Period"
      ],
      "topic": "Eburnean Orogeny",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Location :- West Africa (Ghana, Mali)",
            "Time :- 2.2BYA-2BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Great Oxidation Event": {
      "course": "Geography",
      "parents": [
        "Paleoproterozoic Era"
      ],
      "topic": "Great Oxidation Event",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Caused by /Cyanobacteria",
            "Oxygen filled the oceans",
            "Anaerobic species died off",
            "Atmosphere was very oxidising"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Paleoproterozoic Era": {
      "course": "Geography",
      "parents": [
        "Proterozoic Eon"
      ],
      "topic": "Paleoproterozoic Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Longest era of earth",
            "Stable continents",
            "Rise of /Eukaryote",
            "Boring Billion",
            "Orogeny in West Africa & Canada",
            ""
          ],
          "sublinks": [
            "Great Oxidation Event",
            "Huronian Glaciation"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 9,
          "points": [
            ""
          ],
          "sublinks": [
            "Siderian Period",
            "Rhyacian Period",
            "Orosirian Period",
            "Statherian Period"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 15,
          "points": [
            "Meaning :- /Paleo, /Protero, /Zoic",
            "Time :- 2.5BYA-1.6BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Proterozoic Eon": {
      "course": "Geography",
      "parents": [
        "Paleogeography"
      ],
      "topic": "Proterozoic Eon",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Proliferation of advanced life",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Paleoproterozoic Era"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "Meaning :- Protero = earlier",
            "Time :- 2.5BYA-541MYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Neoarchean Era": {
      "course": "Geography",
      "parents": [
        "Archean Eon"
      ],
      "topic": "Neoarchean Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Rise of oxygenic photosynthesis (/Cyanobacteria)",
            "Change in soil composition",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Neo = new",
            "Time :- 2.8BYA-2.5BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Mesoarchean Era": {
      "course": "Geography",
      "parents": [
        "Archean Eon"
      ],
      "topic": "Mesoarchean Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Atmosphere full of methane and co2",
            "Start of plate subduction",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Meso = middle",
            "Time :- 3.2BYA-2.8BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Paleoarchean Era": {
      "course": "Geography",
      "parents": [
        "Archean Eon"
      ],
      "topic": "Paleoarchean Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Photosynthetic organisms appeared",
            "Vaalbara supercontinent",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Palaios = ancient",
            "Time :- 3.6BYA-3.2BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Eoarchean Era": {
      "course": "Geography",
      "parents": [
        "Archean Eon"
      ],
      "topic": "Eoarchean Era",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Evidence of cyanobacteria",
            "Oxygenless dense atmosphere",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Eo = dawn",
            "Time : 4BYA-3.6BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Archean Eon": {
      "course": "Geography",
      "parents": [
        "Paleogeography"
      ],
      "topic": "Archean Eon",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Crust cooled, continents formed",
            "Start of early life",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Meaning :- Arkhe = beginning",
            "Time :- 4BYA-2.5BYA",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Eoarchean Era",
            "Paleoarchean Era",
            "Mesoarchean Era",
            "Neoarchean Era"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Hadean Eon": {
      "course": "Geography",
      "parents": [
        "Paleogeography"
      ],
      "topic": "Hadean Eon",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Earth was still forming",
            "Hellish landscape",
            "Water",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "Meaning :- Hades",
            "Time :- 4.6BYA-4BYA"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Paleogeography": {
      "course": "Geography",
      "parents": [
        "Physical Geography"
      ],
      "topic": "Paleogeography",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "Eon",
            "Era",
            "Period",
            "Epoch",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Hadean Eon",
            "Archean Eon",
            "Proterozoic Eon",
            "Phanerozoic Eon"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Physical Geography": {
      "course": "Geography",
      "parents": [
        "Geography"
      ],
      "topic": "Physical Geography",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "Biosphere",
            "Hydrosphere",
            "Atmosphere",
            "Geosphere"
          ],
          "sublinks": [
            "Paleogeography"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Human Geography": {
      "course": "Geography",
      "parents": [
        "Geography"
      ],
      "topic": "Human Geography",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "City",
            "Country",
            "Politics"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Geography": {
      "course": "Geography",
      "parents": [

      ],
      "topic": "Geography",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Human Geography",
            "Physical Geography"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "Java Insertion Sort": {
      "course": "CS2040S",
      "parents": [
        "Insertion Sort"
      ],
      "topic": "Java Insertion Sort",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "void InsertionSort(int[] array)",
            " int size = array.length;",
            " for (int i=1; i<size; i++)",
            "   for (int j=i; j>0; j--)",
            "     if (array[j-1] > array[j])",
            "       swap(array, j-1, j);",
            "     else break;",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/02/2022",
      "important": null
    },
    "Split AB Tree": {
      "course": "CS2040S",
      "parents": [
        "AB Tree"
      ],
      "topic": "Split AB Tree",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Split AB Tree",
            "Once a node becomes too heavy, pick the median key",
            "Shift the median to the parent",
            "Send the child of the median to the left sibling",
            "Connect left sibling to median",
            "Keep repeating until the parent is stable",
            "Split root node by creating a fake parent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "AB Tree Rule 3": {
      "course": "CS2040S",
      "parents": [
        "AB Tree Rules"
      ],
      "topic": "AB Tree Rule 3",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Grows upwards like a pyramid, with leaves staying put at the base"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "AB Tree Rule 2": {
      "course": "CS2040S",
      "parents": [
        "AB Tree Rules"
      ],
      "topic": "AB Tree Rule 2",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Keys in a node split the children into keys+1 number of ranges"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "AB Tree Rule 1": {
      "course": "CS2040S",
      "parents": [
        "AB Tree Rules"
      ],
      "topic": "AB Tree Rule 1",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Root node keys [1, b-1] children [2, b]",
            "Internal node keys [a-1, b-1] children [a, b]",
            "Leaf node keys [a-1, b-1] children [0, 0]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "AB Tree Rules": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "AB Tree Rules",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "AB Tree Rule 1",
            "AB Tree Rule 2",
            "AB Tree Rule 3"
          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "AB Tree": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "AB Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Each node can have more than 2 children",
            "Each node can store multiple keys",
            "a and b are minumum and maximum children in a node",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 5,
          "points": [
            ""
          ],
          "sublinks": [
            "Split AB Tree"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "B Tree"
          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "B Tree": {
      "course": "CS2040S",
      "parents": [
        "AB Tree",
        "Balanced Tree"
      ],
      "topic": "B Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Type of /AB Tree where B = 2A",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Used in all major databases",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 6,
          "points": [
            "+ Good cache performance",
            "+ Low overhead"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/02/2022",
      "important": null
    },
    "Alternative Hypothesis": {
      "course": "GEA1000",
      "parents": [
        "Hypothesis Testing"
      ],
      "topic": "Alternative Hypothesis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Should be the exceptional case, mutually exclusive to the /Null Hypothesis",
            "Everything happens for a reason"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Null Hypothesis": {
      "course": "GEA1000",
      "parents": [
        "Hypothesis Testing"
      ],
      "topic": "Null Hypothesis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Should be the default hypothesis, either no association or sample statistic equals to a certain value",
            "Assumes everything happens due to chance"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Hypothesis Testing": {
      "course": "GEA1000",
      "parents": [
        "Statistical Inference"
      ],
      "topic": "Hypothesis Testing",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Don't use it when you have access to the full population",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Identify question and state null & alternative hypotheses",
            "Collect relevant data based on test statistic",
            "Determine level of significance and compute p-value",
            "Making conclusion about null hypothesis",
            "Find P(observation & everything rarer than it)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 10,
          "points": [
            "Person :- Ronald Fischer",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 13,
          "points": [
            ""
          ],
          "sublinks": [
            "T Test",
            "Chi Square Test"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 17,
          "points": [

          ],
          "sublinks": [
            "Null Hypothesis",
            "Alternative Hypothesis"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Pooled Sample Variance": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Pooled Sample Variance",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Sp²=((n₁-1)s₁²+(n₂-1)s₂²)/(n₁+n₂-2)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/04/2022",
      "important": "Important"
    },
    "Unknown Equal Variance Mean Difference Hypothesis Testing": {
      "course": "ST2334",
      "parents": [
        "Difference Hypothesis Testing"
      ],
      "topic": "Unknown Equal Variance Mean Difference Hypothesis Testing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Populations are normal or n is large enough",
            "T=((X̄-μ)₁-(X̄-μ)₂)/√Sp(1/n₁+1/n₂)~T(n₁+n₂-2)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/04/2022",
      "important": "Important"
    },
    "Unknown Variance Mean Difference Hypothesis Testing": {
      "course": "ST2334",
      "parents": [
        "Difference Hypothesis Testing"
      ],
      "topic": "Unknown Variance Mean Difference Hypothesis Testing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "n is large enough",
            "T=((X̄-μ)₁-(X̄-μ)₂)/√((s²/n)₁+(s²/n)₂)~N(0,1)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/04/2022",
      "important": null
    },
    "Known Variance Mean Difference Hypothesis Testing": {
      "course": "ST2334",
      "parents": [
        "Difference Hypothesis Testing"
      ],
      "topic": "Known Variance Mean Difference Hypothesis Testing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Variance is known",
            "Z=((X̄-μ)₁-(X̄-μ)₂)/√((σ²/n)₁+(σ²/n)₂)~N(0,1)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/04/2022",
      "important": null
    },
    "Unknown Variance Mean Confidence Interval": {
      "course": "ST2334",
      "parents": [
        "Mean Confidence Interval"
      ],
      "topic": "Unknown Variance Mean Confidence Interval",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "n is large enough",
            "T=(X̄-μ)/(S/√n)",
            "P(X̄-t[n-1,a/2](S/√n)<μ<X̄+t[n-1,a/2](S/√n))=1-a",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 5,
          "points": [
            "::Determine confidence interval using sample mean x̄, sample size n, sample deviation s, value from t-distribution t*",
            "x̄±t*s/√n"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Known Variance Mean Confidence Interval": {
      "course": "ST2334",
      "parents": [
        "Mean Confidence Interval"
      ],
      "topic": "Known Variance Mean Confidence Interval",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Variance is known",
            "Z=(X̄-μ)/(σ/√n)~N(0,1)",
            "P(-z[a/2]<Z<z[a/2])=1-a",
            "e≥z[a/2]σ/√n ⟺ n≥(z[a/2]σ/e)²"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/03/2022",
      "important": null
    },
    "Mean Confidence Interval": {
      "course": "GEA1000",
      "parents": [
        "Confidence Interval"
      ],
      "topic": "Mean Confidence Interval",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Known Variance Mean Confidence Interval",
            "Unknown Variance Mean Confidence Interval"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Proportion Confidence Interval": {
      "course": "GEA1000",
      "parents": [
        "Confidence Interval"
      ],
      "topic": "Proportion Confidence Interval",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Determine confidence interval using sample population p*, sample size n, value from normal distribution z*",
            "p*±z*√(p*(1-p*)/n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Confidence Interval": {
      "course": "GEA1000",
      "parents": [
        "Normal Estimation",
        "Statistical Inference"
      ],
      "topic": "Confidence Interval",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Use probability to determine how accurate the estimate is of the population parameters",
            "We are k% confident that the population proportion lies within the k% confidence interval",
            "NOT k% CHANCE SINCE THERE IS NO RANDOM PROCESS",
            "There is a k% chance of selecting a correct confidence interval",
            "When you use the entire population, there is no random error, so confidence interval is width 0",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Proportion Confidence Interval",
            "Mean Confidence Interval",
            "Difference Hypothesis Testing"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Normal Distribution": {
      "course": "GEA1000",
      "parents": [
        "Continuous Distribution",
        "Probability Density Function"
      ],
      "topic": "Normal Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Defined by the mean and variance of the distribution",
            "P((a-x̄)/sd < Z < (b-x̄)/sd)",
            "N(50, 10²) for P(X<45) ⟹ NORM.DIST(45, 50, 10)",
            "N(50, 10²) for P(X<a) = 0.05 ⟹ NORM.INV(0.05, 50, 10)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Specificity": {
      "course": "GEA1000",
      "parents": [
        "Conditional Probability"
      ],
      "topic": "Specificity",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "True negative rate",
            "P(~CVD|-)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Sensitivity": {
      "course": "GEA1000",
      "parents": [
        "Conditional Probability"
      ],
      "topic": "Sensitivity",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "True positive rate",
            "P(CVD|+)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Conditional Probability": {
      "course": "GEA1000",
      "parents": [
        "Statistical Inference"
      ],
      "topic": "Conditional Probability",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sensitivity",
            "Specificity"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Proportion": {
      "course": "GEA1000",
      "parents": [
        "Statistical Inference"
      ],
      "topic": "Proportion",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "An estimate for the true probability of the experiment"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Statistical Inference": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Statistical Inference",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Using data to answer questions on data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Basics Of Probability",
            "Proportion",
            "Conditional Probability",
            "Random Variable"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Confidence Interval",
            "Hypothesis Testing"
          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Standard Unit": {
      "course": "GEA1000",
      "parents": [
        "Correlation Coefficient"
      ],
      "topic": "Standard Unit",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "SU(x) = (x-x̄)/sₓ",
            "Z = (X-μ)/s"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": "Important"
    },
    "Regression Strength": {
      "course": "GEA1000",
      "parents": [
        "Regression Analysis"
      ],
      "topic": "Regression Strength",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Strong relationship",
            "Weak relationship"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Regression Form": {
      "course": "GEA1000",
      "parents": [
        "Regression Analysis"
      ],
      "topic": "Regression Form",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Linear",
            "Non-linear"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Regression Direction": {
      "course": "GEA1000",
      "parents": [
        "Regression Analysis"
      ],
      "topic": "Regression Direction",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            "Positive",
            "Negative",
            "Neither"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Non Linear Regression": {
      "course": "GEA1000",
      "parents": [
        "Regression"
      ],
      "topic": "Non Linear Regression",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can use linear law to convert non-linear into linear"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Linear Association": {
      "course": "GEA1000",
      "parents": [
        "Linear Regression",
        "Association"
      ],
      "topic": "Linear Association",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Whether A and B are linearly associated",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Correlation Coefficient"
          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Excel Regression Line": {
      "course": "GEA1000",
      "parents": [
        "Linear Regression"
      ],
      "topic": "Excel Regression Line",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Create regression line",
            "Highlight two columns",
            "Insert /Scatter Plot",
            "Go to Chart Design and add chart element",
            "Trendline linear",
            "Right-click on trendline",
            "Format trendline and display equation and R value",
            "::Create matrix of regression values",
            "Go to Data Analysis (after going tools > excel add ins)",
            "Choose regression and the columns you want"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Linear Regression": {
      "course": "GEA1000",
      "parents": [
        "Regression"
      ],
      "topic": "Linear Regression",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Represents a /Statistical Relationship with a linear equation Y=mX+b",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "<MA m = r(SDy/SDx) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "Obtained by minimising the squares of differences",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Linear Association",
            "Excel Regression Line"
          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Regression Analysis": {
      "course": "GEA1000",
      "parents": [
        "Regression"
      ],
      "topic": "Regression Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "You can't extrapolate outside of the range of the data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Regression Direction",
            "Regression Form",
            "Regression Strength"
          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Regression": {
      "course": "GEA1000",
      "parents": [
        "Statistical Relationship"
      ],
      "topic": "Regression",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Linear Regression",
            "Non Linear Regression"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Regression Analysis"
          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Scatter Plot": {
      "course": "GEA1000",
      "parents": [
        "Statistical Relationship"
      ],
      "topic": "Scatter Plot",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Get idea of the pattern between two variables"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Statistical Relationship": {
      "course": "GEA1000",
      "parents": [
        "Bivariate Relationship"
      ],
      "topic": "Statistical Relationship",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Natural variability in relation between two variables",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Scatter Plot",
            "Regression"
          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Unique True Value": {
      "course": "GEA1000",
      "parents": [
        "True Value"
      ],
      "topic": "Unique True Value",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Function is /Injective"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "True Value": {
      "course": "GEA1000",
      "parents": [
        "Deterministic Relationship"
      ],
      "topic": "True Value",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Function representing the /Deterministic Relationship is well-defined",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Unique True Value"
          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Deterministic Relationship": {
      "course": "GEA1000",
      "parents": [
        "Bivariate Relationship"
      ],
      "topic": "Deterministic Relationship",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Fixed relation between two variables",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Physics conversions (℃ → Fahrenheit)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "True Value"
          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Bivariate Relationship": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Bivariate Relationship",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Deterministic Relationship",
            "Statistical Relationship"
          ]
        }
      },
      "date": "23/02/2022",
      "important": null
    },
    "Excel Format Axis": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Excel Format Axis",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Change axis zero",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Right click on axis",
            "Format axis"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Excel Change Chart Type": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Excel Change Chart Type",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Change type of chart",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Right click on chart",
            "Change chart type"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Excel Convert To Percentage": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Excel Convert To Percentage",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Convert pivot table to percentages",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Right click on value header",
            "Value field settings",
            "Show data as"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Slicing Data": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Slicing Data",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "To stratify the data to eliminate /Simpson's Paradox"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Random Assignment": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Random Assignment",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "To ensure an equal representation of confounders",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- Unethical"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Simpson's Paradox": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Simpson's Paradox",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Relationship between rates in subgroups are reversed/disappears when subgroups are combined",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "/Confounder is what makes the difference in rates",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 6,
          "points": [
            "C₁: P(A|B)>P(A|~B) and C₂: P(A|B)<P(A|~B)",
            "Simpson's Paradox occurs with C as /Confounder"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Confounder": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Confounder",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Tests whether a variable affects others",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Testing A~B, with C as confounder",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 6,
          "points": [
            "P(A|C)≠P(A|~C) ⋀ P(B|C)≠P(B|~C)",
            "Correlation coefficient between A and C and B and C are not 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Negative Association": {
      "course": "GEA1000",
      "parents": [
        "Association"
      ],
      "topic": "Negative Association",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A and B are negatively associated ⟺ A increase → B decrease",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 3,
          "points": [
            "P(A|B) < rate(A|~B)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Positive Association": {
      "course": "GEA1000",
      "parents": [
        "Association"
      ],
      "topic": "Positive Association",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A and B are positively associated ⟺ A increase → B increase",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 3,
          "points": [
            "P(A|B) > rate(A|~B)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Work Stealing": {
      "course": "CS2030S",
      "parents": [
        "Fork And Join"
      ],
      "topic": "Work Stealing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "An idle worker will take somebody else's work (from the back of the queue)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Java Recursive Task": {
      "course": "CS2030S",
      "parents": [
        "Fork And Join"
      ],
      "topic": "Java Recursive Task",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [
            "T compute() :- outputs the computed value",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 3,
          "points": [
            "<JV",
            "left.fork();",
            "right.fork();",
            "return right.join() + left.join();",
            "is faster than <JV",
            "left.fork();",
            "right.fork();",
            "return left.join() + right.join();",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Fork And Join": {
      "course": "CS2030S",
      "parents": [
        "Thread"
      ],
      "topic": "Fork And Join",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Parallel divide-and-conquer model of computation",
            "Fork creates a new task to do and adds them to a deque",
            "Join combines the results",
            "The moment we wait for something to run, we pick up a new task from the front of the deque",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "Fork whatever tasks to add them to the deque",
            "Last one to be forked should be the first one that should be joined**",
            "If a thread is free, they can just steal work from the back of another thread's deque",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 11,
          "points": [
            ""
          ],
          "sublinks": [
            "Java Recursive Task"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 14,
          "points": [

          ],
          "sublinks": [
            "Work Stealing"
          ]
        }
      },
      "date": "04/04/2022",
      "important": "Important"
    },
    "Java Completable Future": {
      "course": "CS2030S",
      "parents": [
        "Promise"
      ],
      "topic": "Java Completable Future",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [
            "static CompletableFuture completedFuture(T) :- Create an async object using an already computed thing",
            "static CompletableFuture runAsync(Runnable) :- Create an async object based on a lambda",
            "static CompletableFuture supplyAsync(Supplier) :- Create an async object using a Supplier",
            "CompletableFuture thenApply(Function) :- map",
            "CompletableFuture thenCompose(Function) :- flatMap",
            "CompletableFuture thenCombine(T, Combiner) :- combine",
            "CompletableFuture xxAsync(Function) :- this operation can be done by another thread",
            "CompletableFuture allOf(*CompletableFuture) :- Must wait for all the asyncs to complete",
            "CompletableFuture oneOf(*CompletableFuture) :- Can continue when one async is complete",
            "handle(Function[CompletableFuture,Exception]) :- Handles exceptions",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 12,
          "points": [
            "<JV",
            "CompletableFuture<Integer> a = CompletableFuture.supplyAsync(() → ƒ())",
            "CompletableFuture<Integer> b = CompletableFuture.supplyAsync(() → 𝒈())",
            "CompletableFuture<Integer> c = a.thenCombine(b,(x,y)→x-y)",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Promise": {
      "course": "CS2030S",
      "parents": [
        "Thread"
      ],
      "topic": "Promise",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Ensures that certain threads are run first, before moving onto others",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Java Completable Future"
          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Java Thread": {
      "course": "CS2030S",
      "parents": [
        "Thread"
      ],
      "topic": "Java Thread",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV"
          ],
          "sublinks": [

          ]
        },
        "Thread newThread = new Thread(() → System.out.println());": {
          "section": "Thread newThread = new Thread(() → System.out.println());",
          "index": 2,
          "points": [
            "newThread.start();",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Thread Exception Handling": {
      "course": "CS2030S",
      "parents": [
        "Thread"
      ],
      "topic": "Thread Exception Handling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If exceptions are not handled within the async, any exception will terminate the whole program"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/04/2022",
      "important": null
    },
    "Thread": {
      "course": "CS2030S",
      "parents": [
        "Asynchronous Programming"
      ],
      "topic": "Thread",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can run threads together",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- Overhead",
            "- Not easy to pass information",
            ""
          ],
          "sublinks": [
            "Thread Exception Handling"
          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 8,
          "points": [
            "boolean isAlive() :- Checks whether thread is alive",
            "void sleep(ms) :- sleeps",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 12,
          "points": [
            ""
          ],
          "sublinks": [
            "Java Thread"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 15,
          "points": [

          ],
          "sublinks": [
            "Promise",
            "Fork And Join"
          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Parallelised Stream": {
      "course": "CS2030S",
      "parents": [
        "Asynchronous Programming",
        "Stream"
      ],
      "topic": "Parallelised Stream",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Split your streams into different segments",
            "Can run different parallel streams in any order",
            "Asymmetrical functions may produce unexpected results (ƒ(x,y) ≠ ƒ(y,x))"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/03/2022",
      "important": null
    },
    "Asynchronous Programming": {
      "course": "CS2030S",
      "parents": [
        "CS2030S"
      ],
      "topic": "Asynchronous Programming",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Parallelised Stream",
            "Thread"
          ]
        }
      },
      "date": "04/04/2022",
      "important": null
    },
    "Composition Law (Functor)": {
      "course": "CS2030S",
      "parents": [
        "Functor (FP)"
      ],
      "topic": "Composition Law (Functor)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "functor.map(x → ƒ(x)).map(x → 𝒈(x)) ⟺ functor.map(x → 𝒈(ƒ(x)))",
            "Applying methods inside ⟺ successively applying the methods"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/03/2022",
      "important": null
    },
    "Identity Law (Functor)": {
      "course": "CS2030S",
      "parents": [
        "Functor (FP)"
      ],
      "topic": "Identity Law (Functor)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "functor.map(x → x) ⟺ functor",
            "You can map to itself"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/03/2022",
      "important": null
    },
    "Functor (FP)": {
      "course": "CS2030S",
      "parents": [
        "Functional Programming"
      ],
      "topic": "Functor (FP)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Identity Law (Functor)",
            "Composition Law (Functor)"
          ]
        }
      },
      "date": "31/03/2022",
      "important": null
    },
    "Associative Law (Monad)": {
      "course": "CS2030S",
      "parents": [
        "Monad (FP)"
      ],
      "topic": "Associative Law (Monad)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "monad.flatMap(x → ƒ(x)).flatMap(x → 𝒈(x)) ⟺ monad.flatMap(x → ƒ(x).flatMap(x → 𝒈(x)), where f, g return monads",
            "Order of operations on a monad doesn't matter"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/03/2022",
      "important": "Important"
    },
    "Right Identity Law (Monad)": {
      "course": "CS2030S",
      "parents": [
        "Monad (FP)"
      ],
      "topic": "Right Identity Law (Monad)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "monad.flatMap(x → Monad.of(x)) ⟺ monad",
            "Take out the wrapper and put the x back into the monad"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/03/2022",
      "important": null
    },
    "Left Identity Law (Monad)": {
      "course": "CS2030S",
      "parents": [
        "Monad (FP)"
      ],
      "topic": "Left Identity Law (Monad)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Monad.of(x).flatMap(x → ƒ(x)) ⟺ ƒ(x)",
            "Take out the wrapper and apply ƒ to x"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/03/2022",
      "important": null
    },
    "Monad (FP)": {
      "course": "CS2030S",
      "parents": [
        "Functional Programming"
      ],
      "topic": "Monad (FP)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Wrapper containing some data that follow a particular set of rules",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Change data inside maintaining the wrapper (map)",
            "Extract the data from a layer of wrapping (flatMap)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "Maybe<T>",
            "Lazy<T>",
            "Loggable<T>",
            "InfiniteList<T>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Left Identity Law (Monad)",
            "Right Identity Law (Monad)",
            "Associative Law (Monad)"
          ]
        }
      },
      "date": "31/03/2022",
      "important": "Important"
    },
    "NUS VPN": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "NUS VPN",
      "contents": {
      },
      "date": "24/03/2022",
      "important": null
    },
    "Java Stream": {
      "course": "CS2030S",
      "parents": [
        "Stream"
      ],
      "topic": "Java Stream",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "SHOULD NOT INTERFERE WITH ITS OWN ELEMENTS (add extra elements)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 3,
          "points": [
            "forEach(function that returns nothing) :- does this for everything in the evaluated stream",
            "takeWhile(boolean) :- stops the evaluation at some point in the stream",
            "peek(λ) :- applies a function to each element in the stream",
            "parallel() :- converts the stream to parallel"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/03/2022",
      "important": "Important"
    },
    "Stream": {
      "course": "CS2030S",
      "parents": [
        "Lazy Evaluation"
      ],
      "topic": "Stream",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [
            "reduce(<U,T>) :- accumulates the elements from the start and returns a single type U",
            "iterate(T, Predicate<T>, Function<T,T>) :- Uses a start value, terminating condition, and generator function",
            "parallel() :- parallelise the stream",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 5,
          "points": [
            ""
          ],
          "sublinks": [
            "Java Stream"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Parallelised Stream"
          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Java Infinite List": {
      "course": "CS2030S",
      "parents": [
        "Infinite List"
      ],
      "topic": "Java Infinite List",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "public <R> InfiniteList<R> map(Transformer<? super T, ? extends R> mapper) {",
            " return new InfiniteList<>(() → mapper.transform(this.head()), () → this.tail().map(mapper));",
            "}",
            "",
            "public InfiniteList<T> filter(BooleanCondition<? super T> cond) {",
            " Producer<T> tempHead = () → {",
            "   if (cond.test(this.head())) {",
            "     return this.head();",
            "   } else {",
            "     return null;",
            "   }",
            " };",
            " return new InfiniteList<>(tempHead, () → this.tail().filter(cond));",
            "}"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Infinite List": {
      "course": "CS2030S",
      "parents": [
        "Lazy Evaluation"
      ],
      "topic": "Infinite List",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Tail will produce items",
            "Only get what you need from the list",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Java Infinite List"
          ]
        }
      },
      "date": "21/03/2022",
      "important": null
    },
    "Memoization (FP)": {
      "course": "CS2030S",
      "parents": [
        "Functional Programming"
      ],
      "topic": "Memoization (FP)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Once you run something once, you shouldn't need to run it again, so just store a \"processed\" boolean to check whether the function has been run"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Java Lazy Evaluation": {
      "course": "CS2030S",
      "parents": [
        "Lazy Evaluation"
      ],
      "topic": "Java Lazy Evaluation",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "Producer<Integer> p = () -> 3;",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Lazy Evaluation": {
      "course": "CS2030S",
      "parents": [
        "Functional Programming"
      ],
      "topic": "Lazy Evaluation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Delay computation",
            "Able to process infinite data structures",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Java Lazy Evaluation"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Infinite List",
            "Stream"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Curried Function": {
      "course": "CS2030S",
      "parents": [
        "Functions (FP)"
      ],
      "topic": "Curried Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Take the function of multiple arguments and converting it into a serious of functions that each take a single argument and return a function of a single argument, or in the case of the final function, return the actual result",
            "ƒ(a,b,c) ⟹ 𝒈(a)(b)(c)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Java Lambda Expression": {
      "course": "CS2030S",
      "parents": [
        "Lambda Expression"
      ],
      "topic": "Java Lambda Expression",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "Comparator<String> cmp =",
            " (String s1, String s2) -> s1.length() - s2.length()",
            "Transformer<Point, Double> dist = p -> origin.distanceTo(p);",
            "Transformer<Point, Double> dist = origin::distanceTo",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Lambda Expression": {
      "course": "CS2030S",
      "parents": [
        "Functions (FP)"
      ],
      "topic": "Lambda Expression",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can easily implement /Functional Interface as a λ expression",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Java Lambda Expression"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Functional Interface": {
      "course": "CS2030S",
      "parents": [
        "Functions (FP)"
      ],
      "topic": "Functional Interface",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Interface that performs only one function",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Java Comparator"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Pure Function": {
      "course": "CS2030S",
      "parents": [
        "Functions (FP)"
      ],
      "topic": "Pure Function",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "No side-effects :- no print, write, exceptions, modify"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Referential Transparency": {
      "course": "CS2030S",
      "parents": [
        "Functional Programming"
      ],
      "topic": "Referential Transparency",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "An expression is referentially transparent if it can be replaced with its corresponding value without changing the program's behavious",
            "/Deterministic Relationship"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Functions (FP)": {
      "course": "CS2030S",
      "parents": [
        "Functional Programming"
      ],
      "topic": "Functions (FP)",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Pure Function",
            "Curried Function"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Lambda Expression",
            "Functional Interface"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Functional Programming": {
      "course": "CS2030S",
      "parents": [
        "CS2030S"
      ],
      "topic": "Functional Programming",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Referential Transparency",
            "Functions (FP)",
            "Lazy Evaluation",
            "Memoization (FP)",
            "Monad (FP)",
            "Functor (FP)"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Variable Capture": {
      "course": "CS2030S",
      "parents": [
        "Stack Heap Diagram"
      ],
      "topic": "Variable Capture",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "When running a function, it creates local variables, which may have to be captured by the object"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "J Shell Script": {
      "course": "CS2030S",
      "parents": [
        "Lab Workflow",
        "Shell Environment"
      ],
      "topic": "J Shell Script",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Replicate what you do in the jshell",
            "jsh files"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Java Comparator": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "Java Comparator",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A third party interface that can compare two object",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 3,
          "points": [
            "<JV compare(T o1, T o2) JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Anonymous Class": {
      "course": "CS2030S",
      "parents": [
        "Inner Class"
      ],
      "topic": "Anonymous Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "An /Inner Class with no name",
            "Defined without using the class keyword",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "new AddK(3)",
            "⟹ new Transformer<Integer, Integer> {transform{return x+k;}}"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Local Class": {
      "course": "CS2030S",
      "parents": [
        "Inner Class"
      ],
      "topic": "Local Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Class defined within a method in a class",
            "Can access things within the method",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Isn't useful outside of the method it's defined in",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 7,
          "points": [
            "+ Doesn't clutter your workspace"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Static Nested Class": {
      "course": "CS2030S",
      "parents": [
        "Nested Class"
      ],
      "topic": "Static Nested Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Class defined within a class, but is set to static",
            "Can only reference static fields/methods of parent class"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Inner Class": {
      "course": "CS2030S",
      "parents": [
        "Nested Class"
      ],
      "topic": "Inner Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Class defined within a class, but is set to public",
            "Can reference attributes from outer class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Local variables referenced from an inner class must be final or /Effectively Final",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 7,
          "points": [
            "<JV A.this.x JV> or <JV x JV> to access parent field",
            "<JV this.x JV> to access inner class field",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 11,
          "points": [

          ],
          "sublinks": [
            "Local Class",
            "Anonymous Class"
          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Nested Class": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Nested Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Class defined within a class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Acts like a field, so can be given /Access Modifier",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Inner Class",
            "Static Nested Class"
          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Java Safe Varargs": {
      "course": "CS2030S",
      "parents": [
        "Immutable Array"
      ],
      "topic": "Java Safe Varargs",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV @SafeVarargs JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Tells compiler that using /Variable Arguments is a safe operation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Java Variable Arguments": {
      "course": "CS2030S",
      "parents": [
        "Immutable Array"
      ],
      "topic": "Java Variable Arguments",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV ƒ(T... items) {} JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Whatever arguments put within the parentheses will be converted into a single array, similar to Python's *args"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Immutable Array": {
      "course": "CS2030S",
      "parents": [
        "Immutability"
      ],
      "topic": "Immutable Array",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "No way to change the elements of the array, but can still get()",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<JV ImmutableArray.of(1,2,3,4,5) JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 6,
          "points": [
            "<JV ia.get(int) JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Java Safe Varargs",
            "Java Variable Arguments"
          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Immutability": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Immutability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "How to protect your variables so that they can't be changed",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Ease of understanding",
            "+ Enable safe sharing of Objects & Internals (Fields)",
            "+ Enable safe concurrent execution",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 8,
          "points": [
            "::Maintain Immutability",
            "Create a new Object everytime an operation is run",
            "Don't change the attributes",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Immutable Array"
          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "PE Workflow": {
      "course": "CS2030S",
      "parents": [
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "PE Workflow",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Set up environment",
            "Luminus multimedia Panopto",
            "ssh -t hafeez@stu.comp.nus.edu.sg ssh hafeez@pe103.comp.nus.edu.sg",
            "password U6BxL4kV",
            "~cs2030s/start-pe-0900",
            "~cs2030s/submit-pype1",
            "java -jar ~cs2030s/bin/checkstyle.jar -c ~cs2030s/bin/cs2030 checks.xml *.java"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/03/2022",
      "important": null
    },
    "Consumer Super": {
      "course": "CS2030S",
      "parents": [
        "PECS",
        "CS2030S PE1 Cheatsheet",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Consumer Super",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Insert information into the object",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "/Return Type",
            "<? super T>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 7,
          "points": [
            "<JV static <T> T foo(Array<? super T>){} JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Producer Extends": {
      "course": "CS2030S",
      "parents": [
        "PECS",
        "CS2030S PE1 Cheatsheet",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Producer Extends",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Take information out of the object",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "/Parameter Type",
            "<? extends T>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 7,
          "points": [
            "<JV static <? extends T> T foo(T){} JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Joint Rate": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Joint Rate",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Interested in the a single cell in the data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "P(A⋂B)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 6,
          "points": [
            "What proportion of the total did A and B"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Conditional Rate": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Conditional Rate",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Interested in a probability given an event",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "P(A|B), P(B|A)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 6,
          "points": [
            "What proportion of the ones who did B also did A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Marginal Rate": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Marginal Rate",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Only interested in a single column or row in the data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "P(A), P(B)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 6,
          "points": [
            "What proportion of the total did A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Association": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Association",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Positive Association",
            "Negative Association",
            "Linear Association"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "As long as not exactly equal, then they are associated",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 8,
          "points": [
            "P(A|B)≠P(A|~B) or P(B|A)≠P(B|~A)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 11,
          "points": [
            "- Weaker than /Causation",
            "- Many controls are needed to establish /Causation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": "Important"
    },
    "Rules For Rates": {
      "course": "GEA1000",
      "parents": [
        "Statistical Rate"
      ],
      "topic": "Rules For Rates",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R(A|B)<=>rate(A|B') ⟹ R(B|A)<=>rate(B|A')",
            "R(A|B)<>R(A)<>R(A|B')"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/03/2022",
      "important": null
    },
    "Statistical Rate": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Statistical Rate",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can be treated as probability if there is a probability sampling involved",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Marginal Rate",
            "Conditional Rate",
            "Joint Rate"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Association",
            "Simpson's Paradox",
            "Confounder",
            "Rules For Rates"
          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "PECS": {
      "course": "CS2030S",
      "parents": [
        "Wildcard (Generics)"
      ],
      "topic": "PECS",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Producer Extends",
            "Consumer Super"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Used to figure out which generic type to use",
            "Apply to all levels of nested generics"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Raw Type": {
      "course": "CS2030S",
      "parents": [
        "Generic Type",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Raw Type",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Only use it for /Java Instance Of",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- Compiler cannot catch mistakes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Java Equals (Generics)": {
      "course": "CS2030S",
      "parents": [
        "Generics",
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "Java Equals (Generics)",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "if (this == other) return true;",
            " if (other instanceof B<?>) {",
            "   B<?> b = (B<?>) other;",
            "   if (b.x == other.x) return true;",
            "   if (b.x == null || other.x == null) return false;",
            "   return b.x.equals(other.x);}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Java Instance Of": {
      "course": "CS2030S",
      "parents": [
        "Java Base"
      ],
      "topic": "Java Instance Of",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Checks whether the obj is of type Class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 3,
          "points": [
            "<JV obj instanceof Class JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/02/2022",
      "important": null
    },
    "Trie": {
      "course": "CS2040S",
      "parents": [
        "Data Tree"
      ],
      "topic": "Trie",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Tree with one letter in each node to represent words",
            "Add a terminating character",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "Regex searching",
            "Dictionary",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 8,
          "points": [
            "+ Saves space when storing similar strings"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Type Invariance": {
      "course": "CS2030S",
      "parents": [
        "Type Variance",
        "Generic Type"
      ],
      "topic": "Type Invariance",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Types will stay the same throughout",
            "Generic Types are always invariant",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<MA Array<String> !<: Array<Object> MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Type Covariance": {
      "course": "CS2030S",
      "parents": [
        "Type Variance"
      ],
      "topic": "Type Covariance",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Keeps the ordering",
            "<MA A <: B ⟹ I(A) <: I(B) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<MA A <: B ⟹ A[] <: B[] MA>",
            "<MA A <: B ⟹ Array<? extends A> <: Array<? extends B> MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Type Contravariance": {
      "course": "CS2030S",
      "parents": [
        "Type Variance"
      ],
      "topic": "Type Contravariance",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Reverses the ordering",
            "<MA A <: B ⟹ I(B) <: I(A) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<MA A <: B ⟹ Array<? super B> <: Array<? super A> MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Type Variance": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Type Variance",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Type Contravariance",
            "Type Covariance",
            "Type Invariance"
          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Unbounded Wildcard": {
      "course": "CS2030S",
      "parents": [
        "Wildcard (Generics)"
      ],
      "topic": "Unbounded Wildcard",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Wildcard can be substituted by any type",
            "Never use Class<Object>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Lower Bounded Wildcard": {
      "course": "CS2030S",
      "parents": [
        "Wildcard (Generics)"
      ],
      "topic": "Lower Bounded Wildcard",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Array<? super Shape>",
            "Wildcard can be substituted by a supertype of Shape, INCLUDING itself",
            "Obeys /Type Contravariance",
            "<MA A<S> <: A<? super S> MA>",
            "<MA S <: T ⟹ A<? super T> <: A<? super S> MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "<JV void copyTo(Array<? super T> a){} JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Upper Bounded Wildcard": {
      "course": "CS2030S",
      "parents": [
        "Wildcard (Generics)"
      ],
      "topic": "Upper Bounded Wildcard",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Array<? extends Shape>",
            "Wildcard can be substituted by a subtype of Shape, INCLUDING itself",
            "Obeys /Type Covariance",
            "A<S> <: A<? extends S>",
            "S <: T ⟹ A<? extends S> <: A<? extends T>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "<JV void copyFrom(Array<? extends T> a){} JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/02/2022",
      "important": null
    },
    "Wildcard (Generics)": {
      "course": "CS2030S",
      "parents": [
        "Generics"
      ],
      "topic": "Wildcard (Generics)",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Upper Bounded Wildcard",
            "Lower Bounded Wildcard",
            "Unbounded Wildcard"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "To overcome invariance in generic typing",
            "CANNOT be used during assignment new ArrayList<?>()",
            "CAN be used when instantiating arrays new ArrayList<?>[]",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "PECS"
          ]
        }
      },
      "date": "14/02/2022",
      "important": "Important"
    },
    "Continuous Random Variable (2D)": {
      "course": "ST2334",
      "parents": [
        "Random Variable (2D)"
      ],
      "topic": "Continuous Random Variable (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (X,Y) MA> is a 2D continuous if possible values of X and Y can assume all values in some region in ℝ²"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Discrete Random Variable (2D)": {
      "course": "ST2334",
      "parents": [
        "Random Variable (2D)"
      ],
      "topic": "Discrete Random Variable (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (X,Y) MA> is a 2D discrete if the possible values of X and Y are countably infinite"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Random Vector": {
      "course": "ST2334",
      "parents": [
        "Random Variable (2D)"
      ],
      "topic": "Random Vector",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (X,Y) MA>",
            "Another way of representing 2D Random Variables"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Range Space (2D)": {
      "course": "ST2334",
      "parents": [
        "Probability Function (2D)"
      ],
      "topic": "Range Space (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R = {(x,y)|x=X(s),y=Y(s),s∈S}"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Probability Function (2D)": {
      "course": "ST2334",
      "parents": [
        "Random Variable (2D)"
      ],
      "topic": "Probability Function (2D)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Range Space (2D)"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Joint Probability Function",
            "Marginal Probability Function",
            "Conditional Probability Function"
          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Random Variable (2D)": {
      "course": "ST2334",
      "parents": [
        "Random Variable"
      ],
      "topic": "Random Variable (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "We are interested in two different types of statistics",
            ""
          ],
          "sublinks": [
            "Random Vector"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Probability Function (2D)",
            "Expectation (2D)"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Discrete Random Variable (2D)",
            "Continuous Random Variable (2D)",
            "Independent Random Variables"
          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Chebyshev Inequality": {
      "course": "ST2334",
      "parents": [
        "Variance"
      ],
      "topic": "Chebyshev Inequality",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA P(|X-μ|≥c) ≤ Var(X)/c² MA>",
            "<MA P(|X-μ|<c) ≥ 1 - Var(X)/c² MA>",
            "<MA P(|X-μ|≥kσ) ≤ 1/k² MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/02/2022",
      "important": "Important"
    },
    "Variance": {
      "course": "ST2334",
      "parents": [
        "Expectation"
      ],
      "topic": "Variance",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Var(X) = E((X-E(X))²) = E(X²)-(E(X))² = ∑(x-E(X))²ƒ(x) = E((X-E(X))² MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "<MA V(aX+bY)=a²V(X)+b²V(Y) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Chebyshev Inequality",
            "Covariance"
          ]
        }
      },
      "date": "11/02/2022",
      "important": null
    },
    "Kth Moment Of X": {
      "course": "ST2334",
      "parents": [
        "Expectation"
      ],
      "topic": "Kth Moment Of X",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA E(Xᵏ) is the kth moment of X MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Expectation": {
      "course": "ST2334",
      "parents": [
        "Random Variable"
      ],
      "topic": "Expectation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA E(X)=∑xƒ(x)=ʃxƒ(x)dx MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Variance",
            "Kth Moment Of X",
            "Expectation (2D)"
          ]
        }
      },
      "date": "06/03/2022",
      "important": null
    },
    "Range Space": {
      "course": "ST2334",
      "parents": [
        "Functions (P)"
      ],
      "topic": "Range Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The set of possible values of the random variable X"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Java IO": {
      "course": "Java",
      "parents": [
        "Java Packages"
      ],
      "topic": "Java IO",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<JV java.io JV>",
            "Package that handles files, exceptions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/02/2022",
      "important": "Important"
    },
    "Augmented Tree": {
      "course": "CS2040S",
      "parents": [
        "Binary Search Tree"
      ],
      "topic": "Augmented Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Add additional information to the nodes of the tree to facilitate certain operations",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Order Statistics Tree",
            "Interval Tree",
            "Orthogonal Range Tree"
          ]
        }
      },
      "date": "09/02/2022",
      "important": null
    },
    "AVL Invariant": {
      "course": "CS2040S",
      "parents": [
        "AVL Tree",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "AVL Invariant",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Child height :- |L Height - R Height| < 1",
            "Maximum nodes :- 2^(h+1)-1",
            "Minimum nodes :- 1+ƒ(n-1)+ƒ(n-2)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/02/2022",
      "important": null
    },
    "Double Rotation": {
      "course": "CS2040S",
      "parents": [
        "Tree Rotation",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "Double Rotation",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Double rotate node v to the right",
            "Let w = v.L",
            "Left-rotate w",
            "Right-rotate v",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "w.L becomes new root",
            "w.R = w.L.L",
            "v.L = w.L.R"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/02/2022",
      "important": "Important"
    },
    "Tree Rotation": {
      "course": "CS2040S",
      "parents": [
        "AVL Tree",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "Tree Rotation",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Right-rotate node v",
            "Let w = v.L",
            "v.L = w.R",
            "w.R = v",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Double Rotation"
          ]
        }
      },
      "date": "09/02/2022",
      "important": "Important"
    },
    "AVL Tree": {
      "course": "CS2040S",
      "parents": [
        "Height Balanced Tree",
        "Binary Search Tree",
        "CS2040S Midterm Cheatsheet"
      ],
      "topic": "AVL Tree",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Create AVL Tree",
            "Augment tree (add info)",
            "Define balance condition / invariant",
            "Maintain balance by walking up the tree to reach the lowest unbalanced node",
            "Maximum 2 rotations to fix an insertion",
            "::Augment tree",
            "Store height at every node (v.height = 𝒉(v))",
            "Heights are updated when inserting",
            "::Balance an L-heavy node v",
            "v.L balanced → R-rotate(v)",
            "v.L L-heavy → R-rotate(v)",
            "v.L R-heavy → L-rotate(v.L); R-rotate(v)",
            "::Deletion",
            "Walk up tree and rotate if unbalanced",
            "::Rotation",
            ""
          ],
          "sublinks": [
            "Tree Rotation"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 18,
          "points": [
            "Year :- 1962 Adelson-Velsii Landis"
          ],
          "sublinks": [
            "AVL Invariant"
          ]
        }
      },
      "date": "09/02/2022",
      "important": "Important"
    },
    "Passive Balancing": {
      "course": "CS2040S",
      "parents": [
        "Balanced Tree"
      ],
      "topic": "Passive Balancing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "You rebalance only when necessary"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/02/2022",
      "important": null
    },
    "Proactive Balancing": {
      "course": "CS2040S",
      "parents": [
        "Balanced Tree"
      ],
      "topic": "Proactive Balancing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "You rebalance every time you insert an item"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/02/2022",
      "important": null
    },
    "Height Balanced Tree": {
      "course": "CS2040S",
      "parents": [
        "Balanced Tree"
      ],
      "topic": "Height Balanced Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Tree Invariant is determined by the heights of children",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Height :- h < 2logn",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "AVL Tree"
          ]
        }
      },
      "date": "09/02/2022",
      "important": null
    },
    "Balanced Tree": {
      "course": "CS2040S",
      "parents": [
        "Data Tree"
      ],
      "topic": "Balanced Tree",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Define a balance condition, and perform balancing operations when balance conditions are not met",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            "BB[alpha] tree",
            "Red-black tree",
            "Splay tree",
            "Treap",
            "Skip List",
            "SGTree",
            ""
          ],
          "sublinks": [
            "Height Balanced Tree",
            "B Tree"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Proactive Balancing",
            "Passive Balancing"
          ]
        }
      },
      "date": "09/02/2022",
      "important": null
    },
    "Level Order Traversal": {
      "course": "CS2040S",
      "parents": [
        "Tree Traversal"
      ],
      "topic": "Level Order Traversal",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Go down levels and list the elements horizontally"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/03/2022",
      "important": null
    },
    "Binary Search Tree": {
      "course": "CS2040S",
      "parents": [
        "Data Tree"
      ],
      "topic": "Binary Search Tree",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find successor",
            "If there is a right, then turn right to turn left",
            "Or not, go to parent until you find a larger parent",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "Worst /Insert RTC :- O(n)",
            "Worst /Search RTC :- O(n)",
            "Average /Insert RTC :- O(logn)",
            "Average /Search RTC :- O(logn)",
            "Number of possible trees :- Catalan Numbers",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 12,
          "points": [
            ""
          ],
          "sublinks": [
            "Tree Traversal"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 15,
          "points": [

          ],
          "sublinks": [
            "AVL Tree",
            "Augmented Tree"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Data Tree": {
      "course": "CS2040S",
      "parents": [
        "Data Graph",
        "Data Structure"
      ],
      "topic": "Data Tree",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Good way to summarize and query dynamic data",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Binary Search Tree",
            "Balanced Tree",
            "Trie"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Find Kth Smallest Element": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Find Kth Smallest Element",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find Kth Smallest Element",
            "Partition by random element",
            "Check index of element",
            "Recurse either left or right",
            "Return if index is correct"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Java Suppress Unchecked Type": {
      "course": "CS2030S",
      "parents": [
        "Suppress Warnings"
      ],
      "topic": "Java Suppress Unchecked Type",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Use it as close to the scope as possible, usually above one-liner declarations",
            "Good practice to leave comments as to why it should be no issue (/Information Hiding)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 4,
          "points": [
            "<JV @SuppressWarnings(\"unchecked\") JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Java Suppress Raw Type": {
      "course": "CS2030S",
      "parents": [
        "Suppress Warnings"
      ],
      "topic": "Java Suppress Raw Type",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV @SuppressWarnings(\"rawtype\") JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Don't use this, as it is unsafe"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Unchecked Type": {
      "course": "CS2030S",
      "parents": [
        "Generic Type"
      ],
      "topic": "Unchecked Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Compiler is not sure whether /Type Casting is allowed when using generic types",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "It is a feature to allow for backwards compatibility",
            "Suppress using /Suppress Unchecked Type",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "<JV T[] temp = (T[]) new Object[]; JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Suppress Warnings": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "Suppress Warnings",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Ignores such errors in scope right below it (class, method, line)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code ": {
          "section": "Code ",
          "index": 3,
          "points": [
            "<JV @SuppressWarnings() JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Java Suppress Raw Type",
            "Java Suppress Unchecked Type"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Type Erasure": {
      "course": "CS2030S",
      "parents": [
        "Generics",
        "Object Type",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Type Erasure",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Once the code is compiled, all the generic types are removed, and values are typecasted",
            "Changes all type parameters to Object if unbounded (T → Object), or specific type if bounded (T extends Comparable<T> → Comparable)",
            ""
          ],
          "sublinks": [
            "Code Sharing"
          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 5,
          "points": [
            "Pair<Integer, String> p = new Pair<Integer, String>(1, \"one\");"
          ],
          "sublinks": [

          ]
        },
        "Integer i = p.getFirst();": {
          "section": "Integer i = p.getFirst();",
          "index": 7,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        },
        "Becomes": {
          "section": "Becomes",
          "index": 9,
          "points": [
            "<JV"
          ],
          "sublinks": [

          ]
        },
        "Pair p = new Pair(1, \"one\");": {
          "section": "Pair p = new Pair(1, \"one\");",
          "index": 11,
          "points": [

          ],
          "sublinks": [

          ]
        },
        "Integer i = (Integer) p.getFirst();": {
          "section": "Integer i = (Integer) p.getFirst();",
          "index": 12,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Code Sharing": {
      "course": "CS2030S",
      "parents": [
        "Type Erasure"
      ],
      "topic": "Code Sharing",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Erase type arguments and type parameters after type checking",
            "Allows for the use of the same piece of code",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 4,
          "points": [

          ],
          "sublinks": [

          ]
        },
        "Pair p = new Pair(1, \"one\");": {
          "section": "Pair p = new Pair(1, \"one\");",
          "index": 5,
          "points": [

          ],
          "sublinks": [

          ]
        },
        "Integer i = (Integer) p.getFirst();": {
          "section": "Integer i = (Integer) p.getFirst();",
          "index": 6,
          "points": [

          ],
          "sublinks": [

          ]
        },
        "String j = (String) p.getSecond();": {
          "section": "String j = (String) p.getSecond();",
          "index": 7,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Generic Method": {
      "course": "CS2030S",
      "parents": [
        "Generics"
      ],
      "topic": "Generic Method",
      "contents": {
        "Examples <JV": {
          "section": "Examples ",
          "index": 0,
          "points": [
            "public static <T> T method(T obj) {}",
            "Class.<String>method()",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Unbounded Type": {
      "course": "CS2030S",
      "parents": [
        "Generic Type"
      ],
      "topic": "Unbounded Type",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV <T> JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "T can be anything under the sun"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Lower Bounded Type": {
      "course": "CS2030S",
      "parents": [
        "Bounded Type"
      ],
      "topic": "Lower Bounded Type",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV <T super Class> JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Sets a lower bound for the type of T permitted"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Upper Bounded Type": {
      "course": "CS2030S",
      "parents": [
        "Bounded Type"
      ],
      "topic": "Upper Bounded Type",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV <T extends Class> JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Sets an upper bound for the type of T permitted",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 6,
          "points": [
            "<JV <T extends Comparable<T>> JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Bounded Type": {
      "course": "CS2030S",
      "parents": [
        "Generic Type"
      ],
      "topic": "Bounded Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Used to give more specificity to the type of T accepted by the /Generic Type",
            "Compiler will erasure the parameters to that type",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Upper Bounded Type",
            "Lower Bounded Type"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Generic Type": {
      "course": "CS2030S",
      "parents": [
        "Generics",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Generic Type",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 13,
          "points": [
            "Treats T and S as variables which can be used later",
            "Cannot directly create an array of T[], can be typecasted with <JV T[] arr = (T[]) new Object[n]} JV>",
            "javac -Xlint:unchecked file.java to compile with unchecked",
            "javac -Xlint:rawtypes file.java to compile with rawtypes",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Raw Type",
            "Bounded Type",
            "Unbounded Type",
            "Unchecked Type"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 10,
          "points": [
            ""
          ],
          "sublinks": [
            "Type Invariance"
          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 19,
          "points": [
            "class Pair<T, S> {",
            " public Pair(T obj1, S obj2) {}",
            "}",
            "Pair<String, Integer> p = new Pair<String, Integer>()",
            "",
            "class Pair<T extends Comparable<T>, S> implements Comparable<Pair<T, S>> {}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": "Simportant"
    },
    "Type Inference (Generics)": {
      "course": "CS2030S",
      "parents": [
        "Type Inference",
        "Generics",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Type Inference (Generics)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Compiler will list out all possible types for the type parameter T, based on the bounds provided",
            "Inference can only happen in the rightwards direction"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Type Inference": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Type Inference",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Compiler will choose the most specific form of the object possible that satisfies all its use cases",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Type Inference (Generics)"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Invalid Generics": {
      "course": "CS2030S",
      "parents": [
        "Generics Validity",
        "CS2030S PE1 Cheatsheet",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Invalid Generics",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "<JV Pair<> p = new Pair<>(2,3) JV>",
            "<JV Pair<Integer,Integer> p = new Pair<?,?>() JV>",
            "<JV List<?> L = new List<?>() JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Valid Generics": {
      "course": "CS2030S",
      "parents": [
        "Generics Validity",
        "CS2030S PE1 Cheatsheet",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Valid Generics",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "<JV Pair p = new Pair(2,3) JV>",
            "<JV Pair<Integer,Integer> p = new Pair<>(2,3) JV>",
            "<JV Pair p = new Pair<Integer,Integer>(2,3) JV>",
            "<JV Pair p = new Pair<>(2,3) JV>",
            "<JV List<?> L = new List<String>() JV>",
            "<JV Pair<?,?> p = new Pair<Integer,Integer>() JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Generics Validity": {
      "course": "CS2030S",
      "parents": [
        "Generics"
      ],
      "topic": "Generics Validity",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Valid Generics",
            "Invalid Generics"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 4,
          "points": [
            "Wildcard on left ⟹ Diamond / Concrete on right",
            "Raw on left ⟹ Anything on right",
            "Concrete on left ⟹ Diamond or exact same on right",
            "Diamond on left ⟹ False"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/02/2022",
      "important": null
    },
    "Generics": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Generics",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Systematically create specific classes for many occasions",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Cannot mix with array :- Pair<String, Integer>[2] can't work as it will convert it into Object, and it is not type safe",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Generic Type",
            "Generic Method",
            "Type Erasure",
            "Wildcard (Generics)",
            "Java Equals (Generics)",
            "Type Inference (Generics)",
            "Generics Validity"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Unchecked Exception": {
      "course": "CS2030S",
      "parents": [
        "Exception"
      ],
      "topic": "Unchecked Exception",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Happens during /Run Time",
            "Programmer error",
            "DON'T NEED TO THROW ANYTHING, SINCE COMPILER WON'T KNOW",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [
            "NullPointerException",
            "FileNotFoundException",
            "IllegalArgumentException"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": "Important"
    },
    "Checked Exception": {
      "course": "CS2030S",
      "parents": [
        "Exception",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Checked Exception",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Programmer has no control",
            "User might give an incompatible type or do something unexpected"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Exception": {
      "course": "CS2030S",
      "parents": [
        "Throwable",
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "Exception",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Checked Exception",
            "Unchecked Exception"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Passes an exception if a method fails, can be handled elsewhere",
            "Checks the nearest try block and evaluate the catch there",
            "Always runs the finally block",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 9,
          "points": [
            "- Shouldn't use for decision-making and control-flow",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code <JV": {
          "section": "Code ",
          "index": 12,
          "points": [
            "import java.lang.ExceptionName",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 16,
          "points": [
            "public Constructor() throws E1,E2 {",
            " throw new ExceptionName();",
            "}",
            "",
            "try {} catch(e) {} finally {}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": "Simportant"
    },
    "Compile Error": {
      "course": "CS2030S",
      "parents": [
        "Throwable"
      ],
      "topic": "Compile Error",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Syntax mistakes that are made by the programmer"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Throwable": {
      "course": "CS2030S",
      "parents": [
        "Exception Handling"
      ],
      "topic": "Throwable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Things that can be thrown by the compiler",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Compile Error",
            "Exception"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Exception Handling": {
      "course": "CS2030S",
      "parents": [
        "CS2030S"
      ],
      "topic": "Exception Handling",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Used to handle specific cases",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Throwable"
          ]
        }
      },
      "date": "07/02/2022",
      "important": null
    },
    "Sort Queue": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Sort Queue",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Sort a queue",
            "Pop first element",
            "Create two queues for bigger and smaller",
            "Merge two queues"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/02/2022",
      "important": null
    },
    "Radiant": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "Radiant",
      "contents": {
        "Link": {
          "section": "Link",
          "index": 0,
          "points": [
            "https://vnijs.shinyapps.io/radiant/?SSUID=f4572720b1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Observational Study": {
      "course": "GEA1000",
      "parents": [
        "Study Design"
      ],
      "topic": "Observational Study",
      "contents": {
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 0,
          "points": [
            "- Leave so much to the participant that there can be no study to be made",
            "- Allocation not random",
            "- Creates confounders",
            "- Cannot prove causation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Double Blinded Experiment": {
      "course": "GEA1000",
      "parents": [
        "Controlled Experiment"
      ],
      "topic": "Double Blinded Experiment",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Participants and evaluators don't know which group they are in",
            "Best method of carrying out comparison studies"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Single Blinded Experiment": {
      "course": "GEA1000",
      "parents": [
        "Controlled Experiment"
      ],
      "topic": "Single Blinded Experiment",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Participants or evaluators don't know which group they are in"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Controlled Experiment": {
      "course": "GEA1000",
      "parents": [
        "Study Design"
      ],
      "topic": "Controlled Experiment",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Single Blinded Experiment",
            "Double Blinded Experiment"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Treatment Group",
            "Control Group"
          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 8,
          "points": [
            "Intentionally manipulates one variable to cause an effect on another variable",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 11,
          "points": [
            "Try to aim for randomisation, and or blinding",
            "Choose participants / assessors",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 15,
          "points": [
            "- Unethical for a lot of studies"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Control Group": {
      "course": "GEA1000",
      "parents": [
        "Controlled Experiment"
      ],
      "topic": "Control Group",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Provide a baseline for comparing data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Treatment Group": {
      "course": "GEA1000",
      "parents": [
        "Controlled Experiment"
      ],
      "topic": "Treatment Group",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Changes the independent variable to attempt to give change to the dependent variable"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Study Design": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Study Design",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Controlled Experiment",
            "Observational Study"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Continuous Data": {
      "course": "GEA1000",
      "parents": [
        "Numerical Data"
      ],
      "topic": "Continuous Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Infinite possibilities for data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Discrete Data": {
      "course": "GEA1000",
      "parents": [
        "Numerical Data"
      ],
      "topic": "Discrete Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Finite possibilities for data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Ordinal Data": {
      "course": "GEA1000",
      "parents": [
        "Categorical Data"
      ],
      "topic": "Ordinal Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Data is in ordered groups",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Education level"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Nominal Data": {
      "course": "GEA1000",
      "parents": [
        "Categorical Data"
      ],
      "topic": "Nominal Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Data is in unordered groups",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Country"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Numerical Data": {
      "course": "GEA1000",
      "parents": [
        "Variables"
      ],
      "topic": "Numerical Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Arithmetic operations make sense",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Discrete Data",
            "Continuous Data"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Categorical Data": {
      "course": "GEA1000",
      "parents": [
        "Variables"
      ],
      "topic": "Categorical Data",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Nominal Data",
            "Ordinal Data"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Dependent Variable": {
      "course": "GEA1000",
      "parents": [
        "Variables"
      ],
      "topic": "Dependent Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Researcher wants to know"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Independent Variable": {
      "course": "GEA1000",
      "parents": [
        "Variables"
      ],
      "topic": "Independent Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Researcher control"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Coefficient Of Variation": {
      "course": "GEA1000",
      "parents": [
        "Summary Statistics"
      ],
      "topic": "Coefficient Of Variation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA SD / Mean MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Outlier": {
      "course": "GEA1000",
      "parents": [
        "Univariate Analysis"
      ],
      "topic": "Outlier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA x < Q1-1.5IQR MA>",
            "<MA x > Q3+1.5IQR MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Can mess up mean & standard deviation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": "Important"
    },
    "Q3 Data": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Q3 Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "75 Percentile"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Q1 Data": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Q1 Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "25 Percentile"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Median Data": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Median Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Median",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Unaffected by outliers"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Maximum Data": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Maximum Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Maximum"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Minimum Data": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Minimum Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Minimum "
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Interquartile Range": {
      "course": "GEA1000",
      "parents": [
        "Summary Statistics"
      ],
      "topic": "Interquartile Range",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Q3-Q1 MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Standard Deviation": {
      "course": "GEA1000",
      "parents": [
        "Summary Statistics"
      ],
      "topic": "Standard Deviation",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "<MA SD ≈ Range/4 ≈ IQR*0.75 MA>",
            "SD changes when data is multiplied"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Robust Statistics": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Robust Statistics",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Statistics that are unaffected by outliers"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Five Number Summary": {
      "course": "GEA1000",
      "parents": [
        "Summary Statistics"
      ],
      "topic": "Five Number Summary",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Minimum Data",
            "Median Data",
            "Maximum Data",
            "Q1 Data",
            "Q3 Data"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Box Plot",
            "Robust Statistics"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Box Plot": {
      "course": "GEA1000",
      "parents": [
        "Five Number Summary"
      ],
      "topic": "Box Plot",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Used to represent the /Five Number Summary"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Right Skewed Data": {
      "course": "GEA1000",
      "parents": [
        "Statistical Skew"
      ],
      "topic": "Right Skewed Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Most of the bulk is on the left",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Mode > Median > Mean"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Left Skewed Data": {
      "course": "GEA1000",
      "parents": [
        "Statistical Skew"
      ],
      "topic": "Left Skewed Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Most of the bulk is on the right",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Mode < Median < Mean"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Symmetric Data": {
      "course": "GEA1000",
      "parents": [
        "Statistical Skew"
      ],
      "topic": "Symmetric Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "No skew"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Statistical Skew": {
      "course": "GEA1000",
      "parents": [
        "Shape Of Data"
      ],
      "topic": "Statistical Skew",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Left Skewed Data",
            "Right Skewed Data",
            "Symmetric Data"
          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 5,
          "points": [
            "A high degree of skew will cause the mean to shoot up",
            "As such, it is more common to use median to represent the data if the data is very skewed",
            "Skewness ≠ outliers"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": "Important"
    },
    "Data Peak": {
      "course": "GEA1000",
      "parents": [
        "Shape Of Data"
      ],
      "topic": "Data Peak",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Histogram": {
      "course": "GEA1000",
      "parents": [
        "Shape Of Data"
      ],
      "topic": "Histogram",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Give a better understanding of the distribution of the data"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Shape Of Data": {
      "course": "GEA1000",
      "parents": [
        "Univariate Analysis"
      ],
      "topic": "Shape Of Data",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Used to get a rough idea of the distribution within the group",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Statistical Skew",
            "Data Peak",
            "Histogram"
          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Summary Statistics": {
      "course": "GEA1000",
      "parents": [
        "Univariate Analysis"
      ],
      "topic": "Summary Statistics",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Independent of the actual distribution of the variable",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Standard Deviation",
            "Coefficient Of Variation",
            "Interquartile Range",
            "Five Number Summary"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Univariate Analysis": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Univariate Analysis",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Shape Of Data",
            "Outlier",
            "Summary Statistics"
          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Variables": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Variables",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Categorical Data",
            "Numerical Data",
            "Independent Variable",
            "Dependent Variable"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Good Estimate": {
      "course": "GEA1000",
      "parents": [
        "Estimate"
      ],
      "topic": "Good Estimate",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Sampling frame",
            "Probability sampling",
            "Large enough",
            "High response rate"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Estimate": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Estimate",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Estimate = /Population Parameter + /Sampling Bias + /Random Error",
            "AKA Sample Statistic",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Good Estimate"
          ]
        }
      },
      "date": "03/02/2022",
      "important": "Important"
    },
    "Cluster Sampling": {
      "course": "GEA1000",
      "parents": [
        "Probability Sampling"
      ],
      "topic": "Cluster Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Break down population into clusters",
            "Randomly sample a fixed number of clusters",
            "Include all obsetvations",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 5,
          "points": [
            "+ Less tedious",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 8,
          "points": [
            "- High variability due to dissimilar clusters",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 11,
          "points": [
            "Mental wellbeing study in separate schools"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Stratified Sampling": {
      "course": "GEA1000",
      "parents": [
        "Probability Sampling"
      ],
      "topic": "Stratified Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Break down population into strata",
            "Conduct /Simple Random Sampling on each strata",
            "Do weighted calculations to find population",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 5,
          "points": [
            "+ Can get representative sample from each stratum",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 8,
          "points": [
            "- Need information about sampling frame and stratum"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Systematic Sampling": {
      "course": "GEA1000",
      "parents": [
        "Probability Sampling"
      ],
      "topic": "Systematic Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Apply a pattern for selecting",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Simpler selection process",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 6,
          "points": [
            "- Subject to /Selection Bias if wrong pattern"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Uniform Probability": {
      "course": "GEA1000",
      "parents": [
        "Simple Random Sampling"
      ],
      "topic": "Uniform Probability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Every outcome has the same probability 1/n"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Simple Random Sampling": {
      "course": "GEA1000",
      "parents": [
        "Probability Sampling"
      ],
      "topic": "Simple Random Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Random number generator",
            ""
          ],
          "sublinks": [
            "Uniform Probability"
          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 4,
          "points": [
            "+ Good representation of population",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 7,
          "points": [
            "- Subject to /Non Response Bias"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Volunteer Sampling": {
      "course": "GEA1000",
      "parents": [
        "Non Probability Sampling"
      ],
      "topic": "Volunteer Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Participants choose themselves",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Easy and mitigates /Non Response Bias",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 6,
          "points": [
            "- Attracts an unrepresentative group of people",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 9,
          "points": [
            "Optional surveys"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Convenience Sampling": {
      "course": "GEA1000",
      "parents": [
        "Non Probability Sampling"
      ],
      "topic": "Convenience Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Study the most convenient people",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Very easy",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 6,
          "points": [
            "- Subject to /Selection Bias and /Non Response Bias",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 9,
          "points": [
            "Mall survey"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Non Probability Sampling": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Non Probability Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Humans choose the participants",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Convenience Sampling",
            "Volunteer Sampling"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Probability Sampling": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Probability Sampling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Everyone has a chance of participating",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Mitigates /Selection Bias",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Simple Random Sampling",
            "Systematic Sampling",
            "Stratified Sampling",
            "Cluster Sampling"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Non Response Bias": {
      "course": "GEA1000",
      "parents": [
        "Sampling Bias"
      ],
      "topic": "Non Response Bias",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Participants' problem",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Disinterest",
            "Inconvenient",
            "Unwilling"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Selection Bias": {
      "course": "GEA1000",
      "parents": [
        "Sampling Bias"
      ],
      "topic": "Selection Bias",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Researcher's problem",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Imperfect /Sampling Frame",
            "Improper /Probability Sampling"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Sampling Bias": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Sampling Bias",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Selection Bias",
            "Non Response Bias"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Random Error": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Random Error",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Despite having a perfect sample, sometimes random deviances happen and are out of control"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Population Parameter": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Population Parameter",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The statistic about the population that you want to know about, like average age etc"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Sampling Frame": {
      "course": "GEA1000",
      "parents": [
        "Sampling"
      ],
      "topic": "Sampling Frame",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Sampling frame will decide how generalisable the study is to the target population"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Census": {
      "course": "GEA1000",
      "parents": [
        "Research Question"
      ],
      "topic": "Census",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "100% accuracy, 100% response rate studies"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Comparison Question": {
      "course": "GEA1000",
      "parents": [
        "Research Question"
      ],
      "topic": "Comparison Question",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "Is A bigger than B"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Test Claim Question": {
      "course": "GEA1000",
      "parents": [
        "Research Question"
      ],
      "topic": "Test Claim Question",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "Is the average number"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Estimation Question": {
      "course": "GEA1000",
      "parents": [
        "Research Question"
      ],
      "topic": "Estimation Question",
      "contents": {
        "Examples": {
          "section": "Examples",
          "index": 0,
          "points": [
            "What is the average number"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Research Question": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Research Question",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Census",
            "Population"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Estimation Question",
            "Test Claim Question",
            "Comparison Question"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Population": {
      "course": "GEA1000",
      "parents": [
        "Research Question"
      ],
      "topic": "Population",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The group of people you want to know about"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Sampling": {
      "course": "GEA1000",
      "parents": [
        "PPDAC",
        "ST2334"
      ],
      "topic": "Sampling",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Sampling Frame",
            "Sampling Bias",
            "Estimate",
            "Population Parameter",
            "Random Error"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Probability Sampling",
            "Non Probability Sampling"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "Exploratory Data Analysis": {
      "course": "GEA1000",
      "parents": [
        "PPDAC"
      ],
      "topic": "Exploratory Data Analysis",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Explore the data to come up with answers to questions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "PPDAC": {
      "course": "GEA1000",
      "parents": [
        "GEA1000"
      ],
      "topic": "PPDAC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Problem",
            "Plan",
            "Data",
            "Analysis",
            "Conclusion",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Research Question",
            "Sampling",
            "Exploratory Data Analysis",
            "Variables",
            "Study Design",
            "Statistical Inference",
            "Univariate Analysis",
            "Bivariate Relationship"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "GEA1000": {
      "course": "GEA1000",
      "parents": [

      ],
      "topic": "GEA1000",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "PPDAC"
          ]
        }
      },
      "date": "03/02/2022",
      "important": null
    },
    "IS1103": {
      "course": "IS1103",
      "parents": [

      ],
      "topic": "IS1103",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "Was I supposed to learn something?"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Unboxing": {
      "course": "CS2030S",
      "parents": [
        "Primitive Type"
      ],
      "topic": "Unboxing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Converts wrapper objects to primitive types",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<JV int i = new Integer(4) JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Auto Boxing": {
      "course": "CS2030S",
      "parents": [
        "Primitive Type"
      ],
      "topic": "Auto Boxing",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Converts primitive types to wrapper objects",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples ": {
          "section": "Examples ",
          "index": 3,
          "points": [
            "<JV Integer i = 4; JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Wrapper Class": {
      "course": "CS2030S",
      "parents": [
        "Reference Type",
        "Primitive Type"
      ],
      "topic": "Wrapper Class",
      "contents": {
        "Defintion": {
          "section": "Defintion",
          "index": 0,
          "points": [
            "They create new instances instead of using the same value",
            "But useful for functions that use the class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Java caches some commonly used values",
            "Integer[] <: Object[] but int[] !<: Object[] due to incompatible types",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 8,
          "points": [
            "Integer is the wrapper class of int"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Impure Interface": {
      "course": "CS2030S",
      "parents": [
        "Interface"
      ],
      "topic": "Impure Interface",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "There is default implementation for methods",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Supports backwards compatibility"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Pure Interface": {
      "course": "CS2030S",
      "parents": [
        "Interface"
      ],
      "topic": "Pure Interface",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "All methods are empty",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Commonly used"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Can Do Relationship": {
      "course": "CS2030S",
      "parents": [
        "Composition"
      ],
      "topic": "Can Do Relationship",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Indicates that one can do all the things mentioned in the other",
            "Represented by solid arrow"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Narrow Interface": {
      "course": "CS2040S",
      "parents": [
        "Interface"
      ],
      "topic": "Narrow Interface",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Limited functionality",
            "Enforces proper use",
            "Easy to understand"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Wide Interface": {
      "course": "CS2040S",
      "parents": [
        "Interface"
      ],
      "topic": "Wide Interface",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "No guarantee of efficiency",
            "Easy to use"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Interface": {
      "course": "CS2030S",
      "parents": [
        "Abstraction"
      ],
      "topic": "Interface",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Describe what a class can do & their behaviours",
            "Indicated with dotted arrow from class to interface",
            "<MA Class <: Interface MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "Classes can implement multiple interfaces",
            "Can only be abstract",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 9,
          "points": [
            "interface I {}",
            "class C implements I {}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 14,
          "points": [
            ""
          ],
          "sublinks": [
            "Pure Interface",
            "Impure Interface",
            "Wide Interface",
            "Narrow Interface"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 20,
          "points": [

          ],
          "sublinks": [
            "Java Comparable",
            "Java List"
          ]
        }
      },
      "date": "31/01/2022",
      "important": null
    },
    "Sorting Worst RTC": {
      "course": "CS2040S",
      "parents": [
        "Sorting RTC"
      ],
      "topic": "Sorting Worst RTC",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Selection :- n²",
            "Bubble :- n²",
            "Insertion :- n²",
            "Heap :- nlogn",
            "Quick :- n²",
            "Merge :- nlogn"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sorting Average RTC": {
      "course": "CS2040S",
      "parents": [
        "Sorting RTC"
      ],
      "topic": "Sorting Average RTC",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Selection :- n²",
            "Bubble :- n²",
            "Insertion :- n²",
            "Heap :- nlogn",
            "Quick :- nlogn",
            "Merge :- nlogn"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sorting Best RTC": {
      "course": "CS2040S",
      "parents": [
        "Sorting RTC"
      ],
      "topic": "Sorting Best RTC",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Selection :- n²",
            "Bubble :- n",
            "Insertion :- n",
            "Heap :- nlogn",
            "Quick :- nlogn",
            "Merge :- nlogn"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Build RTC": {
      "course": "CS2040S",
      "parents": [
        "Run Time Complexity"
      ],
      "topic": "Build RTC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Search RTC": {
      "course": "CS2040S",
      "parents": [
        "Run Time Complexity"
      ],
      "topic": "Search RTC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Delete RTC": {
      "course": "CS2040S",
      "parents": [
        "Run Time Complexity"
      ],
      "topic": "Delete RTC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Insert RTC": {
      "course": "CS2040S",
      "parents": [
        "Run Time Complexity"
      ],
      "topic": "Insert RTC",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [

          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sorting RTC": {
      "course": "CS2040S",
      "parents": [
        "Run Time Complexity"
      ],
      "topic": "Sorting RTC",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sorting Best RTC",
            "Sorting Average RTC",
            "Sorting Worst RTC"
          ]
        }
      },
      "date": "29/01/2022",
      "important": "Important"
    },
    "Real Valued Function": {
      "course": "ST2334",
      "parents": [
        "Functions (P)"
      ],
      "topic": "Real Valued Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Sample and range space are real"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Equivalent Events": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Equivalent Events",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Events that mean the same thing",
            "A = {s∈S|X(s)∈B} ⟹ P(A)=P(B)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Legitimate Probability Density Function": {
      "course": "ST2334",
      "parents": [
        "Probability Density Function"
      ],
      "topic": "Legitimate Probability Density Function",
      "contents": {
        "Proof": {
          "section": "Proof",
          "index": 0,
          "points": [
            "::Prove that pdf is valid",
            "Just check ƒ(x)≥0 and ʃƒ(x)dx=1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Cumulative Distribution Function": {
      "course": "ST2334",
      "parents": [
        "Probability Function"
      ],
      "topic": "Cumulative Distribution Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Ƒ(x) = P(X≤x) MA>",
            "<MA P(a≤x≤b)=Ƒ(b)-Ƒ(a) MA>",
            "<MA ƒ(x)=d/dx(Ƒ(x)) MA> for /Probability Mass Function"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Probability Density Function": {
      "course": "ST2334",
      "parents": [
        "Probability Function"
      ],
      "topic": "Probability Density Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Possible values are continuous",
            "Probabilities are computed by integrating",
            "<MA P(x<X<x+𝛿x) = ƒ(x)𝛿x MA>",
            "<MA ʃƒ(x)dx = 1 MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "<MA P(X=x) = 0 MA>",
            "A=∅ ⟹ P(A)=0, but not the converse",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "Legitimate Probability Density Function",
            "Normal Distribution"
          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Probability Mass Function": {
      "course": "ST2334",
      "parents": [
        "Probability Function"
      ],
      "topic": "Probability Mass Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Possible values are discrete",
            "Probabilities are computed by summation",
            "P(X=x) = ƒ(x)",
            "∑ƒ(x) = 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Probability Distribution": {
      "course": "ST2334",
      "parents": [
        "Probability Function"
      ],
      "topic": "Probability Distribution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Describes how the random variables are spread",
            "The set of points (x, ƒ(x)) describe the distribution",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Special Probability Distribution"
          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Probability Function": {
      "course": "ST2334",
      "parents": [
        "Functions (P)"
      ],
      "topic": "Probability Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The function ƒ(x) that describes the probability distribution of a random variable",
            "Can be used to describe proportions in the populations",
            "<MA ƒ(x)≥0 MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 5,
          "points": [
            ""
          ],
          "sublinks": [
            "Probability Distribution"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Probability Mass Function",
            "Probability Density Function",
            "Cumulative Distribution Function"
          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Functions (P)": {
      "course": "ST2334",
      "parents": [
        "Random Variable"
      ],
      "topic": "Functions (P)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "X(s) for an element in sample space",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Range Space"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Real Valued Function",
            "Probability Function"
          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Continuous Random Variable": {
      "course": "ST2334",
      "parents": [
        "Random Variable"
      ],
      "topic": "Continuous Random Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Population is not /Countably Infinite",
            "/Range Space is an interval or collection of intervals"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Discrete Random Variable": {
      "course": "ST2334",
      "parents": [
        "Random Variable"
      ],
      "topic": "Discrete Random Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Population is /Countably Infinite"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Random Variable": {
      "course": "ST2334",
      "parents": [
        "Statistical Inference",
        "Probability"
      ],
      "topic": "Random Variable",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A variable that takes on a range of values",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Functions (P)",
            "Expectation",
            "Random Variable (2D)"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Discrete Random Variable",
            "Continuous Random Variable"
          ]
        }
      },
      "date": "05/03/2022",
      "important": null
    },
    "Law Of Total Probability": {
      "course": "ST2334",
      "parents": [
        "Axioms Of Probability"
      ],
      "topic": "Law Of Total Probability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A₁, A₂,...Aₙ is a partition of S ⟹ P(B)=∑(P(B⋂Aᵢ))",
            "Pizza, but you cut up an inner circle like a madman",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Partition (P)"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Bayes Theorem": {
      "course": "ST2334",
      "parents": [
        "Axioms Of Probability"
      ],
      "topic": "Bayes Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A₁,A₂,...Aₙ partition of S ⟹ <MA P(Aₖ|B)=P(Aₖ)P(B|Aₖ)/∑P(B⋂Aᵢ) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": "Important"
    },
    "Multiplication Rule Of Probability": {
      "course": "ST2334",
      "parents": [
        "Axioms Of Probability"
      ],
      "topic": "Multiplication Rule Of Probability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA P(A ⋂ B ⋂ C) = P(A)P(B|A)P(C|A ⋂ B) MA>",
            "<MA P(A₁ ⋂ A₂ ⋂ ... ⋂ Aₙ) = P(A₁)P(A₂|A₁)...P(Aₙ|A₁ ⋂ A₂ ⋂ ...) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Generalised Addition Principle": {
      "course": "ST2334",
      "parents": [
        "Addition Principle"
      ],
      "topic": "Generalised Addition Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA n₁n₂n₃...nₖ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Addition Principle": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Addition Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Procedures cannot be performed together",
            "<MA n₁+n₂ MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Generalised Addition Principle"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Generalised Multiplication Principle": {
      "course": "ST2334",
      "parents": [
        "Multiplication Principle"
      ],
      "topic": "Generalised Multiplication Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA n₁n₂n₃...nₖ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Multiplication Principle": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "Multiplication Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Procedures can be performed in succession",
            "<MA n₁n₂ MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Generalised Multiplication Principle"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Relative Frequency": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Relative Frequency",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can be used to derive probability of an event",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "<MA Observed/Total MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Complement Event": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Complement Event",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The opposite of an Event"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Null Event": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Null Event",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Event space is empty"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sure Event": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Sure Event",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Event space covers whole /Sample Space"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Compound Event": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Compound Event",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Event has more than one /Sample Point"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Simple Event": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Simple Event",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Event only has one /Sample Point"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Partition (P)": {
      "course": "ST2334",
      "parents": [
        "Law Of Total Probability"
      ],
      "topic": "Partition (P)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The sample space is split up into events, and nothing is left over",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Exhaustive Events",
            "Mutually Exclusive Events"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Exhaustive Events": {
      "course": "ST2334",
      "parents": [
        "Partition (P)",
        "Event (P)"
      ],
      "topic": "Exhaustive Events",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Events that make up the entire /Sample Space"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Mutually Exclusive Events": {
      "course": "ST2334",
      "parents": [
        "Partition (P)",
        "Event (P)"
      ],
      "topic": "Mutually Exclusive Events",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Events that cannot happen together",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Counting can use /Addition Principle",
            "Probabilty can sum up",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "P(A⋂B)=0",
            "CANNOT be /Independent Events"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Mutually Independent Events": {
      "course": "ST2334",
      "parents": [
        "Independent Events"
      ],
      "topic": "Mutually Independent Events",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A₁,A₂,...Aₙ mutually independent ⟺ any subset: P(A₁⋂A₂⋂...Aₙ)=P(A₁)...P(Aₙ)",
            "AKA independent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Pairwise Independent Events": {
      "course": "ST2334",
      "parents": [
        "Independent Events"
      ],
      "topic": "Pairwise Independent Events",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A₁,A₂,...Aₙ pairwise independent ⟺ P(Aᵢ)P(Aⱼ)",
            "Mutually Independent ⟹ Pairwise Independent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Independent Events": {
      "course": "ST2334",
      "parents": [
        "Event (P)"
      ],
      "topic": "Independent Events",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A and B independent ⟺ P(A⋂B)=P(A)P(B)",
            "Cannot be shown in Venn Diagram",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "P(B|A)=P(B)",
            "CANNOT be /Mutually Exclusive Events",
            "::A and B independent",
            "A and B' independent",
            "A' and B independent",
            "A' and B' independent",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 12,
          "points": [

          ],
          "sublinks": [
            "Pairwise Independent Events",
            "Mutually Independent Events"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Event (P)": {
      "course": "ST2334",
      "parents": [
        "Basics Of Probability"
      ],
      "topic": "Event (P)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Subset of the /Sample Space",
            "AKA Outcome",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Relative Frequency"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Simple Event",
            "Compound Event",
            "Sure Event",
            "Null Event",
            "Complement Event",
            "Mutually Exclusive Events",
            "Exhaustive Events",
            "Independent Events",
            "Equivalent Events"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sample Point": {
      "course": "ST2334",
      "parents": [
        "Sampling (P)"
      ],
      "topic": "Sample Point",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "One possible outcome of a statistical experiment"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sample Space": {
      "course": "ST2334",
      "parents": [
        "Sampling (P)"
      ],
      "topic": "Sample Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The set of all possible outcomes of a statistical experiment",
            "<MA S MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Sampling (P)": {
      "course": "ST2334",
      "parents": [
        "Basics Of Probability"
      ],
      "topic": "Sampling (P)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sample Space",
            "Sample Point",
            "Sampling Distribution"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Counting": {
      "course": "CS1231S",
      "parents": [
        "Probability",
        "CS1231S"
      ],
      "topic": "Counting",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Choose Formulas"
          ]
        }
      },
      "date": "22/10/2021",
      "important": null
    },
    "Axioms Of Probability": {
      "course": "ST2334",
      "parents": [
        "Basics Of Probability"
      ],
      "topic": "Axioms Of Probability",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "P(∅)=0",
            "If A₁ A₂ are /Mutually Exclusive Event ⟹ P can be summed up",
            "P(A')=1-P(A)",
            "P(A)=P(A⋂B)+P(A⋂B')",
            "A⊆B ⟹ P(A)≤P(B)"
          ],
          "sublinks": [
            "Inclusion Exclusion Principle",
            "Multiplication Rule Of Probability",
            "Bayes Theorem",
            "Law Of Total Probability"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Basics Of Probability": {
      "course": "ST2334",
      "parents": [
        "Statistical Inference",
        "Probability"
      ],
      "topic": "Basics Of Probability",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sampling (P)",
            "Event (P)",
            "Axioms Of Probability"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Probability": {
      "course": "ST2334",
      "parents": [
        "ST2334"
      ],
      "topic": "Probability",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Basics Of Probability",
            "Counting",
            "Random Variable"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "ST2334": {
      "course": "ST2334",
      "parents": [

      ],
      "topic": "ST2334",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Probability",
            "Sampling"
          ]
        }
      },
      "date": "29/01/2022",
      "important": null
    },
    "Run Time Type": {
      "course": "CS2030S",
      "parents": [
        "Run Time",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Run Time Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Check what object the variable is pointing to",
            "No compiler can tell you there will be a mistake there",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<JV Circle c = new ColouredCircle(); JV> - gives ColouredCircle"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Compile Time Type": {
      "course": "CS2030S",
      "parents": [
        "Compile Time",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Compile Time Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Fixed as what the variable was defined as",
            "Compiler will tell you what will go wrong",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<JV Circle c = new ColouredCircle(); JV> - gives Circle"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Heap (Stack Heap Diagram)": {
      "course": "CS2030S",
      "parents": [
        "Stack Heap Diagram",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Heap (Stack Heap Diagram)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Instances of objects",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Frames can point to each other",
            "Local classes need references to the class they are coming from (B.this points to B for local class A)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "Circle frame with center and radius"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Stack Frame": {
      "course": "CS2030S",
      "parents": [
        "Stack Heap Diagram"
      ],
      "topic": "Stack Frame",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Contains parameters (INCLUDING this, as a reference to self)",
            "Parameters will point to instances where a class method is used"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Meta Space": {
      "course": "CS2030S",
      "parents": [
        "Stack Heap Diagram"
      ],
      "topic": "Meta Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Contains global variables",
            "Contains the method calls, constructors and class definitions",
            "Contains static fields of classes",
            "Created when the code compiles",
            "No need for variable capture for values in the metaspace",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "<JV Circle c1 = new Circle() JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Stack (Stack Heap Diagram)": {
      "course": "CS2030S",
      "parents": [
        "Stack",
        "Stack Heap Diagram",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Stack (Stack Heap Diagram)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Contains local variables & methods, stack frames{} for constructors / methods",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Frames can only point to the /Heap (Stack Heap Diagram)",
            "Variable names have no types, but rather types are based on what they point to",
            "Things on the stack are eventually deleted so better to save whatever parameters in the heap",
            "You can store local variables found in the function (int i)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 9,
          "points": [
            "Block containing c1, c2, p"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Queue": {
      "course": "CS2040S",
      "parents": [
        "Data Array"
      ],
      "topic": "Queue",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "First in first out",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Initialise array",
            "Maintain pointer for front and end of queue"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Stack": {
      "course": "CS2040S",
      "parents": [
        "Data Array"
      ],
      "topic": "Stack",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "First in last out",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Initialise array",
            "Maintain pointer for top of stack",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Stack (Stack Heap Diagram)"
          ]
        }
      },
      "date": "27/01/2022",
      "important": null
    },
    "Stack Heap Diagram": {
      "course": "CS2030S",
      "parents": [
        "Compiler",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Stack Heap Diagram",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Understand what happens when we make method calls",
            "Contains TEXT, METASPACE, scalable HEAP, scalable STACK (at the bottom)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Stack (Stack Heap Diagram)",
            "Heap (Stack Heap Diagram)",
            "Meta Space",
            "Stack Frame",
            "Variable Capture"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 11,
          "points": [
            "Initialise with variables / stack frames{}, including the frame for main(){}",
            "Draw boxes for object instances and draw arrow to point from variable to object",
            "If there is a new method call, create a new stack frame on top of the stack, and point arrows wherever",
            "Once done with method, remove stack frame and clear all reference arrows",
            "Once done with main(), remove all object frames with nothing referencing it",
            "String[] args is important for main()",
            "No need to add constructor methods"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/01/2022",
      "important": "Important"
    },
    "Dual Pivot Quick Sort": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Dual Pivot Quick Sort",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Partitioning step has two pivots",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Year :- 2009 Vladimir Yaroslavskiy"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Three Way Partition": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort Partition"
      ],
      "topic": "Three Way Partition",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "There is a third bin, for the elements that are equal to the pivot"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Paranoid Quick Sort": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Paranoid Quick Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "We force ourselves to find a suitable pivot, to avoid the n² case"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Quick Select": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Quick Select",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find the kth smallest element",
            "Choose a pivot and partition",
            "If pivot is at kth spot, return",
            "Else, recurse either on the left or right side, until pivot is the right position"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Java Quick Sort Partition": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort Partition"
      ],
      "topic": "Java Quick Sort Partition",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "partition(int arr[], int begin, int end) {",
            " int pivot = arr[end];",
            " int i = (begin-1);",
            "",
            " for (int j = begin; j < end; j++) {",
            "   if (arr[j] <= pivot) {",
            "     i++;",
            "     int swapTemp = arr[i];",
            "     arr[i] = arr[j];",
            "     arr[j] = swapTemp;",
            "   }",
            " }",
            "",
            " int swapTemp = arr[i+1];",
            " arr[i+1] = arr[end];",
            " arr[end] = swapTemp;",
            " return i+1;",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Quick Sort Partition": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Quick Sort Partition",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Have i start from start and j start from the end",
            "Increment i until arr[i] > pivot",
            "Decrement j until arr[j] < pivot",
            "Swap arr[i] and arr[j]",
            "If j < i, then swap arr[j] with pivot",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "/Run Time Complexity :- O(n)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 10,
          "points": [
            ""
          ],
          "sublinks": [
            "Java Quick Sort Partition"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Three Way Partition"
          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Java Quick Sort": {
      "course": "CS2040S",
      "parents": [
        "Quick Sort"
      ],
      "topic": "Java Quick Sort",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "quickSort(int arr[], int begin, int end) {",
            " if (begin < end) {",
            "   int partitionIndex = partition(arr, begin, end);",
            "   quickSort(arr, begin, partitionIndex-1);",
            "   quickSort(arr, partitionIndex+1, end);",
            " }",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Quick Sort": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Quick Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Select a position in the array to pivot from",
            "Do /Quick Sort Partition using first as pivot",
            "Repeat quick sort on the left and right sides",
            "https://www.youtube.com/watch?v=7h1s2SojIRw",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 6,
          "points": [
            "/Loop Invariant :- pivot will be in the correct position",
            "/Sorting Stability :- unstable",
            "Year :- 1960 Hoare",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 11,
          "points": [
            ""
          ],
          "sublinks": [
            "Quick Sort Partition",
            "Quick Select"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 15,
          "points": [
            ""
          ],
          "sublinks": [
            "Paranoid Quick Sort",
            "Dual Pivot Quick Sort"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 19,
          "points": [
            ""
          ],
          "sublinks": [
            "Sort Queue",
            "Find Kth Smallest Element"
          ]
        },
        "Code": {
          "section": "Code",
          "index": 23,
          "points": [

          ],
          "sublinks": [
            "Java Quick Sort"
          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Merge Sort": {
      "course": "CS2040S",
      "parents": [
        "Divide And Conquer Algorithm",
        "Sorting Algorithm"
      ],
      "topic": "Merge Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Split array in 2 (Divide)",
            "Sort each sub array (Recurse)",
            "Merge the 2 together (Combine)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 5,
          "points": [
            "/Loop Invariant :- no invariant",
            "/Sorting Stability :- stable",
            "/Space Complexity :- O(nlogn)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/01/2022",
      "important": null
    },
    "Sorting Stability": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Sorting Stability",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "When sorting key-value pairs, a stable algorithm will maintain the ordering of values"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Insertion Sort": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Insertion Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Keep a running array going",
            "Loop through the array and insert it into the running array",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "/Loop Invariant :- first n elements are in the first n positions after loop n",
            "/Sorting Stability :- stable",
            "Worst Case :- [n,n-1...1]",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Java Insertion Sort"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Selection Sort": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Selection Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Find the minimum element in array and bring it forward",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "/Loop Invariant :- nᵗʰ smallest element will be at the nᵗʰ position",
            "/Sorting Stability :- unstable",
            "Worst Case :- [n,n-1...1]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Bubble Sort": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Bubble Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Scroll through the array and compare two adjacent items and repeat n times",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "/Loop Invariant :- nᵗʰ largest element will be at the nᵗʰ last position",
            "/Sorting Stability :- stable",
            "Worst Case :- [1,1,1...0]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Ingrassia Kurtz Sort": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Ingrassia Kurtz Sort",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The most inefficient sort possible",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Generate all permutations of input",
            "Sort the permutations",
            "Return the first elementin the sorted list of permutations"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Bogo Sort": {
      "course": "CS2040S",
      "parents": [
        "Sorting Algorithm"
      ],
      "topic": "Bogo Sort",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Choose a random permutation of the array",
            "If the new array is sorted, then return it"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Sorting Algorithm": {
      "course": "CS2040S",
      "parents": [
        "Algorithm"
      ],
      "topic": "Sorting Algorithm",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Bubble Sort",
            "Selection Sort",
            "Insertion Sort",
            "Merge Sort",
            "Quick Sort",
            "Bogo Sort",
            "Ingrassia Kurtz Sort"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Sorting Stability"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Peak Finding (2D)": {
      "course": "CS2040S",
      "parents": [
        "Peak Finding"
      ],
      "topic": "Peak Finding (2D)",
      "contents": {
      },
      "date": "24/01/2022",
      "important": null
    },
    "Peak Finding (1D)": {
      "course": "CS2040S",
      "parents": [
        "Peak Finding"
      ],
      "topic": "Peak Finding (1D)",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find global maximum",
            "Go through entire array",
            "::Find some local maximum",
            "Check the middle point, whether it is a peak",
            "If increasing, then recurse on right",
            "If decreasing, then recurse on left",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 8,
          "points": [
            "/Loop Invariant :- there exists a peak in the range, and every peak in the range is a peak in total"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Peak Finding": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "Peak Finding",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Peak Finding (1D)",
            "Peak Finding (2D)"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Monotonic Function Critical Value": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "Monotonic Function Critical Value",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Find the min value of x such that ƒ(x) > k",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "::Find min value",
            "Scale up search by powers of 2 until you reach the first one that fails",
            "Binary search this region"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Search Algorithm": {
      "course": "CS2040S",
      "parents": [
        "Algorithm"
      ],
      "topic": "Search Algorithm",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Binary Search",
            "Graph Search"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Abstract Class": {
      "course": "CS2030S",
      "parents": [
        "Abstraction"
      ],
      "topic": "Abstract Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Class that shouldn't be instantiated like shape, just used to group a family of classes together",
            "Can also define functions that every subclass must implement, using abstract function, such as getArea()",
            "Can also define concrete methods",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code <JV": {
          "section": "Code ",
          "index": 5,
          "points": [
            "abstract class Class {}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Concrete Class": {
      "course": "CS2030S",
      "parents": [
        "Abstraction"
      ],
      "topic": "Concrete Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Class that can be instantiated",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Can inherit from only one parent",
            "Can implement multple /Interface s"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Abstraction": {
      "course": "CS2030S",
      "parents": [
        "OOP"
      ],
      "topic": "Abstraction",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Concrete Class",
            "Abstract Class",
            "Interface"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Liskov Substitution Principle": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Liskov Substitution Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A subclass should not break the expectations set by the superclass",
            "You can do extra, but not less"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Run Time": {
      "course": "CS2030S",
      "parents": [
        "Dynamic Binding",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Run Time",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Run Time Type"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Usage :- /Run Time Type of target, /Compile Time Type of arguments",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "Get method descriptor from /Compile Time",
            "Starting from the /Run Time Type, go up the /Class Heirarchy until you find the first matching method"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Compile Time": {
      "course": "CS2030S",
      "parents": [
        "Dynamic Binding",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Compile Time",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Compile Time Type"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Identify the /Compile Time Type of the parameters",
            "Check the compile-time class for method",
            "Identify the most specific implementation of the method to use",
            "Store method descriptor in bytecode",
            "Then return that method's signature (name, *args)",
            "/Type Erasure"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Dynamic Binding": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Dynamic Binding",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Figures out which method implementation is called",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Class methods cannot be dynamically bound",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Compile Time",
            "Run Time"
          ]
        }
      },
      "date": "24/01/2022",
      "important": "Simportant"
    },
    "Weak Type Safety": {
      "course": "CS2030S",
      "parents": [
        "Type Safety"
      ],
      "topic": "Weak Type Safety",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Happens when you need to do /Type Casting",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- ClassCastException raised when modifying unrelated parts of code"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/02/2022",
      "important": null
    },
    "Strong Type Safety": {
      "course": "CS2030S",
      "parents": [
        "Type Safety"
      ],
      "topic": "Strong Type Safety",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Whenever an object is cast to another type, the real runtime type is compatible of that type",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "<JV Box<Integer> b = new Box<Object>(null) JV> iff Box is immutable"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/02/2022",
      "important": null
    },
    "Very Strong Type Safety": {
      "course": "CS2030S",
      "parents": [
        "Type Safety"
      ],
      "topic": "Very Strong Type Safety",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Type can only be case to types that correspond to the type it was created",
            "Only need to check in places with unchecked cast",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "<JV Box<? extends Number> b = new Box<Integer>(1) JV>",
            "<JV Box<?> b = new Box<Integer>(1) JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/02/2022",
      "important": null
    },
    "Type Safety": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "Type Safety",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Type Safety is the extent to which a programming language discourages or prevents type errors",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Very Strong Type Safety",
            "Strong Type Safety",
            "Weak Type Safety"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Type Casting": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Type Casting",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Typecasting is reclassifying a variable, to integrate it into the function (newType) new oldType;",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- Dangerous as no /Type Safety"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Return Type": {
      "course": "CS2030S",
      "parents": [
        "Method Descriptor"
      ],
      "topic": "Return Type",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::R1 is substitutable for R2 iff",
            "R1 void ⟹ R2 void",
            "R1 primitive ⟹ R1 == R2",
            "R1 <: R2",
            "R1 :> R2 but casted"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/02/2022",
      "important": null
    },
    "Method Descriptor": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism"
      ],
      "topic": "Method Descriptor",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Method Signature"
          ],
          "sublinks": [
            "Return Type"
          ]
        }
      },
      "date": "27/02/2022",
      "important": null
    },
    "Method Signature": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Method Signature",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Method Name",
            "Number of Arguments",
            "Type of Arguments",
            "Order of Arguments"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/01/2022",
      "important": "Important"
    },
    "Polymorphism": {
      "course": "CS2030S",
      "parents": [
        "OOP"
      ],
      "topic": "Polymorphism",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Particular method has different implementations based on where it is declared",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Dynamic Binding",
            "Method Signature",
            "Method Descriptor",
            "Liskov Substitution Principle",
            "Overriding",
            "Overloading",
            "Generics"
          ]
        }
      },
      "date": "24/01/2022",
      "important": null
    },
    "Java Binary Search": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "Java Binary Search",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "int begin = 0;",
            "int end = end;",
            "while (begin < end) {",
            " int mid = begin + (end-begin) / 2;",
            " if (condition) {",
            "   end = mid;",
            " } else {",
            "   begin = mid + 1;",
            " }",
            "}",
            "return begin;",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/01/2022",
      "important": "Important"
    },
    "Binary Search": {
      "course": "CS1101S",
      "parents": [
        "Search Algorithm",
        "Searching"
      ],
      "topic": "Binary Search",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Keep checking the middle value whether it is bigger or smaller than the value you want (tyres)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/09/2021",
      "important": null
    },
    "Lab Workflow": {
      "course": "CS2030S",
      "parents": [
        "CS2030S PE1 Cheatsheet",
        "CS2030S"
      ],
      "topic": "Lab Workflow",
      "contents": {
        "Access the PE Hosts": {
          "section": "Access the PE Hosts",
          "index": 0,
          "points": [
            "Access the PE hosts either through lab sessions or have to tunnel through stu.comp.nus.edu.sg",
            "Accept link from Luminus main module page",
            "Use any PE from pe111 to pe120 (can't use 116 or 117)",
            "ssh -t hafeez@stu.comp.nus.edu.sg ssh hafeez@pe113.comp.nus.edu.sg",
            "The second username will be different for exam setting",
            "~cs2030s/get-labX to copy lab X to directory",
            "./test.sh LabX to test code",
            "~cs2030s/submit-labX to submit lab X, can be done multiple times",
            "cp -i ../lab1-<username>/*.java . to copy files from different lab",
            "rm -i Lab1.java",
            "java LabX < inputs/LabX.Y.in",
            "rm -i .Question.md.swp to delete swp file",
            "touch filename to create file",
            "checkstyle in terminal to checkstyle",
            "java -jar ~cs2030s/bin/checkstyle.jar -c ~cs2030s/bin/cs2030 checks.xml *.java",
            "ls -a then ~cs2030s/.vimrc",
            "javadoc -quiet -private -d docs <pathtofile>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 19,
          "points": [

          ],
          "sublinks": [
            "SOC Unix Account",
            "J Shell Script"
          ]
        }
      },
      "date": "18/01/2022",
      "important": "Simportant"
    },
    "SOC Unix Account": {
      "course": "CS2030S",
      "parents": [
        "Lab Workflow"
      ],
      "topic": "SOC Unix Account",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Check whether working",
            "ssh hafeez@stu.comp.nus.edu.sg",
            "Ctrl + D to exit"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Meiji Restoration": {
      "course": "GEC1030",
      "parents": [
        "Edo"
      ],
      "topic": "Meiji Restoration",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1868",
            "Centralise political authorities",
            "Establish Western-style policy",
            "Revise the unequal treaties",
            "Secure finances domestically",
            "Defend the nation",
            "Build modern infrastructure / industries",
            "Turn people into productive subjects",
            "Build an empire"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/03/2022",
      "important": null
    },
    "Edo": {
      "course": "GEC1030",
      "parents": [
        "Cities Of Transformation"
      ],
      "topic": "Edo",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Civil war against the shogunate",
            "Rapid modernisation & blending of cultures",
            "Samurai disappeared",
            "Government used urban planning as a political statement"
          ],
          "sublinks": [
            "Meiji Restoration"
          ]
        }
      },
      "date": "17/03/2022",
      "important": null
    },
    "Cities Of Transformation": {
      "course": "GEC1030",
      "parents": [

      ],
      "topic": "Cities Of Transformation",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Edo"
          ]
        }
      },
      "date": "17/03/2022",
      "important": null
    },
    "Melaka": {
      "course": "GEC1030",
      "parents": [
        "Cities Of Commerce"
      ],
      "topic": "Melaka",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Entrepot (centre) in which goods from China (Ceramics, Tea), SEA and India (Cloth) was traded",
            "Cosmopolitan trade centre 87 languages",
            "Islam unifying religion (regulations relating to trade, how to interact that creates a framework for conducting those activities)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/03/2022",
      "important": null
    },
    "Cities Of Commerce": {
      "course": "GEC1030",
      "parents": [

      ],
      "topic": "Cities Of Commerce",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Melaka"
          ]
        }
      },
      "date": "16/03/2022",
      "important": null
    },
    "CA3 Essay": {
      "course": "GEC1030",
      "parents": [
        "CA3 Notes"
      ],
      "topic": "CA3 Essay",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Articulate the main point about the city you are explaining"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "CA3 Notes": {
      "course": "GEC1030",
      "parents": [

      ],
      "topic": "CA3 Notes",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "City of Power: Specify the sorts of power each city exerts",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "CA3 Essay"
          ]
        }
      },
      "date": "14/03/2022",
      "important": null
    },
    "Imperial Monument": {
      "course": "GEC1030",
      "parents": [
        "Cities Of Change"
      ],
      "topic": "Imperial Monument",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Some monuments are looked down upon (racist, explotative labour)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Raffles Statue",
            "British Naval Base Kent Ridge"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/02/2022",
      "important": null
    },
    "Cities Of Change": {
      "course": "GEC1030",
      "parents": [
        "GEC1030"
      ],
      "topic": "Cities Of Change",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Green space",
            "Nostalgia",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Heritage Area",
            "Concept Plan (2001)",
            "Imperial Monument"
          ]
        }
      },
      "date": "28/02/2022",
      "important": null
    },
    "CA1 Review": {
      "course": "GEC1030",
      "parents": [
        "GEC1030"
      ],
      "topic": "CA1 Review",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Use academic sources, not blogs/vlogs",
            "Name order, italicisation, superscript position for citations",
            "Footnotes should have numbering and delimit using comma",
            "Bibliography should delimit using period",
            "Italicise title of books",
            "Superscript using Word > References > Insert Footnote",
            "Don't bury topics sentences in the middle of the paragraph"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "28/02/2022",
      "important": null
    },
    "Cities Of Sacred Power Governance": {
      "course": "GEC1030",
      "parents": [
        "Cities Of Sacred Power"
      ],
      "topic": "Cities Of Sacred Power Governance",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Kings model their duties based off the duties of gods",
            "Power is concentrated around the capital temple"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Cities Of Sacred Power": {
      "course": "GEC1030",
      "parents": [
        "GEC1030"
      ],
      "topic": "Cities Of Sacred Power",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Cities are designed to resemble the universe & stories of legend",
            "Water tends to represent life",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Cities Of Sacred Power Governance"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul Prudence": {
      "course": "GEC1030",
      "parents": [
        "Istanbul"
      ],
      "topic": "Istanbul Prudence",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Hippodrome plastered to be waterproof and converted into cistern",
            "Prepare against drought, fire, seige",
            "Adapt to increasing population"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Pendentive": {
      "course": "GEC1030",
      "parents": [
        "Hagia Sophia"
      ],
      "topic": "Pendentive",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Triangular features that allow a dome to be placed on top of a building block",
            "Hemisphere with sides cut off",
            "Load-transferring",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 5,
          "points": [
            "/Hagia Sophia"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Suleimaniye Mosque": {
      "course": "GEC1030",
      "parents": [
        "Istanbul Engineering"
      ],
      "topic": "Suleimaniye Mosque",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Built by Suleiman the Magnificent",
            "Ostrich shells between lights to drive away pests",
            "Ventilation system (hidden)",
            "Multireligious facilities"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Hagia Sophia": {
      "course": "GEC1030",
      "parents": [
        "Istanbul Engineering"
      ],
      "topic": "Hagia Sophia",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Highest dome of the world",
            "6th century"
          ],
          "sublinks": [
            "Pendentive"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Golden Horn Defence": {
      "course": "GEC1030",
      "parents": [

      ],
      "topic": "Golden Horn Defence",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Iron chain is laid across the harbour inlet",
            "Prevent ships from entering",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 4,
          "points": [
            "- The enemy dragged their ships on the land and surrounded them"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Golden Horn": {
      "course": "GEC1030",
      "parents": [
        "Istanbul Defence"
      ],
      "topic": "Golden Horn",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Water inlet that separates West Istanbul into North and South",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [
            "Named because rich people throw their loot into it during seige"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Rumelihisari Fortress": {
      "course": "GEC1030",
      "parents": [
        "Istanbul Defence"
      ],
      "topic": "Rumelihisari Fortress",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Found at the narrowest part of the Bosphorus",
            "Sultan Mehmet II councilmen meetings"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Grand Bazaar": {
      "course": "GEC1030",
      "parents": [
        "Istanbul Economy"
      ],
      "topic": "Grand Bazaar",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Became Istanbul's center of wealth",
            "Created to fund the renovations to Hagia Sophia",
            "Allowed Istanbul to grow fom 70k to 700k"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul Economy": {
      "course": "GEC1030",
      "parents": [
        "Istanbul"
      ],
      "topic": "Istanbul Economy",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Grand Bazaar"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul Defence": {
      "course": "GEC1030",
      "parents": [
        "Istanbul"
      ],
      "topic": "Istanbul Defence",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Golden Horn",
            "Rumelihisari Fortress"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul Engineering": {
      "course": "GEC1030",
      "parents": [
        "Istanbul"
      ],
      "topic": "Istanbul Engineering",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Hagia Sophia",
            "Suleimaniye Mosque"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul Aqueduct": {
      "course": "GEC1030",
      "parents": [
        "Aqueduct"
      ],
      "topic": "Istanbul Aqueduct",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Longer and more sophisticated than Rome's aqueducts",
            "Built by Emperor Valens in the late 4th Century",
            "Great visualisations"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Aqueduct": {
      "course": "GEC1030",
      "parents": [
        "Istanbul Rome Comparison"
      ],
      "topic": "Aqueduct",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Transports water across vast distances to the city",
            "Allows for city growth",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Istanbul Aqueduct"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Hippodrome": {
      "course": "GEC1030",
      "parents": [

      ],
      "topic": "Hippodrome",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Roman racetrack",
            "Violent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul Rome Comparison": {
      "course": "GEC1030",
      "parents": [
        "Istanbul"
      ],
      "topic": "Istanbul Rome Comparison",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "/Hippodrome attract rich and poor, like Colosseum",
            "Role of violent and intense entertainment in Roman cities"
          ],
          "sublinks": [
            "Aqueduct"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Boukoleon Palace": {
      "course": "GEC1030",
      "parents": [
        "Istanbul 3D Imaging"
      ],
      "topic": "Boukoleon Palace",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Destruction 1204 /4th Crusade",
            "Signifies the downfall of Byzantine Empire"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul 3D Imaging": {
      "course": "GEC1030",
      "parents": [
        "Istanbul"
      ],
      "topic": "Istanbul 3D Imaging",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Photogrammetry \"as even the locals may never have seen it\"",
            "Strip off layers to uncover hidden details and mysteries"
          ],
          "sublinks": [
            "Boukoleon Palace"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Istanbul": {
      "course": "GEC1030",
      "parents": [
        "GEC1030"
      ],
      "topic": "Istanbul",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Istanbul 3D Imaging",
            "Istanbul Rome Comparison",
            "Istanbul Engineering",
            "Istanbul Prudence",
            "Istanbul Defence",
            "Istanbul Economy"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "GEC1030": {
      "course": "GEC1030",
      "parents": [
        "City"
      ],
      "topic": "GEC1030",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Cities Of Sacred Power",
            "Istanbul",
            "Cities Of Change",
            "CA1 Review"
          ]
        }
      },
      "date": "18/01/2022",
      "important": null
    },
    "Doubly Linked List": {
      "course": "CS2040S",
      "parents": [
        "Data List"
      ],
      "topic": "Doubly Linked List",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Insert RTC :- O(1)",
            "/Search RTC :- O(n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Linked List": {
      "course": "CS2040S",
      "parents": [
        "Data List"
      ],
      "topic": "Linked List",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Insert RTC :- O(1)",
            "/Search RTC :- O(n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Data List": {
      "course": "CS2040S",
      "parents": [
        "Data Structure"
      ],
      "topic": "Data List",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Linked List",
            "Doubly Linked List"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Unsorted Array": {
      "course": "CS2040S",
      "parents": [
        "Data Array"
      ],
      "topic": "Unsorted Array",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Insert RTC :- O(1)",
            "/Search RTC :- O(n)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Sorted Array": {
      "course": "CS2040S",
      "parents": [
        "Data Array"
      ],
      "topic": "Sorted Array",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "/Insert RTC :- O(n)",
            "/Search RTC :- O(logₙ)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Data Array": {
      "course": "CS2040S",
      "parents": [
        "Data Structure"
      ],
      "topic": "Data Array",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sorted Array",
            "Unsorted Array",
            "Queue",
            "Stack"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Tree Invariant": {
      "course": "CS2040S",
      "parents": [
        "Function Invariant"
      ],
      "topic": "Tree Invariant",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Invariant applies at every node of the tree"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Loop Invariant": {
      "course": "CS2040S",
      "parents": [
        "Function Invariant"
      ],
      "topic": "Loop Invariant",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Invariant applies for every loop"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Function Invariant": {
      "course": "CS2040S",
      "parents": [
        "Functions (A)"
      ],
      "topic": "Function Invariant",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Relationship between variables that is always true",
            "Some quality that stays the same throughout the function",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Loop Invariant",
            "Tree Invariant"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Function Postcondition": {
      "course": "CS2040S",
      "parents": [
        "Functions (A)"
      ],
      "topic": "Function Postcondition",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "What will be true when the function ends"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Function Precondition": {
      "course": "CS2040S",
      "parents": [
        "Functions (A)"
      ],
      "topic": "Function Precondition",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "What will be true when the function runs (whether the array is sorted etc.)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Function Functionality": {
      "course": "CS2040S",
      "parents": [
        "Functions (A)"
      ],
      "topic": "Function Functionality",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "What is the function supposed to return"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Functions (A)": {
      "course": "CS2040S",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Functions (A)",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Function Functionality",
            "Function Precondition",
            "Function Postcondition",
            "Function Invariant"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Space Complexity": {
      "course": "CS2040S",
      "parents": [
        "Time Complexity"
      ],
      "topic": "Space Complexity",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "How much extra space the algorithm uses"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Run Time Complexity": {
      "course": "CS2040S",
      "parents": [
        "Time Complexity"
      ],
      "topic": "Run Time Complexity",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sorting RTC",
            "Insert RTC",
            "Delete RTC",
            "Search RTC",
            "Build RTC"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Time Complexity": {
      "course": "CS2040S",
      "parents": [
        "Algorithm Analysis"
      ],
      "topic": "Time Complexity",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Run Time Complexity",
            "Space Complexity"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Orders Of Magnitude": {
      "course": "CS2040S",
      "parents": [
        "Orders Of Growth"
      ],
      "topic": "Orders Of Magnitude",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Linear > logᵏ",
            "n! > 2ⁿ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Recurrence Solution": {
      "course": "CS2040S",
      "parents": [
        "CS2040S Midterm Cheatsheet",
        "Orders Of Growth"
      ],
      "topic": "Recurrence Solution",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "T(n)=kT(n/k)+O(ƒ(n)) ⟹ O(ƒ(n)logₙ)",
            "T(n)=T(n/k)+O(nᵏ) ⟹ O(nᵏ)",
            "T(n)=T(n-1)+O(nᵏ) ⟹ O(nᵏ⁺¹)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Algorithm Analysis": {
      "course": "CS2040S",
      "parents": [
        "CS3230",
        "Algorithm"
      ],
      "topic": "Algorithm Analysis",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Time Complexity",
            "Orders Of Growth",
            "Functions (A)",
            "Simulation Analysis",
            "Word RAM Model",
            "Mathematical Algorithm Analysis",
            "Asymptotic Analysis",
            "Probabilistic Analysis",
            "Amortized Analysis"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "CS2040S Midterm Cheatsheet": {
      "course": "CS2040S",
      "parents": [
        "CS2040S"
      ],
      "topic": "CS2040S Midterm Cheatsheet",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Recurrence Solution",
            "AVL Tree",
            "Tree Rotation",
            "Double Rotation",
            "AVL Invariant",
            "Interval Tree",
            "Orthogonal Range Tree",
            "Chaining"
          ]
        }
      },
      "date": "09/03/2022",
      "important": null
    },
    "Algorithm": {
      "course": "CS2040S",
      "parents": [
        "CS3230",
        "CS2040S"
      ],
      "topic": "Algorithm",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A set of instructions for solving a problem",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Search Algorithm",
            "Sorting Algorithm",
            "Greedy Algorithm",
            "Incremental Algorithm",
            "Approximation Algorithm"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "Algorithm Analysis"
          ]
        }
      },
      "date": "01/03/2022",
      "important": null
    },
    "Data Structure": {
      "course": "CS2040S",
      "parents": [
        "CS2040S"
      ],
      "topic": "Data Structure",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Data Array",
            "Data List",
            "Data Tree",
            "Data Table",
            "Data Graph"
          ]
        }
      },
      "date": "01/03/2022",
      "important": null
    },
    "CS2040S": {
      "course": "CS2040S",
      "parents": [

      ],
      "topic": "CS2040S",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "/CS1101S",
            "/CS1231S"
          ],
          "sublinks": [
            "Data Structure",
            "Algorithm",
            "Dynamic Programming",
            "CS2040S Midterm Cheatsheet"
          ]
        }
      },
      "date": "28/02/2022",
      "important": null
    },
    "Class Heirarchy": {
      "course": "CS2030S",
      "parents": [
        "Inheritance"
      ],
      "topic": "Class Heirarchy",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Object is at the top of the type system",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Sub Type",
            "Super Type",
            "Composition"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Java Super": {
      "course": "CS2030S",
      "parents": [
        "Inheritance",
        "CS2030S PE1 Cheatsheet",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Java Super",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Can super() to parent construct",
            "Can super.method() to use parent method",
            "Can super.field to use parent class field"
          ],
          "sublinks": [

          ]
        }
      },
      "date": null,
      "important": null
    },
    "Inheritance": {
      "course": "CS2030S",
      "parents": [
        "OOP"
      ],
      "topic": "Inheritance",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "<JV class Child extends Parent {} JV>",
            "super(); MUST be the first line",
            "Can put in default values, as long as super() is called first",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Object Type",
            "Class Heirarchy",
            "Java Super"
          ]
        }
      },
      "date": "17/01/2022",
      "important": "Important"
    },
    "Vim Global": {
      "course": "CS2030S",
      "parents": [
        "Vim Cheatsheet",
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "Vim Global",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            ":h keyword - open help for keyword",
            ":sav file - save file as",
            ":clo - close current pane",
            ":ter - open terminal window"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Vim Cursor": {
      "course": "CS2030S",
      "parents": [
        "Vim Cheatsheet",
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "Vim Cursor",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "h - left",
            "j - down",
            "k - up",
            "l - right",
            "H - top of screen",
            "M - middle of screen",
            "L - bottom of screen",
            "w - forwards to start of word",
            "e - forwards to end of word",
            "b - backwards to start of word",
            "ge - backwards to end of word",
            "0 - start of line",
            "$ - end of line",
            "gg - first line",
            "G - last line",
            "4G - go to line 4",
            "f4 - next occurrence of 4",
            "F4 - previous occurrence of 4",
            "; - repeat previous occurrence movement",
            "{ - previous paragraph",
            "} - next paragraph",
            "CTRL e - screen down one line",
            "CTRL y - screen up one line",
            "CTRL f - screen down one page",
            "CTRL b - screen up one page",
            "CTRL d - screen down ½ page",
            "CTRL u - screen up ½ page",
            "/pattern - search for pattern",
            "?pattern - search backwards for pattern",
            "n - repeat search",
            "N - repeat search in opposite direction"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Vim Editing": {
      "course": "CS2030S",
      "parents": [
        "Vim Cheatsheet",
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "Vim Editing",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "u - undo",
            "U - undo entire line",
            "CTRL r - redo",
            "C - replace to end of line",
            "ciw - replace word",
            "cc - replace entire line",
            ":%s/old/new/gc - replace all old with new",
            "p - paste clipboard",
            "4yy - copy 4 lines",
            "yiw / yaw - copy word",
            "Y - copy to end of line",
            "4dd - delete 4 lines",
            "diw / daw - delete word",
            "D - delete to end of line",
            "gg=G - fix indenting"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Vim Essential": {
      "course": "CS2030S",
      "parents": [
        "Vim Cheatsheet",
        "CS2030S PE1 Cheatsheet"
      ],
      "topic": "Vim Essential",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "a - goes from COMMAND to INSERT",
            "Esc - goes from INSERT to COMMAND",
            ". - repeat last command",
            ":wq / :x - save and quit",
            ":w - quit",
            "CTRL W V - split window",
            "CTRL W arrow - switch between windows",
            "vim -O *files - open multiple files horizontally",
            ":e filename - open different file",
            ":terminal - open terminal",
            "CTRL N - autocomplete"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Vim Cheatsheet": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "Vim Cheatsheet",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Link :- https://vim.rtorr.com/",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Vim Essential",
            "Vim Editing",
            "Vim Global",
            "Vim Cursor"
          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 9,
          "points": [
            "vim filename.java to open the vim window"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": "Important"
    },
    "Shell Environment": {
      "course": "CS2030S",
      "parents": [
        "Terminal Environment"
      ],
      "topic": "Shell Environment",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "jshell filename1.java filename2.java to start shell using as many classes",
            "Ctrl + Z to stop the shell",
            "/exit to quit the shell",
            "fg to resume",
            "/list to list all the code",
            ""
          ],
          "sublinks": [

          ]
        },
        "TOpics": {
          "section": "TOpics",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "J Shell Script"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Linux Mkdir": {
      "course": "CS2030S",
      "parents": [
        "Linux Cheatsheet"
      ],
      "topic": "Linux Mkdir",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "mkdir <dirname> :- make new dir",
            "mkdir -p <dirname>/<subdirname> :- make collection of dirs"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Linux Cheatsheet": {
      "course": "CS2030S",
      "parents": [
        "Linux Environment"
      ],
      "topic": "Linux Cheatsheet",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Linux Mkdir"
          ]
        }
      },
      "date": "10/03/2022",
      "important": null
    },
    "Linux Environment": {
      "course": "CS2030S",
      "parents": [
        "Terminal Environment"
      ],
      "topic": "Linux Environment",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "ls to list all files",
            "cd dir to enter directory",
            "javac *.java to compile all java files",
            "jshell *.java to open shell with java files",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Linux Cheatsheet"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "No Modifier": {
      "course": "CS2030S",
      "parents": [
        "Access Modifier"
      ],
      "topic": "No Modifier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Method / data can be used within same package"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Effectively Final": {
      "course": "CS2030S",
      "parents": [
        "Final Modifier"
      ],
      "topic": "Effectively Final",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Variable is not changed throughout the code"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/03/2022",
      "important": null
    },
    "Final Modifier": {
      "course": "CS2030S",
      "parents": [
        "Access Modifier",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Final Modifier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Data is immutable",
            "Classes cannot be extended",
            "Methods cannot be overridden",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Effectively Final"
          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Static Modifier": {
      "course": "CS2030S",
      "parents": [
        "Access Modifier"
      ],
      "topic": "Static Modifier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Method / data is shared by entire class, and can't be applied to any singular object",
            "Useful for counting number of objects in class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 4,
          "points": [
            "static method(){}"
          ],
          "sublinks": [

          ]
        },
        "Class.method(); // to call the method": {
          "section": "Class.method(); // to call the method",
          "index": 6,
          "points": [
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Protected Modifier": {
      "course": "CS2030S",
      "parents": [
        "Access Modifier"
      ],
      "topic": "Protected Modifier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Method / data can only be used within same class or subclasses"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Private Modifier": {
      "course": "CS2030S",
      "parents": [
        "Access Modifier"
      ],
      "topic": "Private Modifier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Method / data can only be used within same class"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Public Modifier": {
      "course": "CS2030S",
      "parents": [
        "Access Modifier"
      ],
      "topic": "Public Modifier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Method / data can be used anywhere",
            "Constructors / Interfaces & Interface methods should be public"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/01/2022",
      "important": null
    },
    "Terminal Environment": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "Terminal Environment",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Linux Environment",
            "Shell Environment"
          ]
        }
      },
      "date": "17/01/2022",
      "important": "Important"
    },
    "Access Modifier": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Access Modifier",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Public Modifier",
            "Private Modifier",
            "Protected Modifier",
            "Static Modifier",
            "Final Modifier",
            "No Modifier"
          ]
        }
      },
      "date": "17/01/2022",
      "important": "Important"
    },
    "Java LinkedList": {
      "course": "CS2030S",
      "parents": [
        "Java List"
      ],
      "topic": "Java LinkedList",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Stores elements in a chain"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/01/2022",
      "important": null
    },
    "Java ArrayList": {
      "course": "CS2030S",
      "parents": [
        "Java List"
      ],
      "topic": "Java ArrayList",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Stores elements like in an array"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/01/2022",
      "important": null
    },
    "Java List": {
      "course": "CS2030S",
      "parents": [
        "Java Packages",
        "Interface",
        "CS2030S PE1 Cheatsheet",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Java List",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Stores elements in an expanding fashion",
            "<JV import java.util.* JV>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Java ArrayList",
            "Java LinkedList"
          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 8,
          "points": [
            "<JV List(len) JV> ",
            "<JV add() JV>",
            "<JV get() JV>",
            "<JV addAll(list) JV>",
            "<JV size() JV>",
            "<JV isEmpty() JV>",
            "<JV contains(obj) JV>",
            "<JV remove(obj) JV>",
            "<JV clear() JV>",
            "<JV set(id,obj) JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/01/2022",
      "important": null
    },
    "Java Comparable": {
      "course": "CS2030S",
      "parents": [
        "Java Packages",
        "Interface"
      ],
      "topic": "Java Comparable",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Allows for a total ordering of an object, so everything can be compared to each other",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 3,
          "points": [
            "<JV compareTo(obj) JV> - returns -1, 0, 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Tell Not Ask": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Tell Not Ask",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "We should not extract individual information from the object"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Getter Method": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Getter Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Gets the value of the field within the object",
            ""
          ],
          "sublinks": [

          ]
        },
        "Benefits": {
          "section": "Benefits",
          "index": 3,
          "points": [
            "+ Controls the access of private and protected fields, by only allowing changes through certain functions",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 6,
          "points": [
            "- If too many getter methods, then might as well make everything public!!"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Setter Method": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Setter Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Changes the value of the field within the object"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Constructor Method": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Constructor Method",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Used to instantiate an object within the class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 3,
          "points": [
            "<JV public Class(args) {this.args = args} JV>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Is A Relationship": {
      "course": "CS2030S",
      "parents": [
        "Composition"
      ],
      "topic": "Is A Relationship",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Indicates a /Sub Type relationship",
            "/Inheritance",
            "Should be able to substitute their parent",
            "Represented by arrows pointing up"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Has A Relationship": {
      "course": "CS2030S",
      "parents": [
        "Composition"
      ],
      "topic": "Has A Relationship",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Indicates that one contains one or more of the other",
            "Represented by nested boxes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Composition": {
      "course": "CS2030S",
      "parents": [
        "Class Heirarchy",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Composition",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Models the relationship between object types using boxes and arrows",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Has A Relationship",
            "Is A Relationship",
            "Can Do Relationship"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Information Hiding": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Information Hiding",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Fields inside classes should not be made fully available to the outside world, and should use /Setter Method and /Getter Method"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Encapsulation": {
      "course": "CS2030S",
      "parents": [
        "OOP"
      ],
      "topic": "Encapsulation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Bundle related variables together to create a class",
            "Methods are functions",
            "Attributes are the stored data (or fields)",
            "Instantiation creates a new object of a class",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [
            ""
          ],
          "sublinks": [
            "Access Modifier",
            "Tell Not Ask",
            "Abstraction Barrier",
            "Information Hiding",
            "Immutability",
            "Nested Class"
          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 14,
          "points": [

          ],
          "sublinks": [
            "Setter Method",
            "Getter Method",
            "Constructor Method"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Abstraction Barrier": {
      "course": "CS2030S",
      "parents": [
        "Encapsulation"
      ],
      "topic": "Abstraction Barrier",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "When calling only a function, you only feed it inputs and you only receive outputs",
            "What happens in between is none of your concern, acting as the barrier"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Overloading": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism"
      ],
      "topic": "Overloading",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Adds additional functionality to the class whilst maintaining the old ones",
            "Same name but different /Method Signature",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 4,
          "points": [
            "public method(int x) {}",
            "public method(double x) {}",
            "public method(String x) {}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Overriding": {
      "course": "CS2030S",
      "parents": [
        "Polymorphism"
      ],
      "topic": "Overriding",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Replaces functionality from the parent or within class itself",
            "Based on /Method Signature",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 4,
          "points": [
            "@Override",
            "public method() {}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Composite Data Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Composite Data Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Data types that have one or more fields dynamically linked to fields in another data type"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Reference Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Reference Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Custom-built classes",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Circle",
            "Shop",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Wrapper Class"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Super Type": {
      "course": "CS2030S",
      "parents": [
        "Class Heirarchy"
      ],
      "topic": "Super Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If A is a supertype of B, then codes for A can safely run for B",
            "Widening type conversion",
            "<MA A :> B MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Sub Type": {
      "course": "CS2030S",
      "parents": [
        "Class Heirarchy"
      ],
      "topic": "Sub Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If B is a subtype of A, then codes for A can safely run for B",
            "<MA B <: A MA>",
            "<: is a /Reflexive Relation and /Transitive Relation",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 5,
          "points": [
            "<MA byte <: short <: int <: long MA>",
            "<MA long <: float <: double MA>",
            "<MA char <: int MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Primitive Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Primitive Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Base types in the language",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "They don't share their values",
            "Changing x won't change y",
            "int !<: Object",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 8,
          "points": [

          ],
          "sublinks": [
            "Wrapper Class",
            "Auto Boxing",
            "Unboxing"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Strong Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Strong Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Language prohibits you from anyhow changing types"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Weak Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Weak Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Language allows you to shoehorn the variable into certain types"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Dynamic Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Dynamic Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Types of objects can be changed",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 3,
          "points": [
            "- No /Type Safety",
            "- Slow",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "Python"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Static Type": {
      "course": "CS2030S",
      "parents": [
        "Object Type"
      ],
      "topic": "Static Type",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Types of objects cannot be changed",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Java",
            "C++"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Object Type": {
      "course": "CS2030S",
      "parents": [
        "Inheritance"
      ],
      "topic": "Object Type",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Static Type",
            "Dynamic Type",
            "Reference Type",
            "Strong Type",
            "Weak Type",
            "Primitive Type",
            "Composite Data Type"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Type Variance",
            "Type Inference",
            "Type Erasure",
            "Type Casting"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Executable (Tombstone)": {
      "course": "CS2030S",
      "parents": [
        "Tombstone Diagram",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Executable (Tombstone)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Compilers (javac program.java) will create a bytecode script (.class) from the written script (.java)",
            "Interpreters (java program.class) will run the code"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Interpreter (Tombstone)": {
      "course": "CS2030S",
      "parents": [
        "Tombstone Diagram",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Interpreter (Tombstone)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Rectangle blocks that convert downwards",
            "Interpreters (java) convert bytecode language to hardware instructions",
            "Interpreters (jshell) can also convert written code directly to hardware instructions (line by line)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Compiler (Tombstone)": {
      "course": "CS2030S",
      "parents": [
        "Tombstone Diagram",
        "CS2030S Midterm Cheatsheet"
      ],
      "topic": "Compiler (Tombstone)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "T-shaped blocks that convert rightwards",
            "Compilers (javac) convert written code to bytecode language (virtual machine language)",
            "Compilers themselves are written in a certain language, which needs to be interpreted to the hardware instructions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Tombstone Diagram": {
      "course": "CS2030S",
      "parents": [
        "Compiler"
      ],
      "topic": "Tombstone Diagram",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Compiler (Tombstone)",
            "Interpreter (Tombstone)",
            "Executable (Tombstone)"
          ]
        }
      },
      "date": "10/01/2022",
      "important": "Important"
    },
    "Compiler": {
      "course": "CS2030S",
      "parents": [
        "CS2030S"
      ],
      "topic": "Compiler",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Tombstone Diagram",
            "Stack Heap Diagram"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "OOP": {
      "course": "CS2030S",
      "parents": [
        "Java",
        "CS2030S"
      ],
      "topic": "OOP",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Encapsulation",
            "Inheritance",
            "Polymorphism",
            "Abstraction"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "CS2030S PE1 Cheatsheet": {
      "course": "CS2030S",
      "parents": [
        "CS2030S Cheatsheet"
      ],
      "topic": "CS2030S PE1 Cheatsheet",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Vim Essential",
            "Vim Editing",
            "Vim Global",
            "Vim Cursor",
            "Lab Workflow",
            "Exception",
            "Valid Generics",
            "Invalid Generics",
            "Producer Extends",
            "Consumer Super",
            "PE Workflow",
            "Java Equals (Generics)",
            "Java List",
            "Java Super"
          ]
        }
      },
      "date": "04/03/2022",
      "important": null
    },
    "CS2030S Midterm Cheatsheet": {
      "course": "CS2030S",
      "parents": [
        "CS2030S Cheatsheet"
      ],
      "topic": "CS2030S Midterm Cheatsheet",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Compiler (Tombstone)",
            "Interpreter (Tombstone)",
            "Executable (Tombstone)",
            "Method Signature",
            "Composition",
            "Java List",
            "Java Super",
            "Dynamic Binding",
            "Compile Time",
            "Run Time",
            "Liskov Substitution Principle",
            "Final Modifier",
            "Stack Heap Diagram",
            "Stack (Stack Heap Diagram)",
            "Heap (Stack Heap Diagram)",
            "Compile Time Type",
            "Run Time Type",
            "Checked Exception",
            "Generics",
            "Valid Generics",
            "Invalid Generics",
            "Type Inference (Generics)",
            "Generic Type",
            "Type Erasure",
            "Raw Type",
            "Producer Extends",
            "Consumer Super"
          ]
        }
      },
      "date": "26/02/2022",
      "important": null
    },
    "CS2030S Cheatsheet": {
      "course": "CS2030S",
      "parents": [
        "CS2030S"
      ],
      "topic": "CS2030S Cheatsheet",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "CS2030S Midterm Cheatsheet",
            "CS2030S PE1 Cheatsheet"
          ]
        }
      },
      "date": "04/03/2022",
      "important": null
    },
    "CS2030S": {
      "course": "CS2030S",
      "parents": [

      ],
      "topic": "CS2030S",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            "/CS1101S"
          ],
          "sublinks": [
            "Lab Workflow",
            "Compiler",
            "OOP",
            "Exception Handling",
            "Functional Programming",
            "CS2030S Cheatsheet",
            "Asynchronous Programming"
          ]
        }
      },
      "date": "10/01/2022",
      "important": null
    },
    "Cheatsheet For Finals": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Cheatsheet For Finals",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function mutable reverse(xs) {",
            "   function helper(curr, remain) {",
            "       if (is null(remain)) {",
            "           return curr;",
            "       } else {",
            "           const push = tail(remain);",
            "           set tail(remain, curr);",
            "           return helper(remain, push);",
            "       }",
            "   }",
            "   return helper(null, xs);",
            "}",
            "",
            "function npr(s, r) {",
            "   if (r === 0) {",
            "       return list(null);",
            "   } else if (is null(s)) {",
            "       return list(null);",
            "   } else {",
            "       const perm per elem = x => map(p => pair(x, p), npr(remove(x, s), r - 1));",
            "       return accumulate(append, null, map(perm per elem, s));",
            "   }",
            "}",
            "",
            "function similar(tn1, tn2) {",
            "   if (is null(tn1) && is null(tn2)) {",
            "       return true;",
            "   } else if (is number(tn1) && is number(tn2)) {",
            "       return math abs(tn1 - tn2) <= 1;",
            "   } else if (is pair(tn1) && is pair(tn2)) {",
            "       return similar(head(tn1), head(tn2)) && similar(tail(tn1), tail(tn2)); ",
            "   } else {",
            "       return false;",
            "   }",
            "}",
            "",
            "function memoize(f) {",
            "   const mem = [];",
            "   function mf(x) {",
            "       if (mem[x] !== undefined) {",
            "           return mem[x]; ",
            "       } else {",
            "           const result = f(x);",
            "           mem[x] = result;",
            "           return result;",
            "       }",
            "   }",
            "   return mf;",
            "}",
            "",
            "function take(xs, n) {",
            "   return n === 0",
            "       ? null",
            "       : pair(head(xs), take(tail(xs), n-1));",
            "}",
            "",
            "function drop(xs, n) {",
            "   return n === 0",
            "       ? xs",
            "       : drop(tail(xs), n-1);",
            "}",
            "",
            "function member list(xs, L) {",
            "   if (length(L) < length(xs)) {",
            "       return null;",
            "   } else {",
            "       if (head(xs) === head(L)) {",
            "           const ys = take(L, length(xs));",
            "           return equal(xs, ys)",
            "               ? L",
            "               : member list(xs, tail(L));",
            "       } else {",
            "           return member list(xs, tail(L));",
            "       }",
            "   }",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/11/2021",
      "important": "Important"
    },
    "Source Permutations": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Permutations",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function permutations(xs) {",
            "   return accumulate(",
            "       (x, y) => append(",
            "           map(z => pair(x, z),",
            "               permutations(remove(x, xs))), y),",
            "       list(null),",
            "       xs);",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/11/2021",
      "important": null
    },
    "Source Mutable Reverse": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Mutable Reverse",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function mutable reverse(xs) {",
            "   function helper(curr, remain) {",
            "       if (is null(remain)) {",
            "           return curr;",
            "       } else {",
            "           const push = tail(remain);",
            "           set tail(remain, curr);",
            "           return helper(remain, push);",
            "       }",
            "   }",
            "   return helper(null, xs);",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/11/2021",
      "important": "Important"
    },
    "Source Similar": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Similar",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function similar(tn1, tn2) {",
            "   if (is null(tn1) && is null(tn2)) {",
            "       return true;",
            "   } else if (is number(tn1) && is number(tn2)) {",
            "       return math abs(tn1 - tn2) <= 1;",
            "   } else if (is pair(tn1) && is pair(tn2)) {",
            "       return similar(head(tn1), head(tn2)) && similar(tail(tn1), tail(tn2)); ",
            "   } else {",
            "       return false;",
            "   }",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/11/2021",
      "important": null
    },
    "Rail Corridor Master Plan": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Rail Corridor Master Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Woodlands to Tanjong Pagar",
            "Community engagement",
            "Design workshops, community walks, ideas competition"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/11/2021",
      "important": null
    },
    "Master Plan (2003)": {
      "course": "GESS1019",
      "parents": [
        "Master Plan"
      ],
      "topic": "Master Plan (2003)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Grid urban pattern",
            "Sub-divided or phased developments",
            "“White zoning” to encourage mixed-use"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/11/2021",
      "important": null
    },
    "Conservation Master Plan (1989)": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Conservation Master Plan (1989)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Multiple conservation areas set up"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/11/2021",
      "important": null
    },
    "Sewage Water Plan (1960s)": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Sewage Water Plan (1960s)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Build a system that could cope with a growing population",
            "Rapid expansion of sewage network"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/11/2021",
      "important": null
    },
    "Master Plan (2019)": {
      "course": "GESS1019",
      "parents": [
        "Master Plan"
      ],
      "topic": "Master Plan (2019)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Mix of land uses within the CBD",
            "Future capacity and planning for resilience",
            "Ecological buffer zones",
            "Optimise land use",
            "Repurpose Paya Lebar Air Base and the Greater Southern Waterfront",
            "Underground space plans for Marina Bay, Punggol Digital"
          ],
          "sublinks": [

          ]
        },
        "District and Jurong Innovation District": {
          "section": "District and Jurong Innovation District",
          "index": 7,
          "points": [
            "More surface land freed up for people-centric uses",
            "URA mix-use incentives"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/11/2021",
      "important": null
    },
    "Master Plan (2014)": {
      "course": "GESS1019",
      "parents": [
        "Master Plan"
      ],
      "topic": "Master Plan (2014)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Socially inclusive",
            "Economically vibrant",
            "Sustainable living environment",
            "Land for nature reserves and parks",
            "Key amenities within or near neighbourhoods",
            "Provided more spaces for community interaction",
            "Over 70 buildings were earmarked for conservation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/11/2021",
      "important": null
    },
    "Prim's Algorithm": {
      "course": "CS1231S",
      "parents": [
        "Minimum Spanning Tree",
        "Graph Theory"
      ],
      "topic": "Prim's Algorithm",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Choose the lightest edge from any point in the current tree",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "/Run Time Complexity :- O((V+E)logV)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/11/2021",
      "important": "Important"
    },
    "Kruskal's Algorithm": {
      "course": "CS1231S",
      "parents": [
        "Minimum Spanning Tree",
        "Graph Theory"
      ],
      "topic": "Kruskal's Algorithm",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Sort the edges by weight",
            "Choose the lightest edge from current point",
            "If edge doesn't end up in circuit, add the edge"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "21/11/2021",
      "important": "Important"
    },
    "Handshake Theorem": {
      "course": "CS1231S",
      "parents": [
        "Graph Theory"
      ],
      "topic": "Handshake Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Degree of G = 2 × Number of edges MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "Post Order Traversal": {
      "course": "CS1231S",
      "parents": [
        "Tree Traversal"
      ],
      "topic": "Post Order Traversal",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Get Left, then Right, then Root"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "In Order Traversal": {
      "course": "CS1231S",
      "parents": [
        "Tree Traversal"
      ],
      "topic": "In Order Traversal",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Get Left, then Root, then Right"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "Pre Order Traversal": {
      "course": "CS1231S",
      "parents": [
        "Tree Traversal"
      ],
      "topic": "Pre Order Traversal",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Get Root, then Left, then Right"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "Tree Traversal": {
      "course": "CS1231S",
      "parents": [
        "Binary Search Tree"
      ],
      "topic": "Tree Traversal",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Pre Order Traversal",
            "In Order Traversal",
            "Post Order Traversal",
            "Level Order Traversal"
          ]
        }
      },
      "date": "19/11/2021",
      "important": "Simportant"
    },
    "Full Binary Tree": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Full Binary Tree",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Vertices :- 2k+1 for k internal vertices"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": "Important"
    },
    "Binary Tree": {
      "course": "CS1101S",
      "parents": [
        "Tree",
        "Searching"
      ],
      "topic": "Binary Tree",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Nodes have maximum two nodes, and all entries in the left branch are smaller than the entry"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/09/2021",
      "important": null
    },
    "Tree": {
      "course": "CS1231S",
      "parents": [
        "Graph Theory"
      ],
      "topic": "Tree",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Binary Tree",
            "Minimum Spanning Tree"
          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "Uniqueness Of Complement Law": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Uniqueness Of Complement Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA X₁,X₂ ⊆ A⋀Y₁,Y₂ ⊆ (U\\A) ⟹ X₁⋃Y₁ = X₂⋃Y₂ → (X₁,Y₁) = (X₂,Y₂) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": "Important"
    },
    "Split Set Law": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Split Set Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA S = (S⋂A)⋃(S\\A) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "Source Zipper": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Zipper",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "const zipper = (x, y) => x === null ? null : pair(pair(head(x), head(y)), zipper(tail(x), tail(y)));",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/11/2021",
      "important": null
    },
    "Source Merge B": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Merge B",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function mergeB(xs, ys) {",
            "   if (is null(xs) && is null(ys)) {",
            "       return null;",
            "   } else if (is null(xs) || head(ys) < head(xs)) {",
            "       set tail(ys, mergeB(xs, tail(ys)));",
            "       return ys;",
            "   } else {",
            "       set tail(xs, mergeB(tail(xs), ys));",
            "       return xs;",
            "   }",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/11/2021",
      "important": "Simportant"
    },
    "Liveability For People": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urbanisation Goals"
      ],
      "topic": "Liveability For People",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Each town should be self-sufficient"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/11/2021",
      "important": null
    },
    "Sustainability Of Land": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urbanisation Goals"
      ],
      "topic": "Sustainability Of Land",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Preserve historical buildings and heritage sites"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/11/2021",
      "important": null
    },
    "Basic Functions Of Land": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urbanisation Goals"
      ],
      "topic": "Basic Functions Of Land",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Need sufficient seafront area for harbour and port",
            "Need shorter buildings near airport",
            "Distance factories from residential areas"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/11/2021",
      "important": null
    },
    "Basic Needs Of People": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urbanisation Goals"
      ],
      "topic": "Basic Needs Of People",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Transport",
            "Safeguard nature reserves while improving open spaces and waterways",
            "Build houses for sale and not rent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/11/2021",
      "important": null
    },
    "Singapore Urbanisation Goals": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urban Planning History",
        "GESS1019"
      ],
      "topic": "Singapore Urbanisation Goals",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Basic Needs Of People",
            "Basic Functions Of Land",
            "Sustainability Of Land",
            "Liveability For People"
          ]
        }
      },
      "date": "18/11/2021",
      "important": null
    },
    "Development Guide Plan": {
      "course": "GESS1019",
      "parents": [
        "Development Control"
      ],
      "topic": "Development Guide Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Materialise 1991 concept plans for implementation",
            "Encourage public participation",
            "Focusses on separate areas",
            "Building height and land-use requirements",
            "Data Collection, Analysis, Outline plan, Draft, Statutory exhibition, Statutory master plan"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/11/2021",
      "important": null
    },
    "Replicable & Scalable Plan": {
      "course": "GESS1019",
      "parents": [
        "LKY World City Prize"
      ],
      "topic": "Replicable & Scalable Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "::New York",
            "3.8bill for renovating and creating new parks"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/11/2021",
      "important": null
    },
    "Creative & Innovative Plan": {
      "course": "GESS1019",
      "parents": [
        "LKY World City Prize"
      ],
      "topic": "Creative & Innovative Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "::Bilbao",
            "Arts as symbolic transformation of the city and tourism",
            "::Seoul",
            "Transition DongDaeMun into a cultural centre"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/11/2021",
      "important": null
    },
    "Integrable Plan": {
      "course": "GESS1019",
      "parents": [
        "LKY World City Prize"
      ],
      "topic": "Integrable Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "::NYC",
            "Mayor Bloomberg focused on improving infrastructure, redevelopment",
            "PlaNYC to address land, water, transport, energy, air issues",
            "::Seoul",
            "Collaborated with community and stakeholders",
            "Engaged the population with ground-up initiatives and gave 5% of city budget to public participatory planning"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/11/2021",
      "important": null
    },
    "Durable & Sustainable Plan": {
      "course": "GESS1019",
      "parents": [
        "LKY World City Prize"
      ],
      "topic": "Durable & Sustainable Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "::Bilbao",
            "Recovered valuable land along the river to transition into knowledge-based economy",
            "Improved infrastructure",
            "::Medellin",
            "Leaders dedicated to tackle deep-rooted problems in amenities",
            "Transport for the inaccessible places",
            "Social innovation",
            "Great reduction in murder rates"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/11/2021",
      "important": null
    },
    "LKY World City Prize": {
      "course": "GESS1019",
      "parents": [
        "Development Control"
      ],
      "topic": "LKY World City Prize",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Awards are given to cities which exemplify certain features",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Creative & Innovative Plan",
            "Replicable & Scalable Plan",
            "Durable & Sustainable Plan",
            "Integrable Plan"
          ]
        }
      },
      "date": "17/11/2021",
      "important": null
    },
    "Matlab Eigenspace": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Eigenspace",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Finds eigenspace associated to the λ",
            "<MA null(λ*eye() - A, 'r') MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/11/2021",
      "important": "Important"
    },
    "Matlab Eigenvalue": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Eigenvalue",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Finds the eigenvalues",
            "<MA eig() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/11/2021",
      "important": "Important"
    },
    "Matlab Solve Char Poly": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Solve Char Poly",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Solves the characteristic polynomial associated with the matrix",
            "<MA solve(charpoly(A, x)) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/11/2021",
      "important": "Important"
    },
    "Matlab Char Poly": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Char Poly",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Provides the characteristic polynomial associated with the matrix",
            "<MA charpoly() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/11/2021",
      "important": null
    },
    "Cheatsheet For PA": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Cheatsheet For PA",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "// put the first n elements of xs into a list",
            "function take(xs, n) {",
            "   return n === 0",
            "       ? null",
            "       : pair(head(xs), take(tail(xs), n-1));",
            "}",
            "",
            "// drop the first n elements from list, return rest",
            "function drop(xs, n) {",
            "   return n === 0",
            "       ? xs",
            "       : drop(tail(xs), n-1);",
            "}",
            "",
            "// given a non-empty list xs, returns the smallest item in xs",
            "function smallest(xs) {",
            "   return accumulate((x,y) => x <= y ? x : y, head(xs), xs);",
            "}",
            "",
            "// Removes the first instance of x from xs",
            "function remove(x, xs) {",
            "   return is null(xs)",
            "       ? null",
            "       : equal(head(xs), x) ? remove(null, tail(xs)) : pair(head(xs), remove(x, tail(xs)));",
            "}",
            "",
            "function selection sort(xs) {",
            "   if(is null(xs)) {",
            "       return null;",
            "   } else {",
            "       const x = smallest(xs);",
            "       return pair(x, selection sort(remove(x, xs)));",
            "   }",
            "}",
            "",
            "function search cond(A, cond) {",
            "   let i = 0;",
            "   while (true) {",
            "       if (A[i] === undefined) {",
            "           return -1;",
            "       } else if (cond(A[i])) {",
            "           return i;",
            "       } else {",
            "           i = i + 1;",
            "       }",
            "   }",
            "}",
            "",
            "function insert(A, pos, x) {",
            "   ",
            "   let i = pos;",
            "   let store = x;",
            "   if (A[pos] === undefined) {",
            "       A[pos] = x;",
            "   } else {",
            "       while (!is undefined(A[i])) {",
            "           display(A[i+1]);",
            "           let temp = A[i];",
            "           A[i] = store;",
            "           store = temp;",
            "           i = i + 1;",
            "       }",
            "       A[i] = store;",
            "   }",
            "}",
            "",
            "function insertion sort(A) {",
            "   let result = [A[0]];",
            "   let i = 1;",
            "   while (i < array length(A)) {",
            "       let pos = search cond(result, x => x >= A[i]);",
            "       if (pos === -1) {",
            "           pos = i;",
            "       }",
            "       display(A[i]);",
            "       display(result);",
            "       display(pos);",
            "       insert(result, pos, A[i]);",
            "       i = i + 1;",
            "   }",
            "   return result;",
            "   // display(search cond(result, x => x < 5));",
            "}",
            "",
            "function merge(xs, ys) {",
            "   if(is null(xs)) {",
            "       return ys;",
            "       ",
            "   } else if (is null(ys)) {",
            "       return xs;",
            "       ",
            "   } else {",
            "       const x = head(xs);",
            "       const y = head(ys);",
            "       return (x < y)",
            "           ? pair(x, merge(tail(xs), ys))",
            "           : pair(y, merge(xs, tail(ys)));",
            "       ",
            "   }",
            "}",
            "   ",
            "function merge sort(xs) {",
            "   if(is null(xs) || is null(tail(xs))) {",
            "       return xs;",
            "   } else {",
            "       const mid = math floor(length(xs)/2);",
            "       return merge(merge sort(take(xs, mid)), merge sort(drop(xs, mid)));",
            "   }",
            "}",
            "",
            "function array to stream(a) {",
            "   function iterator(i) {",
            "       return a[i] === undefined",
            "           ? null",
            "           : pair(a[i], () => iterator(i + 1));",
            "   }",
            "   return iterator(0);",
            "}",
            "",
            "function loop stream(s){",
            "   const start = s;",
            "   function helper(s){",
            "       if(is null(s)){",
            "           return pair(head(start),()=>helper(stream tail(start)));",
            "       }else{",
            "           return pair(head(s),()=>helper(stream tail(s)));",
            "       }",
            "   }",
            "   return helper(s);",
            "}",
            "",
            "function accumulate tree(f1, f2, initial, tree) {",
            "   if (is null(tree)) {",
            "       return initial;",
            "   } else {",
            "       const head acc = is list(head(tree))",
            "           ? accumulate tree(f1, f2, initial, head(tree))",
            "           : f1(head(tree));",
            "       ",
            "       const rest acc = accumulate tree(f1, f2, initial, tail(tree));",
            "       return f2(head acc, rest acc);",
            "   }",
            "}",
            "",
            "const mem = [];",
            "",
            "function read(n, k) {",
            " return mem[n] === undefined",
            "   ? undefined",
            "   : mem[n][k];",
            "}",
            "function write(n, k, value) {",
            " if (mem[n] === undefined) {",
            "   mem[n] = [];",
            " }",
            " mem[n][k] = value;",
            "}",
            "",
            "function stream map(f, s) {",
            " return is null(s)",
            "   ? null",
            "   : pair(f(head(s)),",
            "     () => stream map(f, stream tail(s)));",
            "}",
            "",
            "function stream filter(p, s) {",
            " return is null(s)",
            "   ? null",
            "   : p(head(s))",
            "   ? pair(head(s),",
            "     () => stream filter(p, stream tail(s)))",
            "   : stream filter(p, stream tail(s));",
            "}",
            "",
            "function enum stream(low, hi) {",
            " return low > hi ",
            "   ? null",
            "   : pair(low,",
            "     () => enum stream(low + 1, hi));",
            "}",
            "",
            "function add streams(s1, s2) {",
            " if (is null(s1)) {",
            "   return s2;",
            " } else if (is null(s2)) {",
            "   return s1;",
            " } else {",
            "   return pair(head(s1) + head(s2),",
            "     () => add streams(stream tail(s1),",
            "       stream tail(s2)));",
            "}",
            "}",
            "",
            "const ones = pair(1, () => ones);",
            "const integers =",
            " pair(1, () => add streams(ones, integers));",
            " ",
            "function fibgen(a, b) {",
            " return pair(a, () => fibgen(b, a + b));",
            "}",
            "",
            "function memo max flies to eat(tile flies) {",
            "   ",
            "   const height = array length(tile flies);",
            "   const width = array length(tile flies[0]);",
            "   ",
            "   function max bottom(r, c) {",
            "       if (c < 0 || c > width - 1) {",
            "           return 0;",
            "       } else if (r === height - 1) {",
            "           write(r, c, tile flies[r][c]);",
            "           return tile flies[r][c];",
            "       } else if (read(r, c) !== undefined) {",
            "           return read(r, c);",
            "       } else {",
            "           const result = tile flies[r][c] + math max(max bottom(r + 1, c - 1), max bottom(r + 1, c), max bottom(r + 1, c + 1));",
            "           write(r, c, result);",
            "           return result;",
            "       }",
            "   }",
            "   let best = 0;",
            "   for (let c = 0; c < width; c = c + 1) {",
            "       best = math max(best, max bottom(0, c));",
            "   }",
            "   return best;",
            "}",
            "",
            "function zip streams(s1, s2) {",
            "",
            "   return pair(head(s1), () => pair(head(s2), () => zip streams(tail(s1)(), tail(s2)())));",
            "",
            "}",
            "",
            "merge sort(list(4,6,2,1,8,5));",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/11/2021",
      "important": null
    },
    "Group": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Group",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Obeys /Closure Law",
            "Obeys /Associative Law",
            "Obeys /Identity Law",
            "Has an /Inverse Statement"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/11/2021",
      "important": null
    },
    "Surface Area Of Revolution": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Surface Area Of Revolution",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA 2πʃy√(1 + y')dx MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/11/2021",
      "important": null
    },
    "Arc Length": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Arc Length",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ʃ√(1 + y')dx MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/11/2021",
      "important": null
    },
    "Volume Of Revolution (Shell)": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Volume Of Revolution (Shell)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA 2πʃxydx MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/11/2021",
      "important": null
    },
    "Volume Of Revolution (Disc)": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Volume Of Revolution (Disc)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA πʃy²dx MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/11/2021",
      "important": null
    },
    "Elementary Matrix": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Elementary Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R₃ + 2R₁ means 3rd row, 1st column is 2",
            "Invert means 3rd row, 1st column is -2"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/11/2021",
      "important": null
    },
    "Block Matrix Multiplication": {
      "course": "MA2001",
      "parents": [
        "Matrix Multiplication"
      ],
      "topic": "Block Matrix Multiplication",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A(B₁ B₂) = (AB₁ AB₂) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/11/2021",
      "important": null
    },
    "Kernel (LT)": {
      "course": "MA2001",
      "parents": [
        "Linear Transformation"
      ],
      "topic": "Kernel (LT)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Ker(T) is the set of all vectors whose images are 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/11/2021",
      "important": null
    },
    "Range (LT)": {
      "course": "MA2001",
      "parents": [
        "Linear Transformation"
      ],
      "topic": "Range (LT)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "R(T) is the set of all possible images of T"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/11/2021",
      "important": null
    },
    "Linear Transformation": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Linear Transformation",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "::T is a linear transformation",
            "T(0) = 0",
            "T(u + v)  = T(u) + T(v)",
            "cT(u) = T(cu)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "A(u₁) = v₁, A(u₂) = v₂, A(u₃) = v₃ ⟹ A = (v₁ v₂ v₃)(u₁ u₂ u₃)⁻¹",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Range (LT)",
            "Kernel (LT)"
          ]
        }
      },
      "date": "06/11/2021",
      "important": "Important"
    },
    "Serialisation": {
      "course": "CS1101S",
      "parents": [
        "Concurrent Programming"
      ],
      "topic": "Serialisation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Used to constrain the code to behave properly",
            "Functions within the same serialisation must be sequential"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/11/2021",
      "important": null
    },
    "Concurrent Programming": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Concurrent Programming",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Two threads happening at the same time",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Serialisation"
          ]
        }
      },
      "date": "03/11/2021",
      "important": null
    },
    "Pubilc Transport Business Model": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Pubilc Transport Business Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Operators pay annual license charges and have to follow Asset Management Requirements",
            "Lower the barriers to entry",
            "Operators can focus on the operating side",
            "Pubilc Transport Council to conduct fare review"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "Singapore Transport Policies": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Singapore Transport Policies",
      "contents": {
        "Policies": {
          "section": "Policies",
          "index": 0,
          "points": [
            "Vehicle Quota System 1990",
            "ERP 1998 (Gantries, flexible, equitable)",
            "Congestion Pricing Scheme 1975 (Pay after entering zone)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "Land Use Issues": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Land Use Issues",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Trilemma between quality, affordability, profitability",
            "Mismatch of future supply-demand",
            "Car-ownership aspirations",
            "Legitimate use of nature reserves"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "Healthy Lives Safer Journeys": {
      "course": "GESS1019",
      "parents": [
        "LTA Land Transport Master Plan 2040"
      ],
      "topic": "Healthy Lives Safer Journeys",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Community spaces",
            "Smart technology",
            "Noise barriers",
            "Environment technologies",
            "Reduce accidents"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "Transport For All": {
      "course": "GESS1019",
      "parents": [
        "LTA Land Transport Master Plan 2040"
      ],
      "topic": "Transport For All",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Developing transport worker skills",
            "Infrastructure for barrier-free travel",
            "Caring community culture",
            "Meet diverse needs"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "20 Min Town 45 Min City": {
      "course": "GESS1019",
      "parents": [
        "LTA Land Transport Master Plan 2040"
      ],
      "topic": "20 Min Town 45 Min City",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Seamless multi-modal travel",
            "Spread out amenities",
            "Bring jobs to home",
            "Prioritise public transport"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "LTA Land Transport Master Plan 2040": {
      "course": "GESS1019",
      "parents": [
        "Transport Planning"
      ],
      "topic": "LTA Land Transport Master Plan 2040",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "2018 set up an advisory panel and launched engagement exercise to get feedback",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Make \"Walk Cycle Ride\" as the go to way to travel (comfort, choice, speed)",
            "Make that more inclusive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "20 Min Town 45 Min City",
            "Transport For All",
            "Healthy Lives Safer Journeys"
          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "Singapore Land Transport Plan": {
      "course": "GESS1019",
      "parents": [
        "Transport Planning"
      ],
      "topic": "Singapore Land Transport Plan",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "MND Land Use Plan (2030)"
          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [
            "Expand road network but invest in public transport",
            "Achieve doubling of rail network to 10 min walk from MRT station",
            "CRL, JRL",
            "More bus routes",
            "Sheltered walkways",
            "Integrated transport hubs (Fairprice Hub, Bedok Mall, Northpoint, Jurong Point)",
            "Cycling paths",
            "Barrier-free transport system for seniors & disabled",
            "Achieve 75% public transport share by 2030"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/11/2021",
      "important": null
    },
    "Orthogonal Coordinate Vector": {
      "course": "MA2001",
      "parents": [
        "Orthogonal",
        "Coordinate Vector"
      ],
      "topic": "Orthogonal Coordinate Vector",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (w)s = (w⋅u₁/||u₁||²  w⋅u₂/||u₂||²  w⋅u₃/||u₃||² ...) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/10/2021",
      "important": "Important"
    },
    "Orthogonal Transition Matrix": {
      "course": "MA2001",
      "parents": [
        "Orthogonal",
        "Transition Matrix"
      ],
      "topic": "Orthogonal Transition Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The transition matrix P from orthonormal S to T is orthogonal and Pᵀ is the transition matrix from T to S",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "<MA v₁ = ∑(v₁⋅uᵢ)uᵢ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/10/2021",
      "important": null
    },
    "Matrix Multiplication": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Matrix Multiplication",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A(u₁ u₂ ... uₙ) = (Au₁ Au₂ ... Auₙ)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Block Matrix Multiplication"
          ]
        }
      },
      "date": "31/10/2021",
      "important": "Important"
    },
    "Adjacency Matrix": {
      "course": "CS1231S",
      "parents": [
        "Graph Theory",
        "Matrices"
      ],
      "topic": "Adjacency Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Matrix that contains all the connections between vertices",
            "Can be squared to find all connections of degree 2 (path length 2)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Number of walks of length n from i to j :- Aⁿ(i,j) "
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": "Important"
    },
    "Subgraph Of Hamiltonian Circuit": {
      "course": "CS1231S",
      "parents": [
        "Hamiltonian Circuit"
      ],
      "topic": "Subgraph Of Hamiltonian Circuit",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Contains every vertex in G",
            "Is connected",
            "Has the same number of vertices and edges",
            "Vertices have degree 2"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Hamiltonian Circuit": {
      "course": "CS1231S",
      "parents": [
        "Graph"
      ],
      "topic": "Hamiltonian Circuit",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "All vertices are visited once in a return trip",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Subgraph Of Hamiltonian Circuit"
          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Euler Path": {
      "course": "CS1231S",
      "parents": [
        "Graph"
      ],
      "topic": "Euler Path",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "All but two vertices have even edges",
            "All edges are used once in a non-return trip"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Euler Circuit": {
      "course": "CS1231S",
      "parents": [
        "Graph"
      ],
      "topic": "Euler Circuit",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "All vertices have even edges",
            "All edges are used once in a return trip"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Graph": {
      "course": "CS1231S",
      "parents": [
        "Graph Theory"
      ],
      "topic": "Graph",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Euler Circuit",
            "Euler Path",
            "Hamiltonian Circuit"
          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Graph Theory": {
      "course": "CS1231S",
      "parents": [
        "CS1231S"
      ],
      "topic": "Graph Theory",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Graph",
            "Adjacency Matrix",
            "Tree",
            "Handshake Theorem",
            "Kruskal's Algorithm",
            "Prim's Algorithm"
          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Best Approximation": {
      "course": "MA2001",
      "parents": [
        "Projection"
      ],
      "topic": "Best Approximation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The projection of u onto W is the best approximation of u in W"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": "Important"
    },
    "Stochastic Matrix": {
      "course": "MA2001",
      "parents": [
        "Orthogonally Diagonalisable Matrix"
      ],
      "topic": "Stochastic Matrix",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Represent probability of events occurring",
            "Used to model long-term effects",
            ""
          ],
          "sublinks": [

          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 4,
          "points": [
            "Sum along every column is equal to 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Orthogonal Diagonalisation": {
      "course": "MA2001",
      "parents": [
        "Diagonalisation"
      ],
      "topic": "Orthogonal Diagonalisation",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Orthogonally diagonalise nxn matrix",
            "Make characteristic polynomial",
            "Find distinct eigenvalues",
            "Find eigenspaces",
            "Find bases for eigenspaces",
            "Do /Gram Schmidt Process",
            "(v₁ v₂ ... vₙ) is the orthogonal matrix"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Orthogonally Diagonalisable Matrix": {
      "course": "MA2001",
      "parents": [
        "Diagonalisable Matrix"
      ],
      "topic": "Orthogonally Diagonalisable Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Orthogonal matrix P exists such that PᵀAP is diagonal",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Symmetric ⟺ orthogonally diagonalisable",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Stochastic Matrix"
          ]
        }
      },
      "date": "29/10/2021",
      "important": "Important"
    },
    "Diagonalisable Matrix": {
      "course": "MA2001",
      "parents": [
        "Diagonalisation",
        "Symmetric Matrix",
        "Matrices"
      ],
      "topic": "Diagonalisable Matrix",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "::A has n linearly independent eigenvectors",
            "∑dimEᵢ = n",
            "dimEᵢ = multiplicity of eigenvalue for every eigenvalue of A",
            "Symmetric",
            "Eigenvalues are distinct and full",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Orthogonally Diagonalisable Matrix"
          ]
        }
      },
      "date": "29/10/2021",
      "important": "Important"
    },
    "Eigenspace": {
      "course": "MA2001",
      "parents": [
        "Diagonalisation"
      ],
      "topic": "Eigenspace",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Dimension :- dimension of eigenspace ≤ multiplicity (power of eigenvalue in characteristic equation)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Diagonalisation": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Diagonalisation",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Eigenspace",
            "Diagonalisable Matrix",
            "Orthogonal Diagonalisation"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 5,
          "points": [
            "::Diagonalise an nxn matrix",
            "Make characteristic polynomial",
            "Find eigenvalues",
            "Find eigenspaces",
            "Find bases for eigenspaces"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "29/10/2021",
      "important": null
    },
    "Transport Planning": {
      "course": "GESS1019",
      "parents": [
        "GESS1019"
      ],
      "topic": "Transport Planning",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Traffic: focus on road capacity",
            "Mobility: focus on movement of people and goods",
            "Accessibility: focus on opportunities",
            "Activity: why people go to places",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 6,
          "points": [
            "Trip generation (Internal, External)² (Listing and estimating the connections)",
            "Trip distribution (Residential, Industrial, Commercial)² (Volume of connections)",
            "Modal split (Bus, Train, Both)",
            "Trip assignment (Find the least cost way to allocate resources)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 12,
          "points": [

          ],
          "sublinks": [
            "Singapore Land Transport Plan",
            "LTA Land Transport Master Plan 2040"
          ]
        }
      },
      "date": "25/10/2021",
      "important": "Important"
    },
    "Lagrange Multiplier": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Lagrange Multiplier",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find the maximum value of ƒ when travelling across 𝒈",
            "Let ƒ, 𝒈 be continuous and differentiable, and 𝒈(a, b) = 0",
            "Then, (𝒈ₓ(a, b), 𝒈ᵧ(a, b)) ≠ (0, 0) ⟹ (ƒₓ(a, b), ƒᵧ(a, b)) = λ(𝒈ₓ(a, b), 𝒈ᵧ(a, b))",
            "Sub into 𝒈 to solve for λ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": "Important"
    },
    "Pascal Formula": {
      "course": "CS1231S",
      "parents": [
        "Choose Formulas"
      ],
      "topic": "Pascal Formula",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "C(n+1,k) = C(n,k-1) + C(n,k)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": null
    },
    "Unordered Choose Wout Repetition": {
      "course": "CS1231S",
      "parents": [
        "Choose Formulas"
      ],
      "topic": "Unordered Choose Wout Repetition",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "C(n, k)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": null
    },
    "Unordered Choose With Repetition": {
      "course": "CS1231S",
      "parents": [
        "Choose Formulas"
      ],
      "topic": "Unordered Choose With Repetition",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "C(k + n - 1, k)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": null
    },
    "Ordered Choose Wout Repetition": {
      "course": "CS1231S",
      "parents": [
        "Choose Formulas"
      ],
      "topic": "Ordered Choose Wout Repetition",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "P(n, k)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": null
    },
    "Ordered Choose With Repetition": {
      "course": "CS1231S",
      "parents": [
        "Choose Formulas"
      ],
      "topic": "Ordered Choose With Repetition",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "nᵏ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": null
    },
    "Choose Formulas": {
      "course": "CS1231S",
      "parents": [
        "Counting"
      ],
      "topic": "Choose Formulas",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Ordered Choose With Repetition",
            "Ordered Choose Wout Repetition",
            "Unordered Choose With Repetition",
            "Unordered Choose Wout Repetition",
            "Pascal Formula"
          ]
        }
      },
      "date": "22/10/2021",
      "important": "Important"
    },
    "Orthonormal Transition Matrix": {
      "course": "MA2001",
      "parents": [
        "Transition Matrix"
      ],
      "topic": "Orthonormal Transition Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "S = {u₁, u₂, ..., uₙ} and T = {v₁, v₂, ..., vₙ} are bases for ℝⁿ",
            "Orthonormal S and Standard T ⟹ P = (u₁ u₂... uₙ)",
            "Standard S and Orthonormal T ⟹ P = (v₁; v₂;...vₙ)",
            "Orthonormal S and Orthonormal P = B⁻¹A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": "Important"
    },
    "Orthogonal Matrix": {
      "course": "MA2001",
      "parents": [
        "Orthogonal",
        "Matrices"
      ],
      "topic": "Orthogonal Matrix",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "A⁻¹ = Aᵀ",
            "AAᵀ = I",
            "Aᵀ is orthogonal",
            "rows of A are an orthonormal basis for ℝⁿ",
            "columns of A are an orthonormal basis for ℝⁿ",
            "||u|| = ||Au||",
            "||u - v|| = ||Au - Av||",
            "Angle between u and v = Angle between Au and Av",
            "Norm, distance and angles are preserved",
            "Basis, Orthogonal basis and Orthonormal basis are preserved"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": "Simportant"
    },
    "Least Squares Solution": {
      "course": "MA2001",
      "parents": [
        "Projection"
      ],
      "topic": "Least Squares Solution",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "u is the best approximate solution to Ax = b",
            "u is a solution to AᵀAx = Aᵀb",
            "u is a solution to Ax = p, projection of b onto column space of A",
            "u is unique or infinite",
            "Minimises ||b - Ax||"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "22/10/2021",
      "important": "Important"
    },
    "Source Enum Stream": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Enum Stream",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function enum stream(low, hi) {",
            " return low > hi ",
            "   ? null",
            "   : pair(low,",
            "     () => enum stream(low + 1, hi));",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Source Stream Filter": {
      "course": "CS1101S",
      "parents": [
        "Source Stream",
        "Source Stream Functions"
      ],
      "topic": "Source Stream Filter",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function stream filter(p, s) {",
            " return is null(s)",
            "   ? null",
            "   : p(head(s))",
            "   ? pair(head(s),",
            "     () => stream filter(p, stream tail(s)))",
            "   : stream filter(p, stream tail(s));",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Source Stream Map": {
      "course": "CS1101S",
      "parents": [
        "Source Stream Functions"
      ],
      "topic": "Source Stream Map",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function stream map(f, s) {",
            " return is null(s)",
            "   ? null",
            "   : pair(f(head(s)),",
            "     () => stream map(f, stream tail(s)));",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Boundary (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Boundary (2D)",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Sub in the equation for the boundary, then find the critical point using one variable"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Minimum Point (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Minimum Point (2D)",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Second Derivative Test :- ƒₓₓƒᵧᵧ - ƒₓᵧ² > 0 and ƒₓₓ > 0",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "::Find minimum point",
            "Find interior critical points using ƒₓ and ƒᵧ",
            "Find boundary critical points by subbing in (x, 9-x) for y = 9 - x"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Maximum Point (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Maximum Point (2D)",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Second Derivative Test :- ƒₓₓƒᵧᵧ - ƒₓᵧ² > 0 and ƒₓₓ < 0",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "::Find maximum point",
            "Find interior critical points using ƒₓ and ƒᵧ",
            "Find boundary critical points by subbing in (x, 9-x) for y = 9 - x"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Saddle Point (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Saddle Point (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Critical point with some neighbours more than it and some neighbours less than it",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Second Derivative Test :- ƒₓₓƒᵧᵧ - ƒₓᵧ² < 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Rate Of Change (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Rate Of Change (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "dƒ/dt = (∂ƒ/∂x)(dx/dt) + (∂ƒ/∂y)(dy/dt)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": "Important"
    },
    "Continuous (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Continuous (2D)",
      "contents": {
        "Proof": {
          "section": "Proof",
          "index": 0,
          "points": [
            "Prove that ƒₓ and ƒᵧ is continuous"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Clairaut's Theorem": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Clairaut's Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒₓᵧ = ƒᵧₓ iff continuous"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Subset": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Subset",
      "contents": {
        "Proof": {
          "section": "Proof",
          "index": 0,
          "points": [
            "::Prove A is a subset of B",
            "∀x ∈ A (x ∈ B) ⟹ A ⊆ B"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Well Defined (Function)": {
      "course": "CS1231S",
      "parents": [
        "Function Correspondence"
      ],
      "topic": "Well Defined (Function)",
      "contents": {
        "Proof": {
          "section": "Proof",
          "index": 0,
          "points": [
            "::Prove that a function is well defined",
            "Some outputs are out of range, or some inputs don't have exactly one output"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Source Integer Stream": {
      "course": "CS1101S",
      "parents": [
        "Source Stream Functions"
      ],
      "topic": "Source Integer Stream",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "const ones = pair(1, () => ones);",
            "const integers =",
            " pair(1, () => add streams(ones, integers));",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Source Fibonacci Stream": {
      "course": "CS1101S",
      "parents": [
        "Source Stream Functions"
      ],
      "topic": "Source Fibonacci Stream",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "const fibs =",
            " pair(0,",
            "   () => pair(1,",
            "     () => add streams(",
            "       stream tail(fibs),",
            "       fibs)));",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Source Add Streams": {
      "course": "CS1101S",
      "parents": [
        "Source Stream Functions"
      ],
      "topic": "Source Add Streams",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function add streams(s1, s2) {",
            " if (is null(s1)) {",
            "   return s2;",
            " } else if (is null(s2)) {",
            "   return s1;",
            " } else {",
            "   return pair(head(s1) + head(s2),",
            "     () => add streams(stream tail(s1),",
            "       stream tail(s2)));",
            " }",
            "}",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Environment Model": {
      "course": "CS1101S",
      "parents": [
        "Programming Model"
      ],
      "topic": "Environment Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Create function objects for all functions, including λ expressions",
            "Evaluate arguments before actual call",
            "Primitive values dont have identity, so write them into frames",
            "If binding for primitive value is the result of a function call, then compute the function call and put it into the frames",
            "Primitive functions don't create new frames or environments, while predeclared functions (map, accumulate etc) are, so put them into the global environment frame",
            "Separate frames for parameter bindings and body blocks",
            "No empty frames (without new bindings)",
            "Start pointers from within eyeballs / boxes",
            "Arrays and loops are represented as boxes and pointers",
            "Every iteration in the loop should be another parameter box, and make sure to increment where necessary",
            "Function calls should all be in separate frames, even when duplicate",
            "Create new function objects if the functions are declared not within the global env",
            "Λ functions should point to the program env by default, and if repeatedly used, only one is created",
            "Variables used within λ functions are susceptible to change (x => x + i will change if i changes)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/10/2021",
      "important": "Important"
    },
    "Built Heritage": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Built Heritage",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Incremental and integrated approach is needed to improve and build upon what is already there;",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "National identity",
            "Urban design & appreciation of tradititional forms",
            "Tourism & economy"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/10/2021",
      "important": null
    },
    "Conservation Area Selection Stage 2": {
      "course": "GESS1019",
      "parents": [
        "Conservation Area Selection"
      ],
      "topic": "Conservation Area Selection Stage 2",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Determine if building qualifies as a national monument"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/10/2021",
      "important": null
    },
    "Conservation Area Selection Stage 1": {
      "course": "GESS1019",
      "parents": [
        "Conservation Area Selection"
      ],
      "topic": "Conservation Area Selection Stage 1",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Architectural merits (representativeness, aesthetic, creative or technical qualities)",
            "Historical & Social significance (important to culture, association with event or development)",
            "Age (before 1960, example of prominent builder or architect)",
            "Rarity (demonstration of distinctive design)",
            "Contribution to environment (cheerleader effect, harmonious design)",
            "Economic impact"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/10/2021",
      "important": null
    },
    "Conservation Area Selection": {
      "course": "GESS1019",
      "parents": [
        "Heritage Area"
      ],
      "topic": "Conservation Area Selection",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Done by URA (found on URA Space)",
            "So far 7000 buildings in 100 areas are conserved",
            "Made up of an area, a single building, or a group of buildings",
            ""
          ],
          "sublinks": [

          ]
        },
        "Stages": {
          "section": "Stages",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Conservation Area Selection Stage 1",
            "Conservation Area Selection Stage 2"
          ]
        }
      },
      "date": "18/10/2021",
      "important": null
    },
    "3R Conservation Guidelines": {
      "course": "GESS1019",
      "parents": [
        "Heritage Area"
      ],
      "topic": "3R Conservation Guidelines",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Maximum retention",
            "Sensitive restoration",
            "Careful repair"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/10/2021",
      "important": null
    },
    "Heritage Area": {
      "course": "GESS1019",
      "parents": [
        "Cities Of Change",
        "Development Control"
      ],
      "topic": "Heritage Area",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Personal image of time is crucial for individual well-being",
            "Desirable image of the city is one that \"celebrates and enlarges the present\" while making \"connections with past and future\"",
            ""
          ],
          "sublinks": [
            "Conservation Area Selection",
            "3R Conservation Guidelines"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 6,
          "points": [
            "Kevin Lynch (1972) \"What Time is This Place:",
            "Historic Districts (Boat Quay, Chinatown, Kampong Glam, Little India)",
            "Residential historic districts (Cairnhill, Emerald Hill)",
            "Secondary settlements (Beach Rd, Geylang, Jalan Besar, Joo Chiat, River Valley) (Building height is capped)",
            "Bungalow areas"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/10/2021",
      "important": null
    },
    "Matlab Orthonormal Of Column Space": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Orthonormal Of Column Space",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA orth(V) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/10/2021",
      "important": "Matlab"
    },
    "Matlab Dot Product": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Dot Product",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA dot(u, v) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/10/2021",
      "important": "Matlab"
    },
    "Matlab Length": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Length",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA norm() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/10/2021",
      "important": "Matlab"
    },
    "Partial Derivative": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Partial Derivative",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ƒₓ(x₀, y₀) = (∂f / ∂x)(x₀, y₀) = lim[h→0](ƒ(x₀+h, y₀) - ƒ(x₀, y₀) / h) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Partial derivatives may exist even if the function is not continuous, as long as the x and y directions are both continuous"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": "Important"
    },
    "Limit (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Limit (2D)",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Use substitution",
            "Use composite functions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Precise Definition Of Limit (2D)": {
      "course": "MA1521",
      "parents": [
        "Multivariable Calculus"
      ],
      "topic": "Precise Definition Of Limit (2D)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The limit at a point (x₀, y₀) exists if ∃𝛿,ε such that √(x-x₀)² + (y-y₀)² < 𝛿 ⟹ |ƒ(x,y) - L| < ε"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Multivariable Calculus": {
      "course": "MA1521",
      "parents": [
        "MA1521"
      ],
      "topic": "Multivariable Calculus",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Precise Definition Of Limit (2D)",
            "Limit (2D)",
            "Partial Derivative",
            "Clairaut's Theorem",
            "Continuous (2D)",
            "Rate Of Change (2D)",
            "Saddle Point (2D)",
            "Maximum Point (2D)",
            "Minimum Point (2D)",
            "Boundary (2D)",
            "Lagrange Multiplier"
          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Cardinality Of Tuples": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Cardinality Of Tuples",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Countable infinite × countable infinite = countable infinite",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 3,
          "points": [
            "::Prove the set of ℚ is countable",
            "Convert into 2D coordinate system, and enumerate using ℤ≥0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Uncountable ℘": {
      "course": "CS1231S",
      "parents": [
        "Cardinality"
      ],
      "topic": "Uncountable ℘",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A countable infinite ⟹ ℘(A) uncountable (use the ℝ proof of uncountability)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": "Important"
    },
    "Orthogonal Vector": {
      "course": "MA2001",
      "parents": [
        "Orthogonal"
      ],
      "topic": "Orthogonal Vector",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Convert into homogenous system with ∑v⋅uᵢ = 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": "Important"
    },
    "Dot Product": {
      "course": "MA2001",
      "parents": [
        "Vector Operations"
      ],
      "topic": "Dot Product",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA u⋅v = uvᵀ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Gram Schmidt Process": {
      "course": "MA2001",
      "parents": [
        "Orthogonal"
      ],
      "topic": "Gram Schmidt Process",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find first 3 vectors in Orthogonal Basis",
            "v₁ = u₁",
            "v₂ = u₂ - (u₂⋅v₁)v₁/||v₁||²",
            "v₃ = u₃ - (u₃⋅v₁)v₁/||v₁||² - (u₃⋅v₂)v₂/||v₂||²"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": "Important"
    },
    "Orthonormal Basis": {
      "course": "MA2001",
      "parents": [
        "Orthogonal Basis"
      ],
      "topic": "Orthonormal Basis",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Coordinate vector :- S = {u₁, u₂, u₃} is an orthonormal basis for W ⟹ (w)s = (w⋅u₁ w⋅u₂ w⋅u₃)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Orthogonal Basis": {
      "course": "MA2001",
      "parents": [
        "Orthogonal"
      ],
      "topic": "Orthogonal Basis",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "For a basis {u₁, u₂}, find the projection of u₂ onto u₁, then u₂ - p is the orthogonal",
            "To add another vector u₃, apply the same operation to find projection, then u₃ - p;",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Orthonormal Basis"
          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Projection": {
      "course": "MA2001",
      "parents": [
        "Orthogonal"
      ],
      "topic": "Projection",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Subspace :- w ∈ V ⟹ projᵥw is just w",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "::Find projection from basis",
            "S = {u₁, u₂, ..., uₖ}: orthogonal basis for V",
            "projᵥw: p = (w⋅u₁)u₁/||u₁||² + (w⋅u₂)u₂/||u₂||² + ... + (w⋅uₖ)uₖ/||uₖ||²",
            "",
            "::Find projection of w onto V",
            "Form matrix A using column space of V",
            "Find least squares solution to Ax = w",
            "Find any solutions to AᵀAx = Aᵀw",
            "Au gives the projection of w onto V\"",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 14,
          "points": [
            "Need to show w-p is orthogonal to each vector in V",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 17,
          "points": [

          ],
          "sublinks": [
            "Least Squares Solution",
            "Best Approximation"
          ]
        }
      },
      "date": "15/10/2021",
      "important": "Important"
    },
    "Source Stream": {
      "course": "CS1101S",
      "parents": [
        "Source Stream Functions"
      ],
      "topic": "Source Stream",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Streams allow you to create infinite data structures, just by designing a pattern for them",
            "From a regular recursive call, just add () => in front of it",
            "Use tail(stream)() to evaluate the tail of the pair",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code": {
          "section": "Code",
          "index": 5,
          "points": [
            "<JV",
            "pair(1, () => ...);",
            "?> Source Stream Map",
            ""
          ],
          "sublinks": [
            "Source Stream Filter"
          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 11,
          "points": [
            "function ones stream() {",
            "   return pair(1, ones stream);",
            "}"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": "Important"
    },
    "Orthogonal Set": {
      "course": "MA2001",
      "parents": [
        "Orthogonal"
      ],
      "topic": "Orthogonal Set",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "S is orthogonal set of nonzero vectors ⟹ S is linearly independent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Vector Angle": {
      "course": "MA2001",
      "parents": [
        "Vector Operations"
      ],
      "topic": "Vector Angle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA cos⁻¹(u⋅v / ||u||||v||) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Vector Operations": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Vector Operations",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Vector Angle",
            "Dot Product"
          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Orthogonal": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Orthogonal",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Orthogonal Set",
            "Orthogonal Matrix",
            "Orthogonal Basis",
            "Orthogonal Vector",
            "Projection",
            "Gram Schmidt Process",
            "Orthogonal Transition Matrix",
            "Orthogonal Coordinate Vector"
          ]
        },
        "Process": {
          "section": "Process",
          "index": 10,
          "points": [
            "p is projᵥu ⟹ u - p is vector orthogonal to V"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/10/2021",
      "important": null
    },
    "Full Rank": {
      "course": "MA2001",
      "parents": [
        "Rank"
      ],
      "topic": "Full Rank",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "rank(A) = min{m, n} is full rank"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/10/2021",
      "important": "Important"
    },
    "Subsets Of Infinite Sets": {
      "course": "CS1231S",
      "parents": [
        "Cardinality"
      ],
      "topic": "Subsets Of Infinite Sets",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Any subset of a countable set is countable ⟺ any superset of an uncountable set is uncountable"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/10/2021",
      "important": null
    },
    "Countably Infinite": {
      "course": "CS1231S",
      "parents": [
        "Cardinality"
      ],
      "topic": "Countably Infinite",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Countable if its cardinality is the same as ℤ≥0",
            "Infinite set B is countable iff there is a sequence b₀, b₁, b₂,... ∈ B where every element of B appears exactly once",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/10/2021",
      "important": null
    },
    "Bijection": {
      "course": "CS1231S",
      "parents": [
        "Cardinality"
      ],
      "topic": "Bijection",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A → B is bijective ⟺ |A| = |B|",
            "COUNTING IS A BIJECTION",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "::Prove a mapping is a bijection",
            "Prove the mapping function is well defined, injective, surjective"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/10/2021",
      "important": "Important"
    },
    "Dual Pigeonhole Principle": {
      "course": "CS1231S",
      "parents": [
        "Pigeonhole Principle"
      ],
      "topic": "Dual Pigeonhole Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If ƒ : A → B is surjective, then |A| ≥ |B|"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "14/10/2021",
      "important": "Important"
    },
    "Pigeonhole Principle": {
      "course": "CS1231S",
      "parents": [
        "Cardinality"
      ],
      "topic": "Pigeonhole Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If there are m pigeons and n holes, then there must be a hole with 2 pigeons",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Dual Pigeonhole Principle"
          ]
        }
      },
      "date": "14/10/2021",
      "important": null
    },
    "Cardinality": {
      "course": "CS1231S",
      "parents": [
        "Cardinality (MA)",
        "CS1231S"
      ],
      "topic": "Cardinality",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Pigeonhole Principle",
            "Bijection",
            "Countably Infinite",
            "Subsets Of Infinite Sets",
            "Uncountable ℘"
          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 7,
          "points": [
            "Preserved under union",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 10,
          "points": [
            "::Prove countability of A and B if A ⊆ B",
            "B countable ⟹ A countable",
            "A uncountable ⟹ B uncountable"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Order (Function)": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Order (Function)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Smallest number of times a function needs to be repeated to achieve the original inputs"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Memoization": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Memoization",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Store your previous results when doing recursion",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code <JV": {
          "section": "Code ",
          "index": 3,
          "points": [
            "function read(n, k) {",
            " return mem[n] === undefined",
            "   ? undefined",
            "   : mem[n][k];",
            "}",
            "function write(n, k, value) {",
            " if (mem[n] === undefined) {",
            "   mem[n] = [];",
            " }",
            " mem[n][k] = value;",
            "}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 17,
          "points": [
            "For multivariable parameters, can just count the number of options available, so it's usually θ(nk) for parameters n and k for both runtime and space"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Preimage (Function)": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Preimage (Function)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Y ⊆ B ⟹ ƒ⁻¹(Y) = {x ∈ A : ƒ(x) ∈ Y } MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Image (Function)": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Image (Function)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA X ⊆ A ⟹ ƒ(X) = {ƒ(x): x ∈ X} MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Function Equality": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Function Equality",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒ = 𝒈 iff domains and codomains are the same and ƒ(x) = 𝒈(x)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 3,
          "points": [
            "::Prove functions are equal",
            "Prove domain, range and values of ƒ and 𝒈 are the same"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Bijective": {
      "course": "CS1231S",
      "parents": [
        "Function Correspondence"
      ],
      "topic": "Bijective",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "∀y ∈ B ∃!x ∈ A (y = ƒ(x))",
            "Everyone in B has one partner",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "::Prove function is bijective",
            "Prove /Surjective and /Injective"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Injective": {
      "course": "CS1231S",
      "parents": [
        "Function Correspondence"
      ],
      "topic": "Injective",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∀x₁, x₂ ∈ A (ƒ(x₁) = ƒ(x₂) ⇒ x₁ = x₂) MA>",
            "Nobody in B is F-boy",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "::Prove function is injective",
            "Prove ƒ(x₁) = ƒ(x₂) ⟹ x₁ = x₂"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Surjective": {
      "course": "CS1231S",
      "parents": [
        "Function Correspondence"
      ],
      "topic": "Surjective",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∀y ∈ B ∃x ∈ A (y = ƒ(x)) MA>",
            "Nobody in B is alone",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "::Prove function is surjective",
            "Prove ∀y ∈ B → ∃x ∈ A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Invertible (Function)": {
      "course": "CS1231S",
      "parents": [
        "Function Correspondence"
      ],
      "topic": "Invertible (Function)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Let ƒ : A → B. Then 𝒈 : B → A is an inverse of ƒ",
            "∀x ∈ A ∀y ∈ B ⟹ y = ƒ(x) ⟺ x = 𝒈(y)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "::Prove function is invertible",
            "Prove /Bijective"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Function Correspondence": {
      "course": "CS1231S",
      "parents": [
        "Functions (MA)"
      ],
      "topic": "Function Correspondence",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Invertible (Function)",
            "Surjective",
            "Injective",
            "Bijective",
            "Well Defined (Function)"
          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Associative Composite Function": {
      "course": "CS1231S",
      "parents": [
        "Composite Function"
      ],
      "topic": "Associative Composite Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Composite functions are associative"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Composite Function": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Composite Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "For 𝒈 ◦ ƒ to be defined, the codomain of ƒ must equal the domain of 𝒈",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Associative Composite Function"
          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Empty String": {
      "course": "CS1231S",
      "parents": [
        "String (Function)"
      ],
      "topic": "Empty String",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The empty string, denoted ε, is the string of length 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": null
    },
    "Set Of All Strings": {
      "course": "CS1231S",
      "parents": [
        "String (Function)"
      ],
      "topic": "Set Of All Strings",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If A = {s,u}, then A* is all the strings possible"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/10/2021",
      "important": "Important"
    },
    "Mean Value Theorem (Definite Integrals)": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Mean Value Theorem (Definite Integrals)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "∃c s.t. ƒ(c) = ʃƒ(x)dx / (b-a)",
            "There is a value ƒ(c) that equals to the average y of the integral"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/10/2021",
      "important": "Important"
    },
    "Roberts Model": {
      "course": "GESS1019",
      "parents": [
        "Planning Model"
      ],
      "topic": "Roberts Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Planners only make proposals",
            "Involvements in areas that don't need experts",
            "Clear roles defined",
            "Citizens select final plan",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 6,
          "points": [
            "- Very slow",
            "- Costly",
            "- Heavily influenced by demographics",
            "- Lack of awareness"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/10/2021",
      "important": null
    },
    "Travis Model": {
      "course": "GESS1019",
      "parents": [
        "Planning Model"
      ],
      "topic": "Travis Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Preparatory process, basic planning, development design all involves the public"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/10/2021",
      "important": null
    },
    "Lichfield Model": {
      "course": "GESS1019",
      "parents": [
        "Planning Model"
      ],
      "topic": "Lichfield Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Involvement by voting, polls, discussions",
            "Only after proposals have been made and evaluated",
            "Planners have the final say",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 5,
          "points": [
            "Master Plan 1998"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/10/2021",
      "important": null
    },
    "Data Driven Urban Planning": {
      "course": "GESS1019",
      "parents": [
        "Planning Model"
      ],
      "topic": "Data Driven Urban Planning",
      "contents": {
        "Benefits": {
          "section": "Benefits",
          "index": 0,
          "points": [
            "+ Comprehensive",
            "+ Practical",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 4,
          "points": [
            "- Complex",
            "- Restricted by political, communal restraints"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/10/2021",
      "important": null
    },
    "Levels Of Public Involvement": {
      "course": "GESS1019",
      "parents": [
        "Planning Model Stakeholder"
      ],
      "topic": "Levels Of Public Involvement",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Nonparticipation (just informing them of the changes)",
            "Tokenism (surveys to find out what to do)",
            "Citizen Control (most control)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "11/10/2021",
      "important": null
    },
    "Planning Model Stakeholder": {
      "course": "GESS1019",
      "parents": [
        "Planning Model"
      ],
      "topic": "Planning Model Stakeholder",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Based on Arnstein 1969 typology of public participation says there are 8 rungs of the participatory ladder",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [
            "Elected",
            "Public servants",
            "Agencies",
            "Consultants",
            "Public",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "Levels Of Public Involvement"
          ]
        }
      },
      "date": "11/10/2021",
      "important": null
    },
    "Planning Model": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Planning Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Creative design to data-driven",
            "Prefer complexity",
            ""
          ],
          "sublinks": [
            "Data Driven Urban Planning",
            "Planning Model Stakeholder"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Lichfield Model",
            "Travis Model",
            "Roberts Model"
          ]
        }
      },
      "date": "11/10/2021",
      "important": "Important"
    },
    "Trigo Identities": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Trigo Identities",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "sec²x = 1 + tan²x;",
            "csc²x = 1 + cot²x;",
            "cos2x = 2cos²x - 1 = 1 - 2sin²x;",
            "sinAcosB = ½[sin(A-B)+sin(A+B)];",
            "sinAsinB = ½[cos(A-B)-cos(A+B)];",
            "cosAcosB = ½[cos(A-B)+cos(A+B)];",
            "(tanx)' = sec²x;",
            "(cotx)' = -csc²x;",
            "(secx)' = tanxsecx;",
            "(cscx)' = -cotxcscx;",
            "(sin⁻¹x)' = 1/√(1-x²);",
            "(cos⁻¹x)' = -1/√(1-x²);",
            "(tan⁻¹x)' = 1/(1+x²);",
            "(cot⁻¹x)' = -1/(1+x²);",
            "(sec⁻¹x)' = 1/(|x|√(x²-1));",
            "(csc⁻¹x)' = -1/(|x|√(x²-1));",
            "ʃ1/(x²+d²)dx = tan⁻¹(x/d)/d;",
            "ʃcsc(x)dx = -ln(csc(x) + cot(x));",
            "ʃcot(x)dx = ln(sin(x));",
            "ʃsec(x)dx = ln(sec(x) + tan(x));",
            "ʃ1/(a²-x²)dx = ln(a+x/a-x)/2a;",
            "ʃ1/√(a²-x²)dx = sin⁻¹(x/a);",
            "ʃ1/√(x²土a²)dx = ln(x + √(x²土a²));"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Important"
    },
    "Inverse Function": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Inverse Function",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Derivative :- ƒ⁻¹(x)' = 1/ƒ'(ƒ⁻¹(x))"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Important"
    },
    "Matlab Nullspace": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Nullspace",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA null(A, 'r') MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Rank": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Rank",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA rank() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Syms": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Syms",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Creates 2 free parameters, to be used in general solutions",
            "<MA syms s t MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Determinant": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Determinant",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA det() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Inverse": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Inverse",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA A^(-1) MA>",
            "<MA inv() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Transpose": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Transpose",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA A' MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Diagonal": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Diagonal",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA diag([]) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Identity": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Identity",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA eye(n) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Zero": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Zero",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA zeros(r,c) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Size": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Size",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA size() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Extract Range": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Extract Range",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA A([i,j],:) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Extract Row": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Extract Row",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA A(i,:) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab RREF": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab RREF",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA rref() MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Concatenate Vector": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Concatenate Vector",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA [A b] MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Rational Form": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Rational Form",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA format rat MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab Decimal Form": {
      "course": "MA2001",
      "parents": [
        "Matlab"
      ],
      "topic": "Matlab Decimal Form",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "<MA format long/format short MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/10/2021",
      "important": "Matlab"
    },
    "Matlab": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Matlab",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Matlab Decimal Form",
            "Matlab Rational Form",
            "Matlab Concatenate Vector",
            "Matlab RREF",
            "Matlab Extract Row",
            "Matlab Extract Range",
            "Matlab Size",
            "Matlab Zero",
            "Matlab Identity",
            "Matlab Diagonal",
            "Matlab Transpose",
            "Matlab Inverse",
            "Matlab Determinant",
            "Matlab Syms",
            "Matlab Rank",
            "Matlab Nullspace",
            "Matlab Length",
            "Matlab Dot Product",
            "Matlab Orthonormal Of Column Space",
            "Matlab Char Poly",
            "Matlab Solve Char Poly",
            "Matlab Eigenvalue",
            "Matlab Eigenspace"
          ]
        }
      },
      "date": "09/10/2021",
      "important": null
    },
    "Open Closed Region": {
      "course": "MA1521",
      "parents": [

      ],
      "topic": "Open Closed Region",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Closed region contains all boundary points",
            "Open region contains only interior points"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/10/2021",
      "important": null
    },
    "Radius Of Convergence": {
      "course": "MA1521",
      "parents": [
        "Convergence"
      ],
      "topic": "Radius Of Convergence",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Find radius of convergence",
            "R = lim|cₙ/cₙ₊₁| = lim|1/cₙ^(¹/ₙ)|",
            "",
            "::Show range of convergence",
            "|x - a| < R",
            "∑cₙ(x - a)ᵏ convergent",
            "∑cₙk(x - a)ᵏ⁻¹ convergent",
            "",
            "::Show convergence of series",
            "R = 0 ⟹ ∑cₙ(x - a)ᵏ convergent only at a",
            "R = ∞ ⟹ ∑cₙ(x - a)ᵏ convergent everywhere"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/10/2021",
      "important": "Important"
    },
    "Dimension Theorem Of Matrix": {
      "course": "MA2001",
      "parents": [
        "Rank"
      ],
      "topic": "Dimension Theorem Of Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "rank(A) + nullity(A) = #columns of A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/10/2021",
      "important": "Simportant"
    },
    "Rank": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Rank",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "::Rank is equivalent to",
            "REF nonzero rows",
            "REF leading entries",
            "REF pivot columns",
            "largest number of linearly independent rows",
            "largest number of linearly independent columns",
            "dim(/Row Space)",
            "dim(/Column Space)",
            "Product :- rank(AB) ≤ rank(A)",
            "Sum :- rank(A+B) ≤ rank(A)+rank(B)",
            "Transpose :- rank(Aᵀ) = rank(A)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Dimension Theorem Of Matrix",
            "Full Rank"
          ]
        }
      },
      "date": "08/10/2021",
      "important": "Important"
    },
    "Basis Extension": {
      "course": "MA2001",
      "parents": [
        "Basis"
      ],
      "topic": "Basis Extension",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Put the vectors as row space, then find the non-pivot columns of the RREF"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/10/2021",
      "important": "Important"
    },
    "Definition Of Set Equality": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Definition Of Set Equality",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A ⊆ B ∧ B ⊆ A ⇒ A = B MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Union Of Disjoint Sets": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Union Of Disjoint Sets",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA |A₁ ∪ A₂ ∪ ... ∪ Aₙ| = ∑|Aₙ| MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Top And Bottom Laws": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Top And Bottom Laws",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∅⁻ = U MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Double Complement Law (Sets)": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Double Complement Law (Sets)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A⁻⁻ = A MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Idempotent Law (Sets)": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Idempotent Law (Sets)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A ∪ A = A MA>",
            "<MA A ∩ A = A MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Universal Bound Law (Sets)": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Universal Bound Law (Sets)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A ∪ U = U MA>",
            "<MA A ∩ ∅ = ∅ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Identity Law (Sets)": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Identity Law (Sets)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A ∪ ∅ = A MA>",
            "<MA A ∩ U = A MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Set Laws": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Set Laws",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Identity Law (Sets)",
            "Universal Bound Law (Sets)",
            "Idempotent Law (Sets)",
            "Double Complement Law (Sets)",
            "Set Difference Law",
            "Top And Bottom Laws",
            "Split Set Law",
            "Inclusion Exclusion Principle"
          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Cartesian Product (Sets)": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Cartesian Product (Sets)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A × B = {(x,y): x ∈ A and y ∈ B} MA>",
            "(2ₓ, 3ᵧ) is 2nd from X and 3rd from Y",
            "Continuous sets leads to shadow regions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": "Important"
    },
    "Singleton (Sets)": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Singleton (Sets)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Set of size 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "String (Function)": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "String (Function)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "String or word is of the form a₀a₁...aₙ₋₁, with n being the length of the string ",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Set Of All Strings",
            "Empty String"
          ]
        }
      },
      "date": "07/10/2021",
      "important": null
    },
    "Alternating Series Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Alternating Series Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Determine convergence of ∑(-1)ⁿuₙ",
            "uₙ > 0",
            "uₙ₊₁ ≤ uₙ",
            "uₙ → 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/11/2021",
      "important": null
    },
    "Root Test": {
      "course": "MA1521",
      "parents": [

      ],
      "topic": "Root Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Determine convergence",
            "lim(ⁿ√aₙ) = L",
            "|L| < 1 ⇒ absolutely convergent",
            "L > 1 or infinite ⇒ divergent",
            "L = 1 ⇒ inconclusive"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Ratio Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Ratio Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "::Determine convergence",
            "lim|aₙ₊₁/aₙ| = L",
            "|L| < 1 ⇒ absolutely convergent",
            "L > 1 or infinite ⇒ divergent",
            "L = 1 ⇒ inconclusive"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Integral Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Integral Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "∑ƒ(x) ≈ ʃƒ(x)dx ⇒ the integral from 1 to ∞ will decide whether the sum is convergent or divergent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Monotonic Sequence Theorem": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Monotonic Sequence Theorem",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "If the terms > 0 and have upper bound, then limit is the upper bound",
            "If the terms < 0 and have lower bound, then limit is lower bound"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Conditionally Convergent Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Conditionally Convergent Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "∑aₙ convergent and ∑|aₙ| divergent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Functions": {
      "course": "MA1521",
      "parents": [
        "MA1521",
        "CS1231S"
      ],
      "topic": "Functions",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Continuous Function",
            "Inverse Function"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Extreme Value Theorem",
            "First Derivative Theorem",
            "Rolle's Theorem",
            "Mean Value Theorem",
            "Cauchy Mean Value Theorem",
            "Mean Value Theorem (Definite Integrals)"
          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Absolute Convergence Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Absolute Convergence Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "∑|ƒ(x)| ⇒ ∑ƒ(x)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Comparison Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Comparison Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "lim∑ƒ(x) ⇒ compare the size of ƒ(x) vs 𝒈(x) ⇒ can corrale the ƒ(x) using the nature of 𝒈(x)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Limit Comparison Test": {
      "course": "MA1521",
      "parents": [
        "Convergence Test"
      ],
      "topic": "Limit Comparison Test",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Instead of comparing by inequality, you can take the quotient of the two limits to be tested",
            "If the new limit is not zero or ∞, then the two smaller limits are both convergent or both divergent",
            "lim∑ƒ(x) = lim(ƒ(x) / 𝒈(x)) ⇒ if zero or ∞, then nature of ƒ(x) is the nature of 𝒈(x)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Convergence Test": {
      "course": "MA1521",
      "parents": [
        "Convergence"
      ],
      "topic": "Convergence Test",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Limit Comparison Test",
            "Comparison Test",
            "Absolute Convergence Test",
            "Conditionally Convergent Test",
            "Monotonic Sequence Theorem",
            "Integral Test",
            "Ratio Test",
            "Alternating Series Test"
          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Convergence": {
      "course": "MA1521",
      "parents": [
        "MA1521"
      ],
      "topic": "Convergence",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Radius Of Convergence",
            "Convergence Test"
          ]
        }
      },
      "date": "06/10/2021",
      "important": null
    },
    "Binary Relation": {
      "course": "CS1231S",
      "parents": [
        "Relation"
      ],
      "topic": "Binary Relation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Binary relations are relations from A to A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/10/2021",
      "important": null
    },
    "Inclusion Exclusion Principle": {
      "course": "CS1231S",
      "parents": [
        "Axioms Of Probability",
        "Set Laws"
      ],
      "topic": "Inclusion Exclusion Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA |A∪B| = |A|+|B|-|A∩B| MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "05/10/2021",
      "important": "Important"
    },
    "Column Space": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Column Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Span of the columns of a matrix",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Not preserved under /Elementary Row Operation",
            "Linear independent ⟺ /Row Space independent",
            "Basis :- pivot columns are the same as /Linear Span",
            "Ax = b is consistent iff b lies in the column space of A",
            "Av ∈ column space of A",
            "colspace(AB) ⊆ colspace(A)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Row Space": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Row Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Span of the rows of a matrix",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Preserved under /Elementary Row Operation",
            "Linear independent ⟺ /Column Space independent",
            "Basis :- same as /Linear Span",
            "Zero Space :- Orthogonal to /Zero Space"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Coordinate Vector": {
      "course": "MA2001",
      "parents": [
        "Basis"
      ],
      "topic": "Coordinate Vector",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Coordinate vector means that v is made up of vectors in S",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Orthogonal Coordinate Vector"
          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Invertible Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Invertible Matrix",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "::A is invertible",
            "A is non-singular",
            "Ax = 0 only has trivial solution",
            "RREF(A) = I",
            "REF no non-zero rows",
            "A can be expressed as product of elementary matrices of another invertible matrix",
            "det(A) ≠ 0",
            "∃ square matrix B such that BA = I",
            "Rows of A form a basis for ℝⁿ",
            "Columns of A form a basis for ℝⁿ",
            "row / column space = ℝⁿ",
            "rank(A) = n",
            "nullity(A) = 0",
            "0 is not an eigenvalue of A",
            "Ker(T) = {0}",
            "R(T) = ℝⁿ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": "Simportant"
    },
    "Subspace": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Subspace",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "dim(U) = dim(V) ⟺ U = V",
            "U ⊆ V ⟺ dim(U) ≤ dim(V)",
            "U ⊆ V ⋀ U ≠ V ⟺ dim(U) < dim(V)",
            "V + W means take some v in V and some w in W, leading to v + w",
            "span(S₁) ⊆ span(S₂) iff each in S₁ is in span(S₂)",
            "u ∈ span(S), then span(S) ⟹ span(S ⋃ u)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 8,
          "points": [
            "::Prove set is a subspace",
            "each uᵢ is a linear combination of u₁, u₂, ..., uₙ",
            ""
          ],
          "sublinks": [
            "Homogeneity Check"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 13,
          "points": [
            ""
          ],
          "sublinks": [
            "Linearly Independent Span"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 16,
          "points": [

          ],
          "sublinks": [
            "Inclusion Sum"
          ]
        }
      },
      "date": "04/10/2021",
      "important": "Important"
    },
    "Basis": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Basis",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "S is linearly independent and |S| = k = dim(V)",
            "S ⊆ V and |S| = k = dim(V)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Linearly Independent Basis"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 7,
          "points": [

          ],
          "sublinks": [
            "Transition Matrix",
            "Coordinate Vector",
            "Basis Extension"
          ]
        }
      },
      "date": "04/10/2021",
      "important": "Important"
    },
    "Linearly Independent Span": {
      "course": "MA2001",
      "parents": [
        "Subspace"
      ],
      "topic": "Linearly Independent Span",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Any subset of V with more than k vectors is always linearly dependent",
            "Any subset of V with less than k vectors cannot span V"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Linearly Independent Basis": {
      "course": "MA2001",
      "parents": [
        "Basis"
      ],
      "topic": "Linearly Independent Basis",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "S is a basis for V, |S| = k",
            "v in V are linearly dependent iff (v)s are linearly dependent in ℝᵏ",
            "span(S) = V iff span((v)s) = ℝᵏ"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "CBD Incentive Scheme": {
      "course": "GESS1019",
      "parents": [
        "Development Charge Incentives"
      ],
      "topic": "CBD Incentive Scheme",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Encourage the development of mixed-use buildings"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Strategic Development Incentive Scheme": {
      "course": "GESS1019",
      "parents": [
        "Development Charge Incentives"
      ],
      "topic": "Strategic Development Incentive Scheme",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Redevelop older buildings in strategic areas",
            "Quality design, promoting transit use, other uses gives you bonus floor space",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 4,
          "points": [
            "CBD, Orchard Road"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "BCA Green Mark": {
      "course": "GESS1019",
      "parents": [
        "Development Charge Incentives"
      ],
      "topic": "BCA Green Mark",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Incentive if building is very green",
            "Platinum 2%, Gold 1% bonus floor space"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Development Charge Incentives": {
      "course": "GESS1019",
      "parents": [
        "Development Charge"
      ],
      "topic": "Development Charge Incentives",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Allows developers to get certain permissions / rewards",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "BCA Green Mark",
            "Strategic Development Incentive Scheme",
            "CBD Incentive Scheme"
          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Development Baseline": {
      "course": "GESS1019",
      "parents": [
        "Development Charge"
      ],
      "topic": "Development Baseline",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The value of the approved development after development charge is paid (approved gross floor area × DC rate for the use group)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Development Ceiling": {
      "course": "GESS1019",
      "parents": [
        "Development Charge"
      ],
      "topic": "Development Ceiling",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The value of the development proposed for a site and allowed by URA (proposed gross floor area × DC rate for the use group)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Development Charge": {
      "course": "GESS1019",
      "parents": [
        "Government Land Sales"
      ],
      "topic": "Development Charge",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Development Ceiling - /Development Baseline - Exemption",
            "Developers need to be levied and compensated for externalities",
            "Floor area incentives if follow planning objectives",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Development Charge Incentives",
            "Development Ceiling",
            "Development Baseline"
          ]
        }
      },
      "date": "04/10/2021",
      "important": null
    },
    "Destructive Append": {
      "course": "CS1101S",
      "parents": [
        "Mutability"
      ],
      "topic": "Destructive Append",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "When you destructively append, you alter the original list",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "d append(a,b) changes a → append(a,b)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Mutability": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Mutability",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Destructive Append"
          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Linear Span": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Linear Span",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Number of spanning vectors < n ⟹ cannot span",
            "Number of spanning vectors > n ⟹ linearly dependent, non-trivial solutions",
            "Redundant vector :- a vector that is a linear combination of the rest",
            ""
          ],
          "sublinks": [
            "Span Union Equality"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Span Equality"
          ]
        }
      },
      "date": "02/10/2021",
      "important": null
    },
    "Linear System": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Linear System",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "One solution if #variables = #nonzero rows in REF",
            "Infinite solutions if there is a non-pivot column in REF other than the last column",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 4,
          "points": [
            "::Find general solution",
            "Set arbitrary parameters λ, μ to variables that only appear once in the REF-ed linear systems"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/10/2021",
      "important": null
    },
    "Row Echelon Form": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Row Echelon Form",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "If there are any rows that consist entirely of zeros,",
            "then they are grouped together at the bottom of",
            "the matrix",
            "In any two successive non-zero rows,",
            "the first nonzero number in the lower row",
            "occurs farther to the right than",
            "the first nonzero number in the higher row"
          ],
          "sublinks": [

          ]
        },
        "An augmented matrix is in RREF if it:": {
          "section": "An augmented matrix is in RREF if it:",
          "index": 8,
          "points": [
            "The leading entry of every nonzero row is 1",
            "In each pivot column, except the pivot point,",
            "all other entries are zeros"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Augmented Matrix": {
      "course": "MA2001",
      "parents": [
        "Gauss Jordan Elimination",
        "Matrices"
      ],
      "topic": "Augmented Matrix",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Row equivalence :- Two augmented matrices are row equivalent if one can be obtained by a series of ERO"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Transition Matrix": {
      "course": "MA2001",
      "parents": [
        "Basis",
        "Matrices"
      ],
      "topic": "Transition Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Basis S to basis T, means you express each S as a linear combination of each T",
            "P = ([u₁]t [u₂]t ... [uₙ]t)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "Row form :- (v)s",
            "Column form :- [v]s",
            "P[w]s = [w]t",
            "Inverse :- P⁻¹ is for basis T to basis S",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process <MA": {
          "section": "Process ",
          "index": 10,
          "points": [
            "::Find Transition Matrix",
            "Set up augmented matrix (v₁ v₂ v₃ |u₁|u₂|u₃)",
            "Do GJE to get (I | [u₁]t | [u₂]t | [u₃]t)",
            "u₁ = av₁ + bv₂ + cv₃ ⟹ [u₁]t = (a b c)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 17,
          "points": [

          ],
          "sublinks": [
            "Orthogonal Transition Matrix",
            "Orthonormal Transition Matrix"
          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Dimension": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Dimension",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Number of vectors in basis for solution space",
            "Number of parameters in general solution",
            "Number of non-pivot columns in REF"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Government Land Sales": {
      "course": "GESS1019",
      "parents": [
        "Development Control"
      ],
      "topic": "Government Land Sales",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Used to implement Concept Plan and Master Plan",
            "MND/URA announces programme twice a year",
            "Sites for different land uses",
            "SLA is the representative for owning the land",
            "JTC for industrial development",
            "Done mainly by public tender",
            ""
          ],
          "sublinks": [
            "Development Charge"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 9,
          "points": [
            "URA development control evaluates and grants approval for projects if they are in line with guidelines and strategies",
            "URA announces program twice a year",
            "Sites for different categories of buildings"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "04/10/2021",
      "important": "Important"
    },
    "Special Control Area": {
      "course": "GESS1019",
      "parents": [
        "Development Control"
      ],
      "topic": "Special Control Area",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Areas subject to security requirements to confirm upon submission of proposal"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/10/2021",
      "important": null
    },
    "Well Ordering Principle": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Induction",
        "Equivalence"
      ],
      "topic": "Well Ordering Principle",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Every nonempty finite subset of N has a smallest element"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/09/2021",
      "important": "Important"
    },
    "Source Permutation": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Permutation",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function permutations(xs) {",
            "   if (is null(xs)) {",
            "       return list(null);",
            "   } else {",
            "       const f = x => map(y => pair(x, y), permutations(remove(x, xs)));",
            "       return accumulate(append, null, map(f, xs));",
            "   }",
            "}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 11,
          "points": [
            "Outputs all permutations of a list"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/09/2021",
      "important": null
    },
    "Development Control Framework": {
      "course": "GESS1019",
      "parents": [
        "Development Control"
      ],
      "topic": "Development Control Framework",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Written permission is valid for 2 years",
            "Provisional permission is valid for 6 months (still have developmental issues, or needs preliminary work)",
            "Consider land use, plot ratio, building height, building setback (gap between main building and pavement), building coverage"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/09/2021",
      "important": null
    },
    "Planning Act": {
      "course": "GESS1019",
      "parents": [
        "Development Control"
      ],
      "topic": "Planning Act",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Deals with development control (implementation of physical planning rules)",
            "Ensure compliance & stuff",
            "Control externalities",
            "Adequate provision of public goods",
            "Proper functioning of the environment",
            "Developments outside a conservation area must have \"planning permission\"",
            "Developments within conservation area must have \"conservation permission\"",
            "All subdivisions must have \"subdivision permission\""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/09/2021",
      "important": null
    },
    "Development Control": {
      "course": "GESS1019",
      "parents": [
        "GESS1019"
      ],
      "topic": "Development Control",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Planning Act",
            "Development Control Framework",
            "Special Control Area",
            "Government Land Sales",
            "Development Guide Plan",
            "Heritage Area",
            "LKY World City Prize"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 9,
          "points": [
            "Ensure compliance of public health and safety",
            "Provide amenities",
            "Control externalities",
            ""
          ],
          "sublinks": [

          ]
        },
        "Features": {
          "section": "Features",
          "index": 14,
          "points": [
            "Planning permission outside conservation area",
            "Conservation permission inside conservation area",
            "Subdivision permission in all subdivisions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/09/2021",
      "important": null
    },
    "Master Plan (1999)": {
      "course": "GESS1019",
      "parents": [
        "Master Plan"
      ],
      "topic": "Master Plan (1999)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Proposals have to be made available for public inspection & comments",
            "If no objections, then it will be made official"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/09/2021",
      "important": null
    },
    "Linearization": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Linearization",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A way to draw all the items in one line",
            "Keep choosing the prey until you are left with the apex",
            "Represented by squinting asterisk"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/09/2021",
      "important": null
    },
    "Largest Element": {
      "course": "CS1231S",
      "parents": [
        "Hasse Diagram"
      ],
      "topic": "Largest Element",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "All x ∈ A is below it (it eventually eats everything)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/09/2021",
      "important": null
    },
    "Smallest Element": {
      "course": "CS1231S",
      "parents": [
        "Hasse Diagram"
      ],
      "topic": "Smallest Element",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "All x ∈ A is above it (is eventually eaten by everything)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/09/2021",
      "important": null
    },
    "Maximal Element": {
      "course": "CS1231S",
      "parents": [
        "Hasse Diagram"
      ],
      "topic": "Maximal Element",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "No x ∈ A is directly above it (top of food chain)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/09/2021",
      "important": null
    },
    "Minimal Element": {
      "course": "CS1231S",
      "parents": [
        "Hasse Diagram"
      ],
      "topic": "Minimal Element",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "No x ∈ A is directly below it (bottom of food chain)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/09/2021",
      "important": null
    },
    "Hasse Diagram": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Hasse Diagram",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Just an arrow diagram, with smallest at the bottom and largest at the top",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Minimal Element",
            "Maximal Element",
            "Smallest Element",
            "Largest Element"
          ]
        }
      },
      "date": "17/09/2021",
      "important": null
    },
    "Zero Space": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Zero Space",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Zero space is linearly dependent, and has empty set as basis",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Matrix :- can be obtained by applying RREF to the augmented matrix Ax = 0",
            "Row Space :- orthogonal to /Row Space",
            "Transpose :- nullspace of AᵀA = nullspace of A"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": null
    },
    "Strict Total Order": {
      "course": "CS1231S",
      "parents": [
        "Total Order"
      ],
      "topic": "Strict Total Order",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Irreflexive"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": null
    },
    "Total Order": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Total Order",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A way to arrange all the elements in a set",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "All pairs x and y are connected by exactly 1 arrow",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Strict Total Order"
          ]
        }
      },
      "date": "16/09/2021",
      "important": "Important"
    },
    "Antisymmetric Relation": {
      "course": "CS1231S",
      "parents": [
        "Relation"
      ],
      "topic": "Antisymmetric Relation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "For x and y, there can be either 1 arrow or 0 arrows",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 3,
          "points": [
            "::Show antisymmetric",
            "x₁ R x₂ ⋀ x₂ R x₁ ⟹ x₁ = x₂ "
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": null
    },
    "Partial Order": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Partial Order",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Relation that is reflexive, antisymmetric and transitive",
            "All pairs x and y are connected by either 1 or 0 arrows",
            "Represented using squinting icon"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": null
    },
    "Codomain": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Codomain",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Codomain is the range of the function"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": null
    },
    "Congruence Mod Relation": {
      "course": "CS1231S",
      "parents": [
        "Relation"
      ],
      "topic": "Congruence Mod Relation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ℤ/~n or ℤₙ means integers partitioned based on their congruence-mod n",
            "<MA [x] = {nk + x: k ∈ ℤ} MA>",
            "Can use [x]+[y] = [x+y] and [x]×[y] = [x×y], when [x], [y] ∈ ℤₙ (can check whether well-defined or not)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": "Important"
    },
    "Equivalence Relation": {
      "course": "CS1231S",
      "parents": [
        "Relation"
      ],
      "topic": "Equivalence Relation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The same-component /Relation with respect to a partition is an equivalence relation",
            "Reflexive, symmetric, transitive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "::Show that a relation is an equivalence relation",
            "Prove reflexive, symmetric, transitive"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": null
    },
    "Quotient (Equivalence)": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Quotient (Equivalence)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A/~ = {[x]~: x ∈ A}; MA>",
            "Quotients are the underlying set, when partitioned based on an equivalence relation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "16/09/2021",
      "important": "Important"
    },
    "Linear Independence": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Linear Independence",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "0 vector makes any space linearly dependent, as you can add non-zero zero vector to any vector to return itself",
            "Number of vectors in space > dimension, then linearly dependent",
            "∑cu = 0 only has the trivial solution ⟹ vectors are linearly independent"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/09/2021",
      "important": null
    },
    "Source Merge Sort": {
      "course": "CS1101S",
      "parents": [
        "Source Sorting Algorithms"
      ],
      "topic": "Source Merge Sort",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "merge(xs, ys) {if(is null(xs)) {return ys} else if (is null(ys)) {return xs;} else const x = head(xs); const y = head(ys); return (x < y) ? pair(x, merge(tail(xs, ys)) : pair(y, merge(xs, tail(ys)));}}",
            "",
            "merge sort(xs) {if(is null(xs) || is null(tail(xs))) {return xs;} else {const mid = middle(length(xs)); return merge(merge sort(take(xs, mid)), merge sort(drop(xs, mid)));}}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 6,
          "points": [
            "Splits the list in ½ every time, and merge the sorted lists together, by going through the heads of both lists and taking the minimum each time"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/09/2021",
      "important": "Important"
    },
    "Source Selection Sort": {
      "course": "CS1101S",
      "parents": [
        "Source Sorting Algorithms"
      ],
      "topic": "Source Selection Sort",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "selection sort(xs) {if(is null(xs)) {return xs;} else {const x = smallest(xs); return pair(x, selection sort(remove(x,xs)));}}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Finds the smallest element of the list and removes it"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/09/2021",
      "important": "Important"
    },
    "Source Insertion Sort": {
      "course": "CS1101S",
      "parents": [
        "Source Sorting Algorithms"
      ],
      "topic": "Source Insertion Sort",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "insert(x, xs) {",
            " return is null(xs) ",
            "   ? list(x) ",
            "   : x <= head(xs) ",
            "   ? pair(x,xs) ",
            "   : pair(head(xs, insert(x, tail(xs)));",
            "}",
            "",
            "insertion sort(xs) {",
            " return is null(xs) ",
            "   ? xs ",
            "   : insert(head(xs), insertion sort(tail(xs);",
            "}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 16,
          "points": [
            "The second parameter of xs assumes that xs is already sorted, so you pass in insertion sort() as its parameter"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/09/2021",
      "important": "Important"
    },
    "Searching": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Searching",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Binary Search",
            "Binary Tree"
          ]
        }
      },
      "date": "15/09/2021",
      "important": null
    },
    "Division Theorem": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "Division Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∀n ∈ ℤ and d ∈ ℤ⁺, ∃q,r ∈ ℤ such that n = dq + r, 0 ≤ r < d MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/09/2021",
      "important": "Important"
    },
    "MND Land Use Plan (2030)": {
      "course": "GESS1019",
      "parents": [
        "Singapore Land Transport Plan"
      ],
      "topic": "MND Land Use Plan (2030)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Ministry of National Development propose land use to combat aging population"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/09/2021",
      "important": null
    },
    "Concept Plan (2011)": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan"
      ],
      "topic": "Concept Plan (2011)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "2013 Population white paper encouraging immigration",
            "Integrate greenery with living environment",
            "Enhance transport connectivity",
            "Sustain vibrant economy",
            "Park connectors",
            "85% household to live within 400m of a park",
            "80% household to live within 10min from train station",
            "Decentralise central jobs to Jurong Lake, Woodlands, Tampines"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/09/2021",
      "important": null
    },
    "Concept Plan (2001)": {
      "course": "GESS1019",
      "parents": [
        "Cities Of Change",
        "Concept Plan"
      ],
      "topic": "Concept Plan (2001)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Quality of life enhancement",
            "Knowledge-based economy",
            "Managing impact of IT",
            "\"Towards a thriving world-class city\"",
            "Dynamic economy, distinctive identity & delightful recreational place",
            "Develop CBD",
            "Impact-based industrial zoning system (B1 non-pollutive vs B2 pollutive with 50m buffer)",
            "Bring more B1 jobs closer to home",
            "White zone to permit multiple uses",
            "Public consultation via internet and focus groups to balance scarce land and retain identity",
            "Plan for 5.5 million ppl"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/09/2021",
      "important": null
    },
    "Partition (Equivalence)": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Partition (Equivalence)",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "𝒞 is a set of which all elements are nonempty subsets of A",
            "Every element of A is in exactly one element of 𝒞",
            "Elements of a partition are the components of the partition",
            "x ∼𝒞 y ⟺ x is in the same component of 𝒞 as y",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 6,
          "points": [
            "::Show every x ∈ A is in at least one S ∈ 𝒞",
            "Let S ∈ 𝒞",
            "Prove x ∈ S",
            "x ∈ S ∈ 𝒞",
            "",
            "::Show every x ∈ A is in at most one S ∈ 𝒞",
            "Let x ∈ S₁ and x ∈ S₂",
            "Prove S₁ ⊆ S₂",
            "Prove S₂ ⊆ S₁",
            "S₁ = S₂"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/09/2021",
      "important": null
    },
    "Equivalence Class": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Equivalence Class",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA [x]~ MA>",
            "<MA ∀z ∈ [x] (x~z) MA>",
            "Set containing all elements that are ~-related to x"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/09/2021",
      "important": null
    },
    "Spanning Egg": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "Spanning Egg",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA S ⊆ Span(S) ⊆ R MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "10/09/2021",
      "important": null
    },
    "Relation": {
      "course": "CS1231S",
      "parents": [
        "Equivalence"
      ],
      "topic": "Relation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (x,y) ∈ R → x R y MA>",
            "Relation from A to B is a subset of A×B;",
            "Relations are symmetric (reversible), reflexive (with itself), transitive (chain)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 5,
          "points": [

          ],
          "sublinks": [
            "Equivalence Relation",
            "Congruence Mod Relation",
            "Antisymmetric Relation",
            "Binary Relation"
          ]
        }
      },
      "date": "09/09/2021",
      "important": null
    },
    "Equivalence": {
      "course": "CS1231S",
      "parents": [
        "CS1231S"
      ],
      "topic": "Equivalence",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Relation",
            "Equivalence Class",
            "Partition (Equivalence)",
            "Quotient (Equivalence)",
            "Partial Order",
            "Total Order",
            "Linearization",
            "Well Ordering Principle",
            "Hasse Diagram"
          ]
        }
      },
      "date": "09/09/2021",
      "important": null
    },
    "Source Accumulate Tree": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Accumulate Tree",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "function accumulate tree(f1, f2, initial, tree) {",
            "   if (is null(tree)) {",
            "       return initial;",
            "   } else {",
            "       const head acc = is list(head(tree))",
            "           ? accumulate tree(f1, f2, initial, head(tree))",
            "           : f1(head(tree));",
            "       ",
            "       const rest acc = accumulate tree(f1, f2, initial, tail(tree));",
            "       return f2(head acc, rest acc);",
            "   }",
            "}",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 15,
          "points": [
            "Accumulates terms in tree using accumulating function f2"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "09/09/2021",
      "important": null
    },
    "Power Set": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Power Set",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The set of all subsets",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "<MA ℘(∅) = {∅} MA>",
            "<MA |℘(A)| = 2^|A| MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/09/2021",
      "important": null
    },
    "Source Filter": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source Filter",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "filter(λ, list)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Filters a list based on a λ function that should return a boolean"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/09/2021",
      "important": null
    },
    "Source Accumulate": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source Accumulate",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<JV",
            "accumulate(λ, initial, list)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "The λ function in accumulate takes 2 arguments, where x is the first value, and y is the remaining values",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 7,
          "points": [
            "accumulate((x, y) => x + y, 0, list)",
            "ƒ(last elem, initial), ƒ(second last, ƒ(last elem, initial))",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/09/2021",
      "important": "Important"
    },
    "Source Map": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source Map",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "map(λ, list)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Maps a λ function throughout a list or tree"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/09/2021",
      "important": null
    },
    "Source Append Iterative": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Append Iterative",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "append iterative(x, y, λ)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Append to list iteratively",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples <JV": {
          "section": "Examples ",
          "index": 7,
          "points": [
            "return is null(x) ",
            " ? λ(y) ",
            " : append iterative(tail(x), y, k => λ(pair(head(x), k))",
            ""
          ],
          "sublinks": [

          ]
        }
      },
      "date": "08/09/2021",
      "important": "Important"
    },
    "Group Project Timeline": {
      "course": "GESS1019",
      "parents": [
        "Group Project"
      ],
      "topic": "Group Project Timeline",
      "contents": {
        "Timeline": {
          "section": "Timeline",
          "index": 0,
          "points": [
            "Sep 28: Short ungraded presentation about the problem statement",
            "Oct 1: One page proposal with brief description, importance, plan to somplete the project and submit in Student Submissions/Group Project/Proposal/Tutorial > > Group 3;",
            "Oct 11: Instructor meets each team individually to discuss the project, topics are flexible;",
            "Oct 25: Final presentation (11+3 mins)",
            "Nov 19: Softcopy of final report;",
            "Nov 23: Peer evaluations"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/09/2021",
      "important": null
    },
    "Group Project Considerations": {
      "course": "GESS1019",
      "parents": [
        "Group Project"
      ],
      "topic": "Group Project Considerations",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Central problem",
            "Causes of the problem",
            "Have they already been addressed/are effective?",
            "Recommended policies to address the problem",
            "How will it impact different stakeholders"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "07/09/2021",
      "important": null
    },
    "Group Project": {
      "course": "GESS1019",
      "parents": [

      ],
      "topic": "Group Project",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Group Project Considerations",
            "Group Project Timeline"
          ]
        }
      },
      "date": "07/09/2021",
      "important": null
    },
    "Set Builder Notation": {
      "course": "CS1231S",
      "parents": [
        "Set Notation"
      ],
      "topic": "Set Builder Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA {x∈R|x>0} MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Roster Notation": {
      "course": "CS1231S",
      "parents": [
        "Set Notation"
      ],
      "topic": "Roster Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA {1,2,3} MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Set Difference Law": {
      "course": "CS1231S",
      "parents": [
        "Set Laws"
      ],
      "topic": "Set Difference Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A\\B = A ∩ B⁻ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Span Equality": {
      "course": "MA2001",
      "parents": [
        "Linear Span"
      ],
      "topic": "Span Equality",
      "contents": {
        "Proof": {
          "section": "Proof",
          "index": 0,
          "points": [
            "Augmented matrix with A on the left and each spanning vector of B",
            "Conduct GEJ",
            "If consistent throughout, then B ⊆ A",
            "Repeat for the other way"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Linear Combination": {
      "course": "MA2001",
      "parents": [
        "Linear Space"
      ],
      "topic": "Linear Combination",
      "contents": {
        "Process": {
          "section": "Process",
          "index": 0,
          "points": [
            "Can be derived from the augmented matrix and elimination"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Singapore Today Economy": {
      "course": "GESS1019",
      "parents": [
        "Singapore Economic Transformations"
      ],
      "topic": "Singapore Today Economy",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Largely knowledge-intensive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Innovation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Singapore 1990 Economy": {
      "course": "GESS1019",
      "parents": [
        "Singapore Economic Transformations"
      ],
      "topic": "Singapore 1990 Economy",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Largely technology-intensive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "STEM"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Singapore 1980 Economy": {
      "course": "GESS1019",
      "parents": [
        "Singapore Economic Transformations"
      ],
      "topic": "Singapore 1980 Economy",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Largely capital-intensive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "International service corporations"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Singapore 1970 Economy": {
      "course": "GESS1019",
      "parents": [
        "Singapore Economic Transformations"
      ],
      "topic": "Singapore 1970 Economy",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Largely skills-intensive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Computer parts & Oil refinery"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Singapore 1960 Economy": {
      "course": "GESS1019",
      "parents": [
        "Singapore Economic Transformations"
      ],
      "topic": "Singapore 1960 Economy",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Largely labor-intensive",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "Garments & Textiles"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Singapore Economic Transformations": {
      "course": "GESS1019",
      "parents": [
        "GESS1019"
      ],
      "topic": "Singapore Economic Transformations",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Singapore 1960 Economy",
            "Singapore 1970 Economy",
            "Singapore 1980 Economy",
            "Singapore 1990 Economy",
            "Singapore Today Economy"
          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Concept Plan Phase 3": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan"
      ],
      "topic": "Concept Plan Phase 3",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Traffic modeling and refinement",
            "Different structures will give different traffic flow"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Concept Plan Phase 2": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan"
      ],
      "topic": "Concept Plan Phase 2",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Strategies and physical structure plan",
            "1971 Monocentric (EWL/NSL)",
            "1991 Polycentric (CCL)",
            "2001 Global Business Center (TEL)",
            "2011 Growth Nodes (Regional Development)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Concept Plan Phase 1": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan"
      ],
      "topic": "Concept Plan Phase 1",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Land use requirements (DD & SS)",
            "Residential, Commercial, Industrial, Education, Community, Healthcare, Religious, Arts",
            "Population projection for long-term planning, periodic population census, can plan for distribution of space in the future",
            "Influenced by policy and market trends"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Program Of Involvement": {
      "course": "GESS1019",
      "parents": [
        "Scope Of Involvements"
      ],
      "topic": "Program Of Involvement",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1-5 years",
            "Lowest scope of involvements",
            "Goes down to the individual vendors and people"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Land Development Plan": {
      "course": "GESS1019",
      "parents": [
        "Scope Of Involvements"
      ],
      "topic": "Land Development Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "5-10 years",
            "The plan goes to the agencies actually building the buildings: HDB, SMRT, NParks, BCA",
            "Establish specific regulations and legislation for development projects"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Land Use Plan": {
      "course": "GESS1019",
      "parents": [
        "Scope Of Involvements"
      ],
      "topic": "Land Use Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "10-20 years",
            "URA plans for land usage and zoning",
            "Guidance system for development projects"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Policy Framework": {
      "course": "GESS1019",
      "parents": [
        "Scope Of Involvements"
      ],
      "topic": "Policy Framework",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "40-50 years",
            "Government-level policies to guide the way"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Scope Of Involvements": {
      "course": "GESS1019",
      "parents": [
        "GESS1019"
      ],
      "topic": "Scope Of Involvements",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Policy Framework",
            "Land Use Plan",
            "Land Development Plan",
            "Program Of Involvement"
          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Circle Line": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan (1991)"
      ],
      "topic": "Circle Line",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Inspired by the /Concept Plan (1991)",
            "Inner ring structure of the transport network"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "North South Line": {
      "course": "GESS1019",
      "parents": [
        "Ring Concept Plan (1971)"
      ],
      "topic": "North South Line",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Inspired by the /Concept Plan (1971)",
            "Ring structure of the transport network"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "06/09/2021",
      "important": null
    },
    "Riemann Integral": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Riemann Integral",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Classic integration"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/09/2021",
      "important": null
    },
    "Riemann Sum": {
      "course": "MA1521",
      "parents": [
        "Integration"
      ],
      "topic": "Riemann Sum",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∑ƒ(c)(size of interval) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "03/09/2021",
      "important": null
    },
    "Integration": {
      "course": "MA1521",
      "parents": [
        "MA1521"
      ],
      "topic": "Integration",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Riemann Sum",
            "Riemann Integral",
            "Trigo Identities",
            "Volume Of Revolution (Disc)",
            "Volume Of Revolution (Shell)",
            "Arc Length",
            "Surface Area Of Revolution"
          ]
        }
      },
      "date": "03/09/2021",
      "important": null
    },
    "Set Notation": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Set Notation",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Roster Notation",
            "Set Builder Notation"
          ]
        }
      },
      "date": "02/09/2021",
      "important": null
    },
    "Set Complement": {
      "course": "CS1231S",
      "parents": [
        "Sets"
      ],
      "topic": "Set Complement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA B⁻ MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/09/2021",
      "important": null
    },
    "Sets": {
      "course": "CS1231S",
      "parents": [
        "Sets (MA)",
        "CS1231S"
      ],
      "topic": "Sets",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Cardinality :- number of distinct elements in set",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 3,
          "points": [
            ""
          ],
          "sublinks": [
            "Power Set",
            "Subset",
            "Set Complement",
            "Singleton (Sets)",
            "Cartesian Product (Sets)"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "Set Notation",
            "Set Laws",
            "Definition Of Set Equality"
          ]
        }
      },
      "date": "02/09/2021",
      "important": null
    },
    "Source List Ref": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source List Ref",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "list ref(list, n)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Returns nth value of list"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "02/09/2021",
      "important": null
    },
    "Cauchy Mean Value Theorem": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Cauchy Mean Value Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If ƒ and 𝒈 continuous and differentiable, then ∃c ƒ⁻¹(c)/𝒈(c) = (ƒ(b)-ƒ(a))/(𝒈(b)-𝒈(a))"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Mean Value Theorem": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Mean Value Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If ƒ continuous and differentiable, then ∃c ƒ⁻¹(c) = (ƒ(b)-ƒ(a))/(b-a)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": "Important"
    },
    "Rolle's Theorem": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Rolle's Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If ƒ continuous and differentiable and ƒ(a) = ƒ(b), then ∃c such that ƒ⁻¹(c) = 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": "Important"
    },
    "Source Length Of List": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Length Of List",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "len(xs) = is null(xs) ? 0 : 1 + length(tail(xs))",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Length of list is length of tail + 1, all the way until null at the end"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Source Box And PointerBox": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Box And PointerBox",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "draw data(pair(1, pair(2, pair(3, null))))",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Creates a box-and-pointer diagram, with linked list"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": "Important"
    },
    "Source Null": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source Null",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "is null()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Checks if null"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Source List": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source List",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The tail is either a pair or a null",
            "If the innermost pair's tail is a null, then the whole thing becomes a list (tower of pairs)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Code <JV": {
          "section": "Code ",
          "index": 4,
          "points": [
            "list(x1, x2, x3,...)",
            "is list()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 9,
          "points": [
            "Returns list [x1,[x2,[x3...,null]]]"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Source Pair": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source Pair",
      "contents": {
        "Code<JV": {
          "section": "Code",
          "index": 0,
          "points": [
            "pair(x, y)",
            "[x, y]",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 5,
          "points": [
            "Returns pair made of x and y"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Source Repeat": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Repeat",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "const repeat = n => f => x => n === 0 ",
            "                             ? x ",
            "                             : repeat(n - 1)(f)(f(x));",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 6,
          "points": [
            "Repeating function accessible using repeat(3)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": "Important"
    },
    "Source Head Tail": {
      "course": "CS1101S",
      "parents": [
        "Source Advanced Functions"
      ],
      "topic": "Source Head Tail",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "head(tail(list))",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Gets you the second value of the list"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Source Head": {
      "course": "CS1101S",
      "parents": [
        "Source Base Functions"
      ],
      "topic": "Source Head",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "head(list)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Gets you the first value of the pair"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Source Sorting Algorithms": {
      "course": "CS1101S",
      "parents": [
        "Source Academy"
      ],
      "topic": "Source Sorting Algorithms",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Insertion Sort",
            "Source Selection Sort",
            "Source Merge Sort"
          ]
        }
      },
      "date": null,
      "important": null
    },
    "Source Stream Functions": {
      "course": "CS1101S",
      "parents": [
        "Source Academy"
      ],
      "topic": "Source Stream Functions",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Stream",
            "Source Add Streams",
            "Source Fibonacci Stream",
            "Source Integer Stream",
            "Source Stream Map",
            "Source Stream Filter"
          ]
        }
      },
      "date": null,
      "important": null
    },
    "Source Advanced Functions": {
      "course": "CS1101S",
      "parents": [
        "Source Academy"
      ],
      "topic": "Source Advanced Functions",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Head Tail",
            "Source Repeat",
            "Source Box And PointerBox",
            "Source Length Of List",
            "Source Append Iterative",
            "Source Accumulate Tree",
            "Source Permutation",
            "Source Enum Stream",
            "Source Merge B",
            "Source Zipper",
            "Source Similar",
            "Source Mutable Reverse",
            "Source Permutations"
          ]
        }
      },
      "date": null,
      "important": null
    },
    "Source Base Functions": {
      "course": "CS1101S",
      "parents": [
        "Source Academy"
      ],
      "topic": "Source Base Functions",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Head",
            "Source Pair",
            "Source List",
            "Source Null",
            "Source List Ref",
            "Source Map",
            "Source Accumulate",
            "Source Filter"
          ]
        }
      },
      "date": "01/09/2021",
      "important": null
    },
    "Linear Space": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Linear Space",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "<MA General notation :- {(u₁,u₂,u₃,u4)|conditions} MA>",
            "<MA Explicit notation :- {(t,t,t)|t in R} MA>",
            "<MA Implicit notation :- {(x,y,z)|x+y+z=0} MA>",
            "<MA Span explicit notation :- {s(1,2,3)+t(3,4,5)|s,t is elem of R} MA>",
            "<MA Span implicit notation :- span{(1,2,3), (3,4,5)} MA>",
            "u, v and w in ℝ³ are linearly independent iff span{u, v, w} = ℝ³",
            "In ℝ³, three vectors u, v and w are linearly dependent iff they lie on the same line or same plane",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 9,
          "points": [
            ""
          ],
          "sublinks": [
            "Linear Combination",
            "Linear Independence",
            "Dimension",
            "Linear Span"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 15,
          "points": [

          ],
          "sublinks": [
            "Zero Space",
            "Subspace",
            "Row Space",
            "Column Space"
          ]
        }
      },
      "date": "31/08/2021",
      "important": null
    },
    "Adjoint Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Adjoint Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The adjoint of A is the matrix made up of cofactors of the elements, so it's full of matrices inside",
            "<MA adj(A) MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 4,
          "points": [
            "<MA Aadj(A) = det(A)I MA>",
            "<MA A⁻¹ = adj(A)/det(A); MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/08/2021",
      "important": null
    },
    "Determinant": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Determinant",
      "contents": {
        "Properties": {
          "section": "Properties",
          "index": 0,
          "points": [
            "Inverse :- det(A⁻¹) = 1/det(A)",
            "Scalar multiple :- det(cA) = cⁿdet(A)",
            "Cramer's rule :- x = det(A₁)/det(A), y = det(A₂)/det(A), z = det(A₃)/det(A)",
            "Cofactor :- Determinant can be expresed as value with cofactor",
            "Determinant of matrix with identical rows or columns is zero"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/08/2021",
      "important": null
    },
    "Elementary Row Operation": {
      "course": "MA2001",
      "parents": [
        "Gauss Jordan Elimination"
      ],
      "topic": "Elementary Row Operation",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Premultiply the matrix with an /Elementary Matrix",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Multiply rows :- det(A) = kdet(B)",
            "Swap rows :- det(A) = -det(B)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "31/08/2021",
      "important": null
    },
    "Function Application": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Function Application",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Reduce components, if function is λ expression, take body of λ expression and replace parameters by argument expressions in scope of parameters"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Conditional Expression": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Conditional Expression",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Reduce predicate, and goes to if or else"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Operator Combination": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Operator Combination",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Apply operation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Value Expression": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Value Expression",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Just take the value"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Block Statement": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Block Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Can be inside a function block"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Expression Statement": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Expression Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Arithmetic expression"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Programming Expression": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Programming Expression",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Expression Statement",
            "Block Statement",
            "Value Expression",
            "Operator Combination",
            "Conditional Expression",
            "Function Application",
            "Normal Order Reduction",
            "Application Order Reduction"
          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "URA (1989)": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urban Planning History"
      ],
      "topic": "URA (1989)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Became the main governing body for urban development"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Concept Plan (1991)": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan"
      ],
      "topic": "Concept Plan (1991)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Decentralisation to new regional centres",
            "Choices of housing",
            "Paid attention to quality of life issues",
            "Development of Marina Bay, technology corridors, environment",
            "5 planning regions",
            "Tropical City of Excellence",
            "Balance of work, commerce",
            "Recreational options",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 10,
          "points": [

          ],
          "sublinks": [
            "Circle Line"
          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Ring Concept Plan (1971)": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan"
      ],
      "topic": "Ring Concept Plan (1971)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "State and City Planning (SCP) project",
            "Ad hoc organisation of HDB, Public Works Department",
            "Long-range land use and transportation, and how to implement, review and update",
            "Used a work-trip model",
            "Southern belt development",
            "Green spaces between towns",
            "Set aside Jurong for industrial and Changi for airport",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "North South Line"
          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "KAK Plan (1963)": {
      "course": "GESS1019",
      "parents": [
        "Master Plan"
      ],
      "topic": "KAK Plan (1963)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Otto Koenigberger (architect-planner)",
            "Charles Abram (lands and legal advisor)",
            "Susumu Kobe (traffic economist)",
            "Came to Singapore to propose the KAK mission report",
            "\"Action planning\" for urban development, industrialisation",
            "Performance standards for flexible development control",
            "\"Ring City\" concept of compact towns around central open area",
            "Everyone lives near the sea",
            "Ring city of towns",
            "11 employment centres"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Master Plan (1958)": {
      "course": "GESS1019",
      "parents": [
        "Master Plan"
      ],
      "topic": "Master Plan (1958)",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Add a green belt around the city to prevent sprawling",
            "Develop Orchard Road",
            "Jurong, Woodlands, Yio Chu Kang",
            "Open space targets from 0.34 to 1.1ha per 1000 persons",
            "Was too conservative to meet needs so advice was sought from the UN",
            "Planning Department of PMO in charge of land use control, and HDB for housing"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Concept Plan": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan Vs Master Plan",
        "Singapore Urban Planning History"
      ],
      "topic": "Concept Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Reviewed every 10 years",
            "Residential zones",
            ""
          ],
          "sublinks": [

          ]
        },
        "Phases": {
          "section": "Phases",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Concept Plan Phase 1",
            "Concept Plan Phase 2",
            "Concept Plan Phase 3"
          ]
        },
        "Years": {
          "section": "Years",
          "index": 9,
          "points": [

          ],
          "sublinks": [
            "Ring Concept Plan (1971)",
            "Concept Plan (1991)",
            "Concept Plan (2001)",
            "Concept Plan (2011)"
          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Master Plan": {
      "course": "GESS1019",
      "parents": [
        "Concept Plan Vs Master Plan",
        "Singapore Urban Planning History"
      ],
      "topic": "Master Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Reviewed every 5 years",
            "Used to guide the land sale program to private developers and statutory plan for each land parcel",
            "Translates broad long-term plans into more detailed plans",
            "Manages facilities",
            "Special and Detailed Control Plans (SDCP) for public spaces, monuments, housing and underground",
            "Guidelines and controls for specific areas for development",
            "URA uses the guidelines to control development applications and proposals",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 9,
          "points": [
            "Survey, data collection & analysis (population, traffic)",
            "Vision casting & proposals (develop what exactly)",
            ""
          ],
          "sublinks": [

          ]
        },
        "Years": {
          "section": "Years",
          "index": 13,
          "points": [

          ],
          "sublinks": [
            "Master Plan (1958)",
            "KAK Plan (1963)",
            "Master Plan (1999)",
            "Master Plan (2003)",
            "Master Plan (2014)",
            "Master Plan (2019)"
          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Concept Plan Vs Master Plan": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urban Planning History"
      ],
      "topic": "Concept Plan Vs Master Plan",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Master Plan",
            "Concept Plan"
          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Singapore Housing Committee Report": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urban Planning History"
      ],
      "topic": "Singapore Housing Committee Report",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1948 Reported that less than 1/3 of the city were satisfied",
            "SIT housing supply insufficient and unable to clear slums",
            "Recommended the creation of government housing & planning department",
            "Form a master plan"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Singapore Improvement Trust": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urban Planning History"
      ],
      "topic": "Singapore Improvement Trust",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1927 formed to improve urban environment",
            "WWII severe overcrowding",
            "Focus on inner city housing and street layout",
            "Regulate type and intensity of developments",
            "Reserved spaces for facilities",
            "Spreading people out to outer areas",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 8,
          "points": [
            "- WWII severe overcrowding",
            "- Cannot keep up with rapid change"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "Raffles Town Plan": {
      "course": "GESS1019",
      "parents": [
        "Singapore Urban Planning History"
      ],
      "topic": "Raffles Town Plan",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1828",
            "Singapore River was used to divide land use and ethnic zones",
            "Shophouse cities with 5-foot ways",
            "Focussed on harmony, efficiency, sanitation",
            "Grid layout for roads",
            "Green spaces"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "30/08/2021",
      "important": null
    },
    "First Derivative Theorem": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "First Derivative Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "ƒ'(x) = 0 at the max or min value"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Extreme Value Theorem": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Extreme Value Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If f continuous in interval, then it contains an absolute max and min value",
            "There are numbers in the interval and the function is between the max and min for every other in the interval"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": "Important"
    },
    "Source Color Point": {
      "course": "CS1101S",
      "parents": [

      ],
      "topic": "Source Color Point",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "make 3D color point(x,y,z,r,g,b)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Makes colored point"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Rotate Point": {
      "course": "CS1101S",
      "parents": [
        "Source Curves"
      ],
      "topic": "Source Rotate Point",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "rotate around origin(x, y, z)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Rotates a point about origin"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Translate Point": {
      "course": "CS1101S",
      "parents": [
        "Source Curves"
      ],
      "topic": "Source Translate Point",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "translate(x, y, z)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Translates a point"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Java Multiline Lambda Function": {
      "course": "CS1101S",
      "parents": [
        "Java Base",
        "Java Source"
      ],
      "topic": "Java Multiline Lambda Function",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<MA t => {} MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "You can put multiple statements within the {}"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Draw N Connected Points View": {
      "course": "CS1101S",
      "parents": [
        "Source Curves"
      ],
      "topic": "Source Draw N Connected Points View",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "draw connected full view proportional(n)()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "The view window will move out or in"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Draw N Connected Points": {
      "course": "CS1101S",
      "parents": [
        "Source Curves"
      ],
      "topic": "Source Draw N Connected Points",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "draw connected(n)()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Can accept function that has one parameter",
            "draw connected(n)(unit circle), where unit circle(t) is a function",
            "values will go from 0 to 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Point Coordinates": {
      "course": "CS1101S",
      "parents": [
        "Source Curves"
      ],
      "topic": "Source Point Coordinates",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "x of, y of",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Finds coordinates of point"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Make Point": {
      "course": "CS1101S",
      "parents": [
        "Source Curves"
      ],
      "topic": "Source Make Point",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "make point(x, y)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Creates point (x, y)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Source Curves": {
      "course": "CS1101S",
      "parents": [
        "Source Academy"
      ],
      "topic": "Source Curves",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Make Point",
            "Source Point Coordinates",
            "Source Draw N Connected Points",
            "Source Draw N Connected Points View",
            "Source Translate Point",
            "Source Rotate Point"
          ]
        }
      },
      "date": "27/08/2021",
      "important": null
    },
    "Universal Generalisation": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Universal Generalisation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "If true for arbitrary, then true for all"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/08/2021",
      "important": null
    },
    "Universal Instantiation": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Universal Instantiation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "For all x ⟹ any x"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/08/2021",
      "important": null
    },
    "Universal Modus Ponens": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Universal Modus Ponens",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "p→q for all ⟹ p→q for any"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "26/08/2021",
      "important": null
    },
    "Source Lambda Function": {
      "course": "CS1101S",
      "parents": [

      ],
      "topic": "Source Lambda Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Λ functions take the next number as argument",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "(y => 10+y)(6)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "25/08/2021",
      "important": "Important"
    },
    "Cofactor Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Cofactor Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "The 2x2 matrices that are used when calculating determinant of 3x3 matrices"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/08/2021",
      "important": null
    },
    "Elementary Column Operation": {
      "course": "MA2001",
      "parents": [
        "Gauss Jordan Elimination"
      ],
      "topic": "Elementary Column Operation",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Postmultiply the matrix with an /Elementary Matrix"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "24/08/2021",
      "important": null
    },
    "Broadacre City Model": {
      "course": "GESS1019",
      "parents": [
        "Frank Lloyd Wright"
      ],
      "topic": "Broadacre City Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1935",
            "Decentralised",
            "Large grid of arterials in the countryside",
            "Superhighways to connect the region"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Frank Lloyd Wright": {
      "course": "GESS1019",
      "parents": [
        "Urban Planning History"
      ],
      "topic": "Frank Lloyd Wright",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Broadacre City Model"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Jane Jacobs": {
      "course": "GESS1019",
      "parents": [
        "Urban Planning History"
      ],
      "topic": "Jane Jacobs",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Remove slums and mingle the poor with the middle-incomes",
            "Community should have full control over living space"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Radiant City Model": {
      "course": "GESS1019",
      "parents": [
        "Le Corbusier"
      ],
      "topic": "Radiant City Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1935",
            "High-density vertical",
            "Open spaces are parks",
            "Rigid geometric pattern",
            "Separate land use districts",
            "Buildings on stilts 5m above ground to allow nature flow below",
            "Different speeds of cars belong in different layers",
            "Stacked highways and rail",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 10,
          "points": [
            "Vertical separation of transport",
            "Singapore's New Towns & CBD"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Le Corbusier": {
      "course": "GESS1019",
      "parents": [
        "Urban Planning History"
      ],
      "topic": "Le Corbusier",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Creator of Contemporary City"
          ],
          "sublinks": [
            "Radiant City Model"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "3rd Generation New Towns": {
      "course": "GESS1019",
      "parents": [
        "UK New Towns Movement"
      ],
      "topic": "3rd Generation New Towns",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Breaks hierarchal residence",
            "More sense of interest community",
            "Everything is mixed-use",
            "Interest-based community is created"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "2nd Generation New Towns": {
      "course": "GESS1019",
      "parents": [
        "UK New Towns Movement"
      ],
      "topic": "2nd Generation New Towns",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Added transportation facilities",
            "Less emphasis on social balance",
            "Neighbourhood centres satisfy economic needs",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 5,
          "points": [
            "Cumbernauld"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "1st Generation New Towns": {
      "course": "GESS1019",
      "parents": [
        "UK New Towns Movement"
      ],
      "topic": "1st Generation New Towns",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1900",
            "Follow /Sir Ebenezer Howard's model",
            "Low density",
            "Town centres accomodate economic and social needs",
            "Range of housing types",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 7,
          "points": [
            "Stevenage"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "UK New Towns Movement": {
      "course": "GESS1019",
      "parents": [
        "Urban Planning History"
      ],
      "topic": "UK New Towns Movement",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "1946-1980",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "1st Generation New Towns",
            "2nd Generation New Towns",
            "3rd Generation New Towns"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Town Country Magnet": {
      "course": "GESS1019",
      "parents": [
        "Garden City Model"
      ],
      "topic": "Town Country Magnet",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Established to combine the advantages of both",
            "Town centre is a circular town garden ",
            "Farms are on the outskirts of town",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 5,
          "points": [
            "Letchworth",
            "Welwyn"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Country Magnet": {
      "course": "GESS1019",
      "parents": [
        "Garden City Model"
      ],
      "topic": "Country Magnet",
      "contents": {
        "Benefits": {
          "section": "Benefits",
          "index": 0,
          "points": [
            "+ Resources",
            "+ Natural life",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 4,
          "points": [
            "- Lack of facilities",
            "- Susceptible to weather"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Town Magnet": {
      "course": "GESS1019",
      "parents": [
        "Garden City Model"
      ],
      "topic": "Town Magnet",
      "contents": {
        "Benefits": {
          "section": "Benefits",
          "index": 0,
          "points": [
            "+ Employment",
            "+ Facilities",
            ""
          ],
          "sublinks": [

          ]
        },
        "Disadvantages": {
          "section": "Disadvantages",
          "index": 4,
          "points": [
            "- High rent",
            "- Urban life"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Garden City Model": {
      "course": "GESS1019",
      "parents": [
        "Sir Ebenezer Howard"
      ],
      "topic": "Garden City Model",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Urban decentralisation",
            "Integration of nature into cities",
            "Development of new town communities"
          ],
          "sublinks": [
            "Town Magnet",
            "Country Magnet",
            "Town Country Magnet"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Sir Ebenezer Howard": {
      "course": "GESS1019",
      "parents": [
        "Urban Planning History"
      ],
      "topic": "Sir Ebenezer Howard",
      "contents": {
        "Features": {
          "section": "Features",
          "index": 0,
          "points": [
            "Source of many urban planning ideas in 20th century",
            "Introduced green cities, town-country concepts with benefits of both and drawbacks of neither"
          ],
          "sublinks": [
            "Garden City Model"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Singapore Urban Planning History": {
      "course": "GESS1019",
      "parents": [
        "GESS1019"
      ],
      "topic": "Singapore Urban Planning History",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Concept Plan",
            "Master Plan",
            "Raffles Town Plan",
            "Singapore Improvement Trust",
            "Singapore Housing Committee Report",
            "URA (1989)",
            "Concept Plan Vs Master Plan",
            "Singapore Urbanisation Goals"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "Urban Planning History": {
      "course": "GESS1019",
      "parents": [
        "GESS1019"
      ],
      "topic": "Urban Planning History",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Sir Ebenezer Howard",
            "UK New Towns Movement",
            "Le Corbusier",
            "Jane Jacobs",
            "Frank Lloyd Wright"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "GESS1019": {
      "course": "GESS1019",
      "parents": [
        "City"
      ],
      "topic": "GESS1019",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Urban Planning History",
            "Singapore Urban Planning History",
            "Scope Of Involvements",
            "Singapore Economic Transformations",
            "Singapore Urbanisation Goals",
            "Transport Planning",
            "Development Control"
          ]
        }
      },
      "date": "23/08/2021",
      "important": null
    },
    "There Exists Only One": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "There Exists Only One",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∃! MA>",
            "There is only one unique"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Universal Conditional Statement": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "Universal Conditional Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∀x P(x)→Q(x) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Translate Rune": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Translate Rune",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "translate(x, y, rune)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Translates x and y"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Scale Rune Independent": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Scale Rune Independent",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "scale independent(x, y, rune)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Scales x and y independently"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Scale Rune": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Scale Rune",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "scale(factor, rune)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Scales x and y"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Overlay Runes Proportion": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Overlay Runes Proportion",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "overlay frac(topheight, dark, light)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "The topheight controls how much space between the top 2 layers"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Overlay Runes": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Overlay Runes",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "overlay(dark, light)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Overlays 2 runes on top of each other"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Hollusion": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Hollusion",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "hollusion()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Show 3d runes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Source Anaglyph": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Anaglyph",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "anaglyph()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Show 3d runes"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Big Ω Notation": {
      "course": "CS1101S",
      "parents": [
        "Orders Of Growth"
      ],
      "topic": "Big Ω Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Lower Bound",
            "The resource function r has order of growth O(𝒈(n)) if there is a positive constant k and a number n₀ such that r(n) ≥ k𝒈(n) for all n > n₀"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Big O Notation": {
      "course": "CS1101S",
      "parents": [
        "Orders Of Growth"
      ],
      "topic": "Big O Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Upper Bound",
            "The resource function r has order of growth O(𝒈(n)) if there is a positive constant k and a number n₀ such that r(n) ≤ k𝒈(n) for all n > n₀"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": "Important"
    },
    "Big Θ Notation": {
      "course": "CS1101S",
      "parents": [
        "Orders Of Growth"
      ],
      "topic": "Big Θ Notation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Upper and lower bound",
            "The resource function r has order of growth Θ(𝒈(n)) if there are positive constants k₁ k₂ and a number n0 such that k₁𝒈(n) ≤ r(n) ≤ k₂𝒈(n) for all n > n₀"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "20/08/2021",
      "important": "Important"
    },
    "Orders Of Growth": {
      "course": "CS1101S",
      "parents": [
        "Algorithm Analysis",
        "CS1101S"
      ],
      "topic": "Orders Of Growth",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Big Θ Notation",
            "Big O Notation",
            "Big Ω Notation",
            "Recurrence Solution",
            "Orders Of Magnitude"
          ]
        }
      },
      "date": "20/08/2021",
      "important": null
    },
    "Syllogism": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Statements"
      ],
      "topic": "Syllogism",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "An argument form consisting of two premises and a conclusion"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Contradiction Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Contradiction Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (~p→false)→p MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 3,
          "points": [
            "::Prove a statement is false",
            "Find a case where predicate is true, but outcome is false"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Critical Row Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Critical Row Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "In a truth table, critical rows have all T for the premises (or those involved in the hypothesis)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Transitivity Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Transitivity Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA (p→r)⋀(q→r) → (p→r) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Conjunction Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Conjunction Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋀q ⟹ p⋀q MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Elimination Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Elimination Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋁q ⟹ ~q → p MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Specialisation Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Specialisation Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋀q ⟹ p MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Generalisation Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Generalisation Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p ⟹ p⋁q  MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Modus Tollens Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Modus Tollens Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p → q ⟹ ~q → ~p MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Modus Ponens Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Modus Ponens Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p → q ⟹ p → q MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Vacuously True Method": {
      "course": "CS1231S",
      "parents": [
        "Methods Of Affirming"
      ],
      "topic": "Vacuously True Method",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "p → r is by default true, unless p=true and r=false"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Methods Of Affirming": {
      "course": "CS1231S",
      "parents": [
        "Logic"
      ],
      "topic": "Methods Of Affirming",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Vacuously True Method",
            "Modus Ponens Method",
            "Modus Tollens Method",
            "Generalisation Method",
            "Specialisation Method",
            "Elimination Method",
            "Conjunction Method",
            "Transitivity Method",
            "Critical Row Method",
            "Contradiction Method",
            "Universal Modus Ponens",
            "Universal Instantiation",
            "Universal Generalisation"
          ]
        }
      },
      "date": "19/08/2021",
      "important": null
    },
    "Limit Laws": {
      "course": "MA1521",
      "parents": [
        "Limits"
      ],
      "topic": "Limit Laws",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Limits are preserved under addition, multiplication, division, exponentiation"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Continuous Function": {
      "course": "MA1521",
      "parents": [
        "Functions"
      ],
      "topic": "Continuous Function",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "A function is continuous on an interval if it is continuous at every number in the interval",
            "<MA C⁰[x] MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Proof": {
          "section": "Proof",
          "index": 4,
          "points": [
            "Continuous: lim[h→0]ƒ(x+h) = ƒ(x)",
            "Differentiation: lim[h→0](ƒ(x+h)-ƒ(x))/h"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Composite Limit": {
      "course": "MA1521",
      "parents": [
        "Limits"
      ],
      "topic": "Composite Limit",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA lim[x→a]ƒ(𝒈(x)) = ƒ(lim[x→a]𝒈(x)) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Precise Definition Of Limit": {
      "course": "MA1521",
      "parents": [
        "Limits"
      ],
      "topic": "Precise Definition Of Limit",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ∀ε>0, ∃𝛿ε>0 st |f(x)-L|<ε whenever 0<|x-a|<𝛿ε MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": "Important"
    },
    "Limits": {
      "course": "MA1521",
      "parents": [
        "MA1521"
      ],
      "topic": "Limits",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Precise Definition Of Limit",
            "Limit Laws"
          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Composite Limit"
          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "MA1521": {
      "course": "MA1521",
      "parents": [

      ],
      "topic": "MA1521",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Limits",
            "Functions",
            "Integration",
            "Convergence",
            "Multivariable Calculus"
          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Deferred Operation": {
      "course": "CS1101S",
      "parents": [
        "Recursion"
      ],
      "topic": "Deferred Operation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Operation that moves on to the next recursion",
            "Expands all the way then contracts all the way"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Boundary Vs Recursive": {
      "course": "CS1101S",
      "parents": [
        "Recursion"
      ],
      "topic": "Boundary Vs Recursive",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Boundary is what happens at the end/edge case"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Recursion": {
      "course": "CS1101S",
      "parents": [

      ],
      "topic": "Recursion",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Function that calls itself",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 3,
          "points": [

          ],
          "sublinks": [
            "Boundary Vs Recursive",
            "Deferred Operation"
          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Source Stack Runes Proportions": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Stack Runes Proportions",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "stack frac(dec, toprune, bottomrune)",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Stacks runes based on proportions"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Application Order Reduction": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Application Order Reduction",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Functions are evaluated from within, so parameters are evaluated first",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Fewer languages"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Java Single Line Conditional": {
      "course": "CS1101S",
      "parents": [
        "Java Base",
        "Java Source"
      ],
      "topic": "Java Single Line Conditional",
      "contents": {
        "Code": {
          "section": "Code",
          "index": 0,
          "points": [
            "<MA Predicate ? Conditional : Else MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Definition": {
          "section": "Definition",
          "index": 3,
          "points": [
            "Predicate is the if, conditional is the then"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Java Source": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Java Source",
      "contents": {
        "Methods": {
          "section": "Methods",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Java Single Line Conditional",
            "Java Multiline Lambda Function"
          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Normal Order Reduction": {
      "course": "CS1101S",
      "parents": [
        "Programming Expression"
      ],
      "topic": "Normal Order Reduction",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Functions are evaluated left to right, so parameters are evaluated after the function has expanded",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 3,
          "points": [
            "Most programming languages"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Substitution Model": {
      "course": "CS1101S",
      "parents": [
        "Programming Model"
      ],
      "topic": "Substitution Model",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Substitutes all variables within code with set parameters"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Programming Model": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Programming Model",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Substitution Model",
            "Environment Model"
          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Transpose Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Transpose Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Aᵀ MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Determinant :- det(A) = det(Aᵀ)"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "18/08/2021",
      "important": null
    },
    "Triangular Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Triangular Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Data only exists in top right or bottom left triangles",
            ""
          ],
          "sublinks": [

          ]
        },
        "Properties": {
          "section": "Properties",
          "index": 3,
          "points": [
            "Determinant :- product of diagonal entries",
            "Eigenvalue :- product of diagonal entries"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Symmetric Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Symmetric Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Top right triangle = bottom left triangle",
            "<MA A = Aᵀ MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 4,
          "points": [

          ],
          "sublinks": [
            "Diagonalisable Matrix"
          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Order N Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Order N Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Square Matrix of size NxN"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Scalar Matrix": {
      "course": "MA2001",
      "parents": [
        "Diagonal Matrix",
        "Matrices"
      ],
      "topic": "Scalar Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Diagonal Matrix, with all diagonal same",
            "Scalar multiple of the /Identity Matrix"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Identity Matrix": {
      "course": "MA2001",
      "parents": [
        "Diagonal Matrix",
        "Matrices"
      ],
      "topic": "Identity Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Diagonal Matrix with all diagonal entries equal to 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Diagonal Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Diagonal Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "/Square Matrix where Aᵢⱼ=0 when i≠j",
            ""
          ],
          "sublinks": [

          ]
        },
        "Determinant": {
          "section": "Determinant",
          "index": 3,
          "points": [
            "Equal to product of entries",
            ""
          ],
          "sublinks": [

          ]
        },
        "Types": {
          "section": "Types",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "Identity Matrix",
            "Scalar Matrix"
          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Square Matrix": {
      "course": "MA2001",
      "parents": [
        "Matrices"
      ],
      "topic": "Square Matrix",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Height = Width"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Gauss Jordan Elimination": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Gauss Jordan Elimination",
      "contents": {
        "Usage": {
          "section": "Usage",
          "index": 0,
          "points": [
            "Used to make /RREF",
            ""
          ],
          "sublinks": [

          ]
        },
        "Process": {
          "section": "Process",
          "index": 3,
          "points": [
            "Carry out row-operations to make the first non-zero element in each row equal to 1",
            ""
          ],
          "sublinks": [

          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 6,
          "points": [

          ],
          "sublinks": [
            "RREF",
            "Homogeneous Equation",
            "Augmented Matrix",
            "Elementary Column Operation",
            "Elementary Row Operation"
          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Matrices": {
      "course": "MA2001",
      "parents": [
        "MA2001"
      ],
      "topic": "Matrices",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [
            ""
          ],
          "sublinks": [
            "Square Matrix",
            "Diagonal Matrix",
            "Identity Matrix",
            "Scalar Matrix",
            "Symmetric Matrix",
            "Skew Symmetric Matrix",
            "Order N Matrix",
            "Triangular Matrix",
            "Cofactor Matrix",
            "Adjoint Matrix",
            "Transition Matrix",
            "Augmented Matrix",
            "Transpose Matrix",
            "Invertible Matrix",
            "Orthogonal Matrix",
            "Diagonalisable Matrix",
            "Adjacency Matrix"
          ]
        },
        "Topics": {
          "section": "Topics",
          "index": 19,
          "points": [

          ],
          "sublinks": [
            "Matrix Multiplication"
          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Homogeneous Equation": {
      "course": "MA2001",
      "parents": [
        "Gauss Jordan Elimination"
      ],
      "topic": "Homogeneous Equation",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Constant terms are all 0"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "RREF": {
      "course": "MA2001",
      "parents": [
        "Gauss Jordan Elimination"
      ],
      "topic": "RREF",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Row Reduced Echelon Form",
            "First non-zero element in each row is 1"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "MA2001": {
      "course": "MA2001",
      "parents": [

      ],
      "topic": "MA2001",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Gauss Jordan Elimination",
            "Matrices",
            "Rank",
            "Determinant",
            "Orthogonal",
            "Diagonalisation",
            "Linear Space",
            "Linear Transformation"
          ]
        }
      },
      "date": "17/08/2021",
      "important": null
    },
    "Absorption Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Absorption Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋁(p⋀q) = p⋀(p⋁q) = p MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Universal Bound Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Universal Bound Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋀false MA>",
            "<MA p⋁true MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Idempotent Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Idempotent Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋀p MA>",
            "<MA p⋁p MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Negation Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Negation Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋀true MA>",
            "<MA p⋁false MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Identity Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Identity Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA p⋀true MA>",
            "<MA p⋁false MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Closure Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Closure Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A∈ℤ ⟺ ƒ(A)∈ℤ MA>",
            ""
          ],
          "sublinks": [

          ]
        },
        "Examples": {
          "section": "Examples",
          "index": 3,
          "points": [
            "ℤ are closed under addition/multiplication"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Distributive Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Distributive Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A⋀(B⋁C) = (A⋀B)⋁(A⋀C) MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Associative Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Associative Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A⋀(B⋀C) = (A⋀B)⋀C MA>",
            "<MA A⋁(B⋁C) = (A⋁B)⋁C MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Commutative Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Mathematics"
      ],
      "topic": "Commutative Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA A⋀B = B⋀A MA>",
            "<MA A⋁B = B⋁A MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Inverse Statement": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "Inverse Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ~P → ~Q MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Converse Statement": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "Converse Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA Q → P MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Contrapositive Statement": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "Contrapositive Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ~Q → ~P MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Conditional Statement": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "Conditional Statement",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA P → Q MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Implication Law": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "Implication Law",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA P → Q = ~P ∨ Q MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "De Morgan": {
      "course": "CS1231S",
      "parents": [
        "Laws Of Logic"
      ],
      "topic": "De Morgan",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "<MA ~(p ∧ q) = ~p ∨ ~q MA>"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "15/08/2021",
      "important": null
    },
    "Laws Of Logic": {
      "course": "CS1231S",
      "parents": [
        "Logic"
      ],
      "topic": "Laws Of Logic",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "De Morgan",
            "Implication Law",
            "Conditional Statement",
            "Contrapositive Statement",
            "Converse Statement",
            "Inverse Statement",
            "Universal Conditional Statement",
            "There Exists Only One"
          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "Source Stack N": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Stack N",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "stackn()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Stacks n runes on top of each other",
            "n will be the first parameter"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "Source Stack": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Stack",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "stack()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Stacks runes on top of each other"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "Source Quarter Turn Right": {
      "course": "CS1101S",
      "parents": [
        "Source Rune"
      ],
      "topic": "Source Quarter Turn Right",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "quarter turn right()",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 4,
          "points": [
            "Turns the rune by a quarter"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "Source Rune": {
      "course": "CS1101S",
      "parents": [
        "Source Academy"
      ],
      "topic": "Source Rune",
      "contents": {
        "Code <JV": {
          "section": "Code ",
          "index": 0,
          "points": [
            "import {} from \"rune\"",
            "",
            ""
          ],
          "sublinks": [

          ]
        },
        "Methods": {
          "section": "Methods",
          "index": 4,
          "points": [
            ""
          ],
          "sublinks": [
            "Source Quarter Turn Right",
            "Source Stack",
            "Source Stack N",
            "Source Stack Runes Proportions",
            "Source Anaglyph",
            "Source Hollusion",
            "Source Overlay Runes",
            "Source Overlay Runes Proportion",
            "Source Scale Rune",
            "Source Scale Rune Independent",
            "Source Translate Rune"
          ]
        },
        "Usage": {
          "section": "Usage",
          "index": 17,
          "points": [
            "Imports things from \"rune\" package",
            "show() will show the rune ",
            "Can import rcross, sail, corner, nova, heart, show"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "Source Academy": {
      "course": "CS1101S",
      "parents": [
        "CS1101S"
      ],
      "topic": "Source Academy",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Rune",
            "Source Curves",
            "Source Base Functions",
            "Source Advanced Functions",
            "Source Stream Functions",
            "Source Sorting Algorithms"
          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "CS1101S": {
      "course": "CS1101S",
      "parents": [

      ],
      "topic": "CS1101S",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Source Academy",
            "Programming Expression",
            "Java Source",
            "Orders Of Growth",
            "Programming Model",
            "Concurrent Programming",
            "Searching",
            "Mutability",
            "Memoization",
            "Cheatsheet For PA",
            "Cheatsheet For Finals"
          ]
        }
      },
      "date": "13/08/2021",
      "important": null
    },
    "Laws Of Mathematics": {
      "course": "CS1231S",
      "parents": [
        "Logic"
      ],
      "topic": "Laws Of Mathematics",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Commutative Law",
            "Associative Law",
            "Closure Law",
            "Distributive Law",
            "Identity Law",
            "Negation Law",
            "Idempotent Law",
            "Universal Bound Law",
            "Absorption Law"
          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Trichotomy": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Statements"
      ],
      "topic": "Trichotomy",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Exactly one of the three statements is true"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Theorem": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Statements"
      ],
      "topic": "Theorem",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Important proven statement"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Conjecture": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Statements"
      ],
      "topic": "Conjecture",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Believed to be true"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Lemma": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Statements"
      ],
      "topic": "Lemma",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Simple theorem"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Corollary": {
      "course": "CS1231S",
      "parents": [
        "Mathematical Statements"
      ],
      "topic": "Corollary",
      "contents": {
        "Definition": {
          "section": "Definition",
          "index": 0,
          "points": [
            "Simple deduction from a theorem"
          ],
          "sublinks": [

          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Mathematical Statements": {
      "course": "CS1231S",
      "parents": [
        "Logic"
      ],
      "topic": "Mathematical Statements",
      "contents": {
        "Types": {
          "section": "Types",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Corollary",
            "Lemma",
            "Conjecture",
            "Theorem",
            "Trichotomy",
            "Syllogism"
          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "Logic": {
      "course": "CS1231S",
      "parents": [
        "CS1231S"
      ],
      "topic": "Logic",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Mathematical Statements",
            "Laws Of Mathematics",
            "Laws Of Logic",
            "Methods Of Affirming"
          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    },
    "CS1231S": {
      "course": "CS1231S",
      "parents": [

      ],
      "topic": "CS1231S",
      "contents": {
        "Topics": {
          "section": "Topics",
          "index": 0,
          "points": [

          ],
          "sublinks": [
            "Logic",
            "Sets",
            "Equivalence",
            "Functions",
            "Cardinality",
            "Counting",
            "Graph Theory"
          ]
        }
      },
      "date": "12/08/2021",
      "important": null
    }
  }
}