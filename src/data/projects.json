{
  "projects": {
    "malls-card-game": {
      "title": "Malls Card Game",
      "start": "Mar'21",
      "end": "Current",
      "repo": "https://github.com/mynameizzhafeez/malls",
      "starred": true,
      "img": "projects",
      "description": "A statistics-driven card game based on the shopping malls of Singapore",
      "languages": [
        "python",
        "javascript",
        "html",
        "css"
      ],
      "tools": [
        "pandas",
        "flask",
        "angular-js"
      ],
      "skills": [
        "data-mining",
        "geospatial-analytics",
        "web-programming",
        "data-science",
        "data-extraction",
        "game-development"
      ],
      "full-description": [
        [
          "I love learning about Singapore's urban environment, including its shopping malls. As my interest grew, I began researching specific statistics for each mall, creating scripts to scrape the web and process the data."
        ],
        [
          "The game I've created is a statistics-driven card game centred around risk-taking and sacrifice. The cards have eight statistics each, which may include Latitude, Longitude, Nearby Bus Services, Number of Stores, Retail Area etc. Each statistic is treated as a separate battle and each round, players will fight four battles at once. As such, players choose which of their cards will fight which battle."
        ]
      ]
    },
    "notetogether": {
      "title": "NoteTogether",
      "start": "Mar'22",
      "end": "Aug'22",
      "repo": "https://github.com/shotnothing/NoteTogether",
      "img": "notetogether",
      "starred": true,
      "description": "A note-sharing platform with Reddit and GitHub-like functionalities",
      "languages": [
        "javascript",
        "python"
      ],
      "tools": [
        "mongodb",
        "express-js",
        "vue-js",
        "node-js",
        "postman",
        "github-actions",
        "selenium",
        "heroku"
      ],
      "skills": [
        "web-programming",
        "software-testing"
      ],
      "full-description": [
        [
          "NoteTogether is a note-sharing platform that incorporates Reddit and GitHub-like features. In essences, users can create and format their notes using our custom markdown editor, edit them, and publish them for others to see. Users can also search for notes created by others, with the option to upvote, downvote or favourite the note. If users want to make their own small edits to notes creatd by others, they can 'fork' from them, similar to GitHUb's system. Finally, this is surrounded by a credit system which encourages users to actively contribute to the platform."
        ],
        [
          "Along with my partner, we developed NoteTogether using the MEVN tech stack, which included ",
          ["link", "../merits/tools/mongodb", "MongoDB"],
          " Atlas, ",
          ["link", "../merits/tools/express-js", "Express"],
          ", ",
          ["link", "../merits/tools/vue-js", "Vue"],
          " and ",
          ["link", "../merits/tools/node-js", "Node"],
          "."
        ]
      ]
    },
    "website-react": {
      "title": "Personal React Website",
      "start": "Jul'22",
      "end": "Current",
      "repo": "https://github.com/mynameizzhafeez/website-react",
      "img": "react",
      "starred": true,
      "description": "Responsive personal website created using the React.js library",
      "languages": [
        "javascript",
        "rust",
        "python",
        "ruby",
        "html",
        "css",
        "bash",
        "c"
      ],
      "tools": [
        "react-js"
      ],
      "skills": [
        "web-programming"
      ],
      "full-description": [
        [
          "This is the current version of my website, using the React library as my frontend. It features some of the works I've done, the merites I've attained, and a blog where I share some of my experiences."
        ],
        [
          "It contains many other projects within it, accessed through different subpages in the site. Some preprocessing of the JS Scripts and data were done in Rust, Python and Ruby."
        ],
        [
          "Deployment is done through automatic CI/CD into GitHub and then Netlify."
        ]
      ]
    },
    "more": {
      "title": "More Projects",
      "link": "projects",
      "img": "project",
      "ignore": true
    },
    "dynamic-resource-optimizer": {
      "title": "Dynamic Resource Optimizer",
      "start": "Feb'19",
      "end": "Jan'21",
      "repo": "https://scis.smu.edu.sg/news/2018/dec/17/scdf-rides-data-get-ambulances-patients-more-quickly",
      "img": "scdf",
      "starred": true,
      "description": "Optimisation model that recommends the placement of emergency vehicles",
      "languages": [
        "python",
        "ruby"
      ],
      "tools": [
        "google-cloud-platform",
        "pandas",
        "jupyter-notebook",
        "tableau",
        "microsoft-excel",
        "telegram-bots",
        "flask"
      ],
      "skills": [
        "geospatial-analytics",
        "operational-analysis",
        "data-science",
        "databases",
        "data-cleaning",
        "web-scraping",
        "cloud-computing"
      ],
      "full-description": [
        [
          "Dynamic Resource Optimisation is a simulation and optimisation platform that recommends the optimal placement of emergency appliances to minimise overall response time in attending to emergency incidents. Although I mainly use it for producing analytics reports and predictions, I was also involved in the development of the project. In particular, my experience as an end user allowed me to implement many of my own improvements to the model. For instance, the entire analytics process was originally a six-stepped one, but I managed to drop it down to a more intuitive two steps."
        ],
        [
          "Not only that, but I was also responsible for developing the master file for the project, which meant compiling information from over a dozen sources and file formats, all the while ensuring the data's accuracy. I was also responsible for generating predicted data to account for population trends. I took this project seriously, as it had tangible impact on Singapore's emergency medical response times."
        ]
      ]
    },
    "geospatial-management": {
      "title": "Geo Management System",
      "start": "Feb'22",
      "end": "Jul'22",
      "repo": "https://github.com/mynameizzhafeez/geo",
      "img": "languages",
      "starred": true,
      "description": "A Python package to process and manage geospatial data in Singapore",
      "languages": [
        "python"
      ],
      "tools": [
        "pandas",
        "google-cloud-platform"
      ],
      "skills": [
        "geospatial-analytics",
        "data-structures",
        "data-mining"
      ],
      "full-description": [
        [
          "This Python package processes and manages data about various geospatial features in Singapore, including the planning areas, malls, schools, MRT system and bus services."
        ],
        [
          "I created this to support my other projects like ",
          ["link", "../works/projects/malls-card-game", "Malls Card Game"],
          ", ",
          ["link", "../works/projects/meetupmaker", "MeetupMaker"],
          " and my ",
          ["link", "../works/puzzles/mrt-puzzle", "MRT Puzzle"],
          "."
        ],
        [
          "Apart from that, I practiced strong type annotations and programming practices. I also implemented quite a lot of useful data structures, such as the KDTree, AVLTree, Priority Queue and my own BoundsTree."
        ]
      ]
    },
    "notes-telegram-bot": {
      "title": "Notes Telegram Bot",
      "start": "Jul'21",
      "end": "Sep'21",
      "repo": "https://github.com/mynameizzhafeez/telegram/blob/main/code.js",
      "img": "telegram",
      "description": "Telegram Bot that lets users search and review notes on the go",
      "languages": [
        "javascript"
      ],
      "tools": [
        "telegram-bots",
        "google-cloud-platform"
      ],
      "skills": [
        "databases"
      ],
      "full-description": [
        [
          "This Telegram bot @HalfCSBot allows users to access the notes created by me for my modules and extra-curricular learning. It uses a custom markdown style that renders into Telegram redirect links, and is stored within Google Sheets."
        ],
        [
          "Apart from redirects that lead to further notes, this Telegram bot also features a search function, that returns a list of topics ranked by a metric of importance. It is also capable of rendering cheatsheets, for use in examinations."
        ],
        [
          "Close to a dozen people have used this bot ever since it was created, and hopefully it managed to help them even a little."
        ]
      ]
    },
    "halal-recommender": {
      "title": "Halal Recommender",
      "start": "Jun'20",
      "end": "Mar'21",
      "repo": "https://github.com/mynameizzhafeez/telegram/blob/main/geo.js",
      "img": "halal",
      "description": "Telegram Bot that recommends halal food based on location and preferences",
      "languages": [
        "javascript"
      ],
      "tools": [
        "telegram-bots",
        "google-cloud-platform"
      ],
      "skills": [
        "databases",
        "cloud-computing"
      ],
      "full-description": [
        [
          "This Telegram Bot @HalfGeoBot allows users to search for Halal food around a specified location. It is powered by Google Apps Script, and houses its data on Google Sheets. Through the bot, users can input their preferred location, as well as provide additional search parameters for the cuisine and restaurant name. Afterwards, the bot will spit out the list of Halal food places that fit the criteria, sorted by distance. Ever since created, the bot has been used by over a dozen people."
        ]
      ]
    },
    "spiderman": {
      "title": "Spiderman Scraper",
      "start": "Jul'19",
      "end": "Jun'20",
      "repo": "https://github.com/mynameizzhafeez/wilcoxon/blob/main/spiderman.py",
      "img": "spiderman",
      "description": "Enhanced web-scraping tool that simplifies the process by providing shortcuts",
      "languages": [
        "python"
      ],
      "tools": [

      ],
      "skills": [
        "web-scraping",
        "data-mining",
        "data-extraction"
      ],
      "full-description": [
        [
          "After reading through the BeautifulSoup documentation, I realised that many common operations are not in the module. As such, I filled in as many holes as I possibly can, applying OOP principles to boost the extensibility of my web scraper. Among its features are the following:"
        ],
        [
          "- Extract all tables from a particular webpage and merge them based on whichever tables have the same column names"
        ],
        [
          "- Extract hrefs and insert them into the text itself using delimiters like brackets (same can be done for tables and lists)"
        ],
        [
          "- Standardises all hrefs to be complete links, rather than relational ones"
        ],
        [
          "I use this module most frequently, so I feel that it is the most impactful out of my earlier projects (to me, at least)."
        ]
      ]
    },
    "meetupmaker": {
      "title": "MeetupMaker",
      "start": "Jun'22",
      "end": "Jul'22",
      "repo": "https://github.com/mynameizzhafeez/MeetupMaker",
      "img": "projects",
      "description": "A geospatial app that recommends meetup locations based on user positions",
      "languages": [
        "python",
        "sql"
      ],
      "tools": [
        "django",
        "postgresql",
        "heroku"
      ],
      "skills": [
        "web-programming",
        "geospatial-analytics",
        "databases"
      ],
      "full-description": [
        [
          "MeetupMaker was built using Django REST API and helps users make decisions on when and where to meet up with friends. For example, users want to meet up after their work ends. So, a request is sent with information regarding their work location and work end time, and a recommended meetup location is returned. It will be expanded upon to include better search criteria. Further development is halted for now, as I figure out how to properly scrape and store information about shops and stores."
        ]
      ]
    },
    "notes-searcher-app": {
      "title": "Notes Search App",
      "start": "Jul'22",
      "end": "Sep'22",
      "link": "../works/notes/search",
      "repo": "https://www.izzhafeez.com/#/works/notes/search/",
      "img": "react",
      "description": "Note-viewing site for easy access of personal notes in a structured format",
      "languages": [
        "javascript",
        "python",
        "ruby"
      ],
      "tools": [
        "react-js"
      ],
      "skills": [
        "web-programming",
        "web-scraping"
      ],
      "full-description": [
        [
          "Here are the notes I've accumulated over the years. Mostly notes from CS, but there are other topics as well. I store them on my Google Sheets, and I used Python and Ruby to process this data for this site. I also used a custom markdown for my notes, using '?>' to indicate a subtopic relationship etc.. It works for my Telegram Bots, but I don't know whether it works fully on this app (as I haven't tested it yet)."
        ],
        [
          "Do use the search bar to look for notes based on title. There is no backend involved in this, just pure React.js. As such, the amount of stress I can put on the frontend cannot be very high."
        ]
      ]
    },
    "chords-search-engine": {
      "title": "Chords Search Engine",
      "start": "Feb'20",
      "end": "Mar'21",
      "repo": "https://github.com/mynameizzhafeez/chords",
      "img": "music",
      "description": "Finds, standardises and analyses the chord progression of any song",
      "languages": [
        "python"
      ],
      "tools": [
        "flask"
      ],
      "skills": [
        "web-scraping",
        "data-mining",
        "data-extraction",
        "web-programming"
      ],
      "full-description": [
        [
          "In short, this module allows the user to find out the chords used in a particular song. Given the song title and song artist as parameters, the module will scrape the web for existing transcriptions for the song. Afterwards, using a series of pattern matches, the module standardises the chord progressions into the same key and further segments them into manageable sections. Finally, the data is compiled based on popularity, outputting the most accurate result. Using this standardised data, I am able to advance my development of my RNN model, which tries to predict chords based on lyrics."
        ]
      ]
    },
    "mrt-analysis": {
      "title": "MRT Paths Analysis",
      "start": "Sep'21",
      "end": "Sep'21",
      "repo": "https://github.com/mynameizzhafeez/MRT-puzzle",
      "img": "mrt",
      "description": "Analysis of Hamiltonian Paths in Singapore's MRT Network",
      "languages": [
        "python"
      ],
      "tools": [
        "jupyter-notebook"
      ],
      "skills": [
        "data-visualization"
      ],
      "full-description": [
        [
          "As part of the Mathematical Society's Weekly Puzzle Challenge, I've made this graph theory question regarding Singapore's MRT network. The question reads:"
        ],
        [
          "“Your train-loving friend is travelling to Singapore for the first time and wants to visit all the MRT interchanges (shown in the picture). However, he does not want to visit or pass through any station more than once. Furthermore, he wants to take each non-LRT (non-grey) train line exactly 3 distinct times during the journey. Can you help plan his route?”"
        ],
        [
          "It turns out, there are 46 possible solutions to this puzzle, and this projects details the methodology I used when extracting, parsing, solving and visualising the problem. Do forgive my code formatting; it was done in a hurry and didn't use knowledge from my CS2040S DSA course."
        ]
      ]
    },
    "jap-vocab-trainer": {
      "title": "Japanese Vocab Trainer",
      "start": "May'22",
      "end": "Aug'22",
      "repo": "https://github.com/mynameizzhafeez/jap-vocab-trainer",
      "img": "japanese",
      "description": "Anki-like Rust CLI application for practicing Japanese Kanji",
      "languages": [
        "rust",
        "japanese"
      ],
      "tools": [
        
      ],
      "skills": [

      ],
      "full-description": [
        [
          "This Rust CLI application works like Anki in that I can review my vocabulary list for Japanese. Specifically, the application tests my knowledge of kanji pronunciation, and if I get it wrong, the application will bump up that word's difficulty. It would then appear more often until I get it right."
        ]
      ]
    },
    "singapore-django-project": {
      "title": "Singapore Simulator",
      "start": "Mar'21",
      "end": "Jun'21",
      "repo": "https://github.com/mynameizzhafeez/singapore",
      "img": "languages",
      "description": "Django project for simulating Singapore's urban geography",
      "languages": [
        "python"
      ],
      "tools": [
        "django"
      ],
      "skills": [
        "web-programming"
      ],
      "full-description": [
        [
          "A discontinued project for simulating Singapore's urban geography, and is my second Django project. All it can do is calculate distances, as well as the elevation at any given point, with frontends implemented in Django as well."
        ]
      ]
    },
    "language-review-bot": {
      "title": "Language Review Bot",
      "start": "Apr'20",
      "end": "May'20",
      "repo": "https://github.com/mynameizzhafeez/telegram/blob/main/vocab.js",
      "img": "telegram",
      "description": "Telegram Bot that provides monthly reports and dictionary features to facilitate the language-learning process",
      "languages": [
        "javascript"
      ],
      "tools": [
        "telegram-bots",
        "google-cloud-platform"
      ],
      "skills": [
        "databases"
      ],
      "full-description": [
        [
          "This Telegram bot has helped me study for my many language tests, mainly my HSK and my JLPT tests. Through it, I can search for words like a dictionary, giving me results in Chinese, Japanese and Korean. Also, it sends me monthly and weekly reports based on what words I've recently learnt."
        ]
      ]
    },
    "programming-lines-counter": {
      "title": "Programming Lines Counter",
      "start": "Aug'22",
      "end": "Aug'22",
      "repo": "https://github.com/mynameizzhafeez/website-react/tree/master/src/data/coding-languages",
      "img": "c",
      "description": "For a selection of languages, count the number of lines of code written across multiple files",
      "languages": [
        "c"
      ],
      "tools": [

      ],
      "skills": [

      ],
      "full-description": [
        [
          "I made this project as a practice for C programming, which I took that semester. It basically counts the number of lines of code that I wrote in each language, scraping each folder in my directory."
        ],
        [
          "While the script largely has no bugs, due to Apple's auto upload to iCloud, many of the script folders are made unavailable to scrapers. As such, many of the numbers are under-represented."
        ],
        [
          "Also, it was difficult to map all my Python and JavaScript codes, as they could be hidden within ipynb files or vue or tsx files. So some complex regex searches were needed for those cases."
        ]
      ]
    },
    "mrt-simulator": {
      "title": "MRT Simulation Module",
      "start": "Feb'22",
      "end": "Feb'22",
      "repo": "https://github.com/mynameizzhafeez/MRT",
      "img": "mrt",
      "description": "OOP Java project to simulate the MRT network",
      "languages": [
        "java"
      ],
      "tools": [

      ],
      "skills": [

      ],
      "full-description": [
        [
          "While undergoing my CS2030S and CS2040S courses in Java, I had some additional practice when developing this MRT simulator. Essentially, I implemented my AVLTree as well as my Double Linked List in this module, and that's pretty much the entire development cycle. I have no use for this, as I already have it in Python."
        ]
      ]
    },
    "self-zooming-matrix": {
      "title": "Self-Zooming Matrix",
      "start": "Aug'22",
      "end": "Aug'22",
      "repo": "https://github.com/mynameizzhafeez/SZMatrix",
      "img": "cpp",
      "description": "Space-partitioning data structure to improve queries for clustered points in 2D space",
      "languages": [
        "c++"
      ],
      "tools": [
        
      ],
      "skills": [
        
      ],
      "full-description": [
        [
          "I had this idea of efficient storage of geographic points. Essentially, we have a rectangular area in 2D space split into 4 equal parts. We then add points to this area. When the number of points in the rectangle becomes too large, we split, or 'balance' the data structure, by duplicating the data structure 4 times. In this way, we can increase the memory allocated to certain regions, allowing for appropriate representation of clustered points."
        ]
      ]
    },
    "sentence-searcher": {
      "title": "Sentence Searcher",
      "start": "May'20",
      "end": "Mar'21",
      "repo": "https://github.com/mynameizzhafeez/wilcoxon/blob/main/language.py",
      "img": "languages",
      "description": "Extracts vocabulary and sample sentences for Chinese, Japanese and Korean words",
      "languages": [
        "python",
        "chinese",
        "japanese",
        "korean"
      ],
      "tools": [

      ],
      "skills": [
        "web-scraping",
        "data-mining",
        "data-extraction"
      ],
      "full-description": [
        [
          "I have a deep passion for learning foreign languages and as such, I have made several scripts that improve my learning journey. In this module, I detail the scripts I've made to help me improve my Chinese, Japanese and Korean; they offer the following functionality:"
        ],
        [
          "- Compile vocabulary words required for HSK, JLPT and TOPIK tests"
        ],
        [
          "- Compile grammar lessons from free sources"
        ],
        [
          "- Search for sample sentences based on any given word"
        ],
        [
          "I've also implemented the same features for French and Spanish, but they are not included as they don't align with my current language goals."
        ]
      ]
    },
    "school-codes": {
      "title": "NUS CS Codes",
      "start": "Aug'21",
      "end": "Current",
      "repo": "https://github.com/mynameizzhafeez/School",
      "img": "nus",
      "description": "The codes I've created so far for my Computer Science Course in NUS",
      "languages": [
        "java",
        "c",
        "sql",
        "javascript",
        "python",
        "assembly"
      ],
      "skills": [
        "databases",
        "data-cleaning",
        "data-visualization",
        "data-structures",
        "software-testing"
      ],
      "tools": [
        "microsoft-excel"
      ],
      "full-description": [
        [
          "This is my school folder that I keep on GitHub for safe-keeping. You may see it if you'd like, but I'm not really proud of anything I've built in there. Reason being, they were just assignments; I didn't really think of those projects by myself."
        ]
      ]
    },
    "geospatial-extraction-tool": {
      "title": "Geo Extraction Tool",
      "start": "May'19",
      "end": "Mar'21",
      "repo": "https://github.com/mynameizzhafeez/wilcoxon/blob/main/geo.py",
      "img": "languages",
      "description": "Web scraping tool for extracting geospatial data",
      "languages": [
        "python"
      ],
      "tools": [

      ],
      "skills": [
        "web-scraping",
        "data-mining",
        "data-extraction",
        "geospatial-analytics",
        "data-cleaning"
      ],
      "full-description": [
        [
          "This web scraping tool extracts data from numerous sources pertaining to locations in Singapore. Its main function is to process Singapore's MRT, Bus and Road network, but also offers queries on empty parking lots and elevation. I heavily leveraged the use of Geopandas and Shapely when compiling this data, as they are helpful in dealing with such data."
        ],
        [
          "The data extracted using this script has since been uploaded onto Google Sheets."
        ]
      ]
    },
    "movielens-analysis": {
      "title": "Movielens Analysis",
      "start": "Jan'20",
      "end": "Jan'20",
      "repo": "https://github.com/mynameizzhafeez/arcturus",
      "img": "r",
      "description": "Analysis of Movielens data for HarvardX course",
      "languages": [
        "r"
      ],
      "tools": [

      ],
      "skills": [
        "data-science",
        "data-visualization"
      ],
      "full-description": [
        [
          "This is an analysis of Movielens data for HarvardX course. This is a standard dataset for data science courses, so there is nothing much to say about it. It was used purely for this course and nothing else."
        ]
      ]
    }
  }
}